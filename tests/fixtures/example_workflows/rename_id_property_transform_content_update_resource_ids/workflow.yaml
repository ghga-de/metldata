operations:
  # Rename id property with accession
  - name: rename_id_property
    description: "Rename id property for each {{ class_name }}"
    args:
      class_name: "{{{ item.class_name }}}"
      id_property_name: "{{{ item.id_property_name }}}"
      description: Id property name is now accession.
    loop:
      - class_name: File
        id_property_name: accession
      - class_name: Dataset
        id_property_name: accession
      - class_name: Sample
        id_property_name: accession
      - class_name: Experiment
        id_property_name: accession

  # Transform content schema and the content to add current resource ids as alias for
  # not loosing that information after replace resource ids step
  - name: transform_content
    description: "Add alias to the content of {{ class_name }}"
    args:
      class_name: "{{{ item.class_name }}}"
      content_schema: "{{{ item.content_schema }}}"
      embedding_profile: "{{{ item.embedding_profile }}}"
      content_template_yaml: "{{{ item.content_template_yaml }}}"
    loop:
      - class_name: File
        content_schema:
          {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "additionalProperties": false,
            "description": "A file is an object that contains information generated from a process, either an Experiment or an Analysis.",
            "properties":
              {
                "checksum": { "type": "string" },
                "filename": { "type": "string" },
                "format": { "type": "string" },
                "size": { "type": "integer" },
                "alias": { "type": "string" },
              },
            "required": ["filename", "format", "checksum", "size", "alias"],
            "type": "object",
          }
        embedding_profile: {}
        content_template_yaml: |
          {% for key in content_property_names %}
            {% set value = original.get(key) %}
            {% if value is not none %}
          {{ key }}: {{ value | tojson }}
            {% endif %}
          {% endfor %}
          alias: {{ original[id_property_name] }}
      - class_name: Dataset
        content_schema:
          {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "additionalProperties": false,
            "description": "A dataset that is a collection of files.",
            "properties":
              {
                "dac_contact": { "type": "string" },
                "alias": { "type": "string" },
              },
            "required": ["alias"],
            "type": "object",
          }
        embedding_profile: { "files": False }
        content_template_yaml: |
          {% for key in content_property_names %}
            {% set value = original.get(key) %}
            {% if value is not none %}
          {{ key }}: {{ value | tojson }}
            {% endif %}
          {% endfor %}
          alias: {{ original[id_property_name] }}

      - class_name: Sample
        content_schema:
          {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "additionalProperties": false,
            "description": "A sample used to generate files in the context of an experiment.",
            "properties":
              {
                "description": { "type": "string" },
                "alias": { "type": "string" },
              },
            "required": ["alias"],
            "type": "object",
          }
        embedding_profile: { "files": False }
        content_template_yaml: |
          {% for key in content_property_names %}
            {% set value = original.get(key) %}
            {% if value is not none %}
          {{ key }}: {{ value | tojson }}
            {% endif %}
          {% endfor %}
          alias: {{ original[id_property_name] }}
      - class_name: Experiment
        content_schema:
          {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "additionalProperties": false,
            "description": "An experiment containing one or multiple samples.",
            "properties":
              {
                "description": { "type": "string" },
                "alias": { "type": "string" },
              },
            "required": ["alias"],
            "type": "object",
          }
        embedding_profile: { "samples": False }
        content_template_yaml: |
          {% for key in content_property_names %}
            {% set value = original.get(key) %}
            {% if value is not none %}
          {{ key }}: {{ value | tojson }}
            {% endif %}
          {% endfor %}
          alias: {{ original[id_property_name] }}

  # Replace resource ids with the values given in the annotation
  - name: replace_resource_ids
    description: "Replace resource ids of {{ class_name }}"
    args:
      class_name: "{{{ item.class_name }}}"
    loop:
      - class_name: File
      - class_name: Dataset
      - class_name: Sample
      - class_name: Experiment
