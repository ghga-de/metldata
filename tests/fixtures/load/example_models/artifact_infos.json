[
  {
    "description": "added_accessions",
    "name": "added_accessions",
    "resource_classes": {
      "Analysis": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analyses",
          "target_class": "Analysis"
        },
        "description": "An Analysis is a data transformation that transforms input data to output data.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis is a data transformation that transforms input data to output data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The alias of the Analysis Method that is associated with this Analysis.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing how this Analysis was carried out (e.g., description of computational tools, pipelines, workflows).",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Analysis' entity (EGAZ).",
              "type": "string"
            },
            "research_data_files": {
              "description": "One or more aliases of the Research Data Files that this Analysis used as input to create Process Data Files.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "The title that describes an entity.",
              "type": "string"
            },
            "type": {
              "description": "The type of this Analysis.",
              "type": "string"
            }
          },
          "required": [
            "analysis_method",
            "title",
            "research_data_files",
            "alias",
            "accession"
          ],
          "title": "Analysis",
          "type": "object"
        },
        "name": "Analysis"
      },
      "AnalysisMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_methods",
          "target_class": "AnalysisMethod"
        },
        "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "description": {
              "description": "Description of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name identifying this Analysis Method.",
              "type": "string"
            },
            "parameters": {
              "description": "Key/value pairs where key corresponds to a parameter name and value corresponds to a parameter value (e.g., 'aligner' = 'star_salmon',  'hisat2_build_memory' = '200.GB', 'split_fastq' = 50000000).",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "software_versions": {
              "description": "key/value pairs where key corresponds to a software name and value corresponds to a version descriptor (e.g., `salmon` = '1.3.0', `trim-galore` = '0.6.6', `bedtools` = '2.29.2').",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of an entity. Note: Not to be confused with rdf:type.",
              "type": "string"
            },
            "workflow_doi": {
              "description": "A digital object identifier for the workflow. Can be a publication or the workflow commit that was used for the Analysis.",
              "type": "string"
            },
            "workflow_name": {
              "description": "The workflow name.",
              "type": "string"
            },
            "workflow_repository": {
              "description": "The workflow repository (e.g., the URL).",
              "type": "string"
            },
            "workflow_tasks": {
              "description": "Tasks performed by the workflow",
              "type": "string"
            },
            "workflow_version": {
              "description": "The workflow version.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "workflow_name",
            "workflow_repository",
            "workflow_doi",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethod",
          "type": "object"
        },
        "name": "AnalysisMethod"
      },
      "AnalysisMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_method_supporting_files",
          "target_class": "AnalysisMethodSupportingFile"
        },
        "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The Analysis Process associated with an entity.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethodSupportingFile",
          "type": "object"
        },
        "name": "AnalysisMethodSupportingFile"
      },
      "DataAccessCommittee": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_committees",
          "target_class": "DataAccessCommittee"
        },
        "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "email": {
              "description": "The email of the Data Access Committee (e.g., DAC[at]email.com). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "institute": {
              "description": "The Institute a person is affiliated with.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "institute",
            "alias",
            "accession"
          ],
          "title": "DataAccessCommittee",
          "type": "object"
        },
        "name": "DataAccessCommittee"
      },
      "DataAccessPolicy": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_policies",
          "target_class": "DataAccessPolicy"
        },
        "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
        "json_schema": {
          "$defs": {
            "DataUseModifierEnum": {
              "description": "Permitted values for data use modifier.",
              "enum": [
                "CLINICAL_CARE_USE",
                "RETURN_TO_DATABASE_OR_RESOURCE",
                "INSTITUTION_SPECIFIC_RESTRICTION",
                "PROJECT_SPECIFIC_RESTRICTION",
                "USER_SPECIFIC_RESTRICTION",
                "TIME_LIMIT_ON_USE",
                "PUBLICATION_MORATORIUM",
                "GEOGRAPHICAL_RESTRICTION",
                "ETHICS_APPROVAL_REQUIRED",
                "COLLABORATION_REQUIRED",
                "PUBLICATION_REQUIRED",
                "NOT_FOR_PROFIT_NON_COMMERCIAL_USE_ONLY",
                "NON_COMMERCIAL_USE_ONLY",
                "NOT_FOR_PROFIT_ORGANISATION_USE_ONLY",
                "GENETIC_STUDIES_ONLY",
                "NO_GENERAL_METHODS_RESEARCH",
                "RESEARCH_SPECIFIC_RESTRICTIONS",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_PROHIBITED"
              ],
              "title": "DataUseModifierEnum",
              "type": "string"
            },
            "DataUsePermissionEnum": {
              "description": "Permitted values for data use permission.",
              "enum": [
                "GENERAL_RESEARCH_USE",
                "HEALTH_OR_MEDICAL_OR_BIOMEDICAL_RESEARCH",
                "DISEASE_SPECIFIC_RESEARCH",
                "NO_RESTRICTION",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_ONLY"
              ],
              "title": "DataUsePermissionEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_committee": {
              "description": "The Data Access Committee linked to this Data Use Policy.",
              "type": "string"
            },
            "data_use_modifier_ids": {
              "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_use_modifier_terms": {
              "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
              "items": {
                "$ref": "#/$defs/DataUseModifierEnum"
              },
              "type": "array"
            },
            "data_use_permission_id": {
              "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
              "type": "string"
            },
            "data_use_permission_term": {
              "$ref": "#/$defs/DataUsePermissionEnum",
              "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
            },
            "description": {
              "description": "A short description for this Data Access Policy.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name for this Data Access Policy.",
              "type": "string"
            },
            "policy_text": {
              "description": "The complete text for the Data Access Policy.",
              "type": "string"
            },
            "policy_url": {
              "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "policy_text",
            "data_use_permission_term",
            "data_use_permission_id",
            "data_access_committee",
            "alias",
            "accession"
          ],
          "title": "DataAccessPolicy",
          "type": "object"
        },
        "name": "DataAccessPolicy"
      },
      "Dataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "datasets",
          "target_class": "Dataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_policy": {
              "description": "The Data Access Policy that applies to this Dataset.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession"
          ],
          "title": "Dataset",
          "type": "object"
        },
        "name": "Dataset"
      },
      "Experiment": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiments",
          "target_class": "Experiment"
        },
        "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description of this Experiment.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Run' entity (EGAR).",
              "type": "string"
            },
            "experiment_method": {
              "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
              "type": "string"
            },
            "sample": {
              "description": "The alias of one or more Samples that are associated with this Experiment.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
              "type": "string"
            },
            "type": {
              "description": "The type of this Experiment.",
              "type": "string"
            }
          },
          "required": [
            "experiment_method",
            "title",
            "description",
            "sample",
            "alias",
            "accession"
          ],
          "title": "Experiment",
          "type": "object"
        },
        "name": "Experiment"
      },
      "ExperimentMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_methods",
          "target_class": "ExperimentMethod"
        },
        "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "EndBiasEnum": {
              "description": "Permitted values for end bias.",
              "enum": [
                "3_PRIME_END",
                "5_PRIME_END",
                "FULL_LENGTH"
              ],
              "title": "EndBiasEnum",
              "type": "string"
            },
            "FlowCellTypeEnum": {
              "description": "Permitted values for flow cell type.",
              "enum": [
                "ILLUMINA_NOVA_SEQ_S2",
                "ILLUMINA_NOVA_SEQ_S4",
                "PROMETHION",
                "FLONGLE",
                "MINION",
                "GRIDION",
                "OTHER"
              ],
              "title": "FlowCellTypeEnum",
              "type": "string"
            },
            "InstrumentModelEnum": {
              "description": "Permitted values for the instrument model.",
              "enum": [
                "454_GS",
                "454_GS_20",
                "454_GS_FLX",
                "454_GS_FLX_TITANIUM",
                "454_GS_FLX+",
                "454_GS_JUNIOR",
                "AB_310_GENETIC_ANALYZER",
                "AB_3130_GENETIC_ANALYZER",
                "AB_3130XL_GENETIC_ANALYZER",
                "AB_3500_GENETIC_ANALYZER",
                "AB_3500XL_GENETIC_ANALYZER",
                "AB_3730_GENETIC_ANALYZER",
                "AB_3730XL_GENETIC_ANALYZER",
                "AB_5500_GENETIC_ANALYZER",
                "AB_5500XL_GENETIC_ANALYZER",
                "AB_5500XL-W_GENETIC_ANALYSIS_SYSTEM",
                "BGISEQ-50",
                "BGISEQ-500",
                "DNBSEQ-G400",
                "DNBSEQ-G400_FAST",
                "DNBSEQ-G50",
                "DNBSEQ-T7",
                "ELEMENT_AVITI",
                "GRIDION",
                "HELICOS_HELISCOPE",
                "HISEQ_X_FIVE",
                "HISEQ_X_TEN",
                "ILLUMINA_GENOME_ANALYZER",
                "ILLUMINA_GENOME_ANALYZER_II",
                "ILLUMINA_GENOME_ANALYZER_IIX",
                "ILLUMINA_HISCANSQ",
                "ILLUMINA_HISEQ_1000",
                "ILLUMINA_HISEQ_1500",
                "ILLUMINA_HISEQ_2000",
                "ILLUMINA_HISEQ_2500",
                "ILLUMINA_HISEQ_3000",
                "ILLUMINA_HISEQ_4000",
                "ILLUMINA_HISEQ_X",
                "ILLUMINA_MISEQ",
                "ILLUMINA_MINISEQ",
                "ILLUMINA_NOVASEQ_6000",
                "ILLUMINA_NOVASEQ_X",
                "ILLUMINA_ISEQ_100",
                "ION_GENESTUDIO_S5",
                "ION_GENESTUDIO_S5_PLUS",
                "ION_GENESTUDIO_S5_PRIME",
                "ION_TORRENT_GENEXUS",
                "ION_TORRENT_PGM",
                "ION_TORRENT_PROTON",
                "ION_TORRENT_S5",
                "ION_TORRENT_S5_XL",
                "MGISEQ-2000RS",
                "MINION",
                "NEXTSEQ_1000",
                "NEXTSEQ_2000",
                "NEXTSEQ_500",
                "NEXTSEQ_550",
                "PACBIO_RS",
                "PACBIO_RS_II",
                "PROMETHION",
                "SEQUEL",
                "SEQUEL_II",
                "SEQUEL_IIE",
                "UG_100",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "InstrumentModelEnum",
              "type": "string"
            },
            "LibraryPreparationKitRetailNameEnum": {
              "description": "Permitted values for library preparation kit retail name.",
              "enum": [
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V2",
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V3",
                "ACCEL_NGS_2_S_PLUS_DNA_LIBRARY_KIT",
                "ACCEL_NGS_METHYL_SEQ_DNA",
                "AGILENT_STRAND_SPECIFIC_RNA",
                "AGILENT_SURE_SELECT_CUSTOM_ENRICHMENT_KIT",
                "AGILENT_SURE_SELECT_V3",
                "AGILENT_SURE_SELECT_V4",
                "AGILENT_SURE_SELECT_V4_UTRS",
                "AGILENT_SURE_SELECT_V5",
                "AGILENT_SURE_SELECT_V5_UTRS",
                "AGILENT_SURE_SELECT_V6",
                "AGILENT_SURE_SELECT_V6_UTRS",
                "AGILENT_SURE_SELECT_V6_PLUS_ONE",
                "AGILENT_SURE_SELECT_V6_PLUS_TWO",
                "AGILENT_SURE_SELECT_V8",
                "AGILENT_SURE_SELECT_V8_UTRS",
                "AGILENT_SURE_SELECT_V8_NCV",
                "AGILENT_SURE_SELECT_QXT_WGS",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_ONE",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_TWO",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_ONE",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_TWO",
                "AGILENT_CLEAR_SEQ_COMPREHENSIVE_CANCER_XT",
                "AGILENT_SURE_SELECT_CUSTOM_TIER1",
                "AGILENT_SURE_SELECT_CUSTOM_TIER2",
                "AGILENT_SURE_SELECT_CUSTOM_TIER3",
                "AGILENT_SURE_SELECT_CUSTOM_TIER4",
                "AGILENT_SURE_SELECT_CUSTOM_TIER5",
                "AVENIO_CT_DNA_TARGETED_KIT",
                "AVENIO_CT_DNA_SURVEILLANCE_KIT",
                "AVENIO_CT_DNA_EXPANDED_KIT",
                "IDT_X_GEN_EXOME_RESEARCH_PANEL",
                "ILLUMINA_DNA_PCR_FREE_PREP",
                "ILLUMINA_NEXTERA_DNA_FLEX",
                "ILLUMINA_DNA_PREP",
                "ILLUMINA_NEXTERA_EXOME_ENRICHMENT_KIT",
                "ILLUMINA_DNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_DNA_PREP_WITH_EXOME_2_5_ENRICHMENT",
                "ILLUMINA_STRANDED_M_RNA_PREP",
                "ILLUMINA_NEXTERA_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_NEXTERA_XT_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_RNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_TRU_SEQ_CH_IP_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_LOW_INPUT_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_V_1_5",
                "ILLUMINA_TRU_SEQ_DNA_EXOME",
                "ILLUMINA_TRU_SEQ_DNA_NANO",
                "ILLUMINA_TRU_SEQ_DNA_NANO_LIBRARY_PREP_KIT_FOR_NEO_PREP",
                "ILLUMINA_TRU_SEQ_NANO_DNA_HT",
                "ILLUMINA_TRU_SEQ_NANO_DNA_LT",
                "ILLUMINA_TRU_SEQ_FFPE_DNA_LIBRARY_PREP_QC_KIT",
                "ILLUMINA_TRU_SEQ_DNA_PCR_FREE",
                "ILLUMINA_TRU_SEQ_RNA_LIBRARY_PREP_KIT_V2",
                "ILLUMINA_TRU_SEQ_RNA_EXOME",
                "ILLUMINA_TRU_SEQ_SMALL_RNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_M_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA_WITH_RIBO_ZERO_GOLD",
                "VAHTS_TOTAL_RNA_SEQ_H_M_R_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "ILLUMINA_NEXTERA_XT_DNA",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_STEM_CELL_PANEL",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_P_53_PANEL",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_HIGH_THROUGHPUT",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_CT_DNA",
                "ILLUMINA_TRU_SIGHT_RNA_FUSION_PANEL",
                "ILLUMINA_TRU_SIGHT_RNA_PAN_CANCER",
                "ILLUMINA_TRU_SIGHT_TUMOR_15",
                "ILLUMINA_TRU_SIGHT_TUMOR_170",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_BRCA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CANCER_HOTSPOT_PANEL_V2",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CHILDHOOD_CANCER_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_COMPREHENSIVE_PANEL_V3",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_DNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_FUSION_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_FOCUS_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_REPERTOIRE_PLUS_TCR_BETA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_RESPONSE_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_LIBRARY_PREP_INDEXES_AND_ACCESSOIRES",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_MYELOID_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_ON_DEMAND",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TCR_BETA_SR_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TRANSCRIPTOME_HUMAN_GENE_EXPRESSION_PANEL",
                "ILLUMINA_COMPLETE_LONG_READ_PREP_HUMAN",
                "INFORM_ONCO_PANEL_HG19",
                "ION_AMPLI_SEQ_EXOME_KIT",
                "KAPA_HIFI_HOT_START_READYMIX",
                "KAPA_HYPER_PREP_KIT",
                "KAPA_HYPER_PREP_PCR_FREE_KIT",
                "KAPA_HYPER_PLUS_KIT",
                "KAPA_M_RNA_HYPER_PREP_KIT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_HUMAN_MOUSE_RAT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLET_V2_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_V2_HUMAN_MOUSE_RAT",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_POLY_A_M_RNA_MAGNETIC_ISOLATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_CDNA_SYNTHESIS_AND_AMPLIFICATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_RNA_LIBRARY_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_FIRST_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SAMPLE_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SECOND_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_ULTRA_DNA",
                "NEB_NEXT_ULTRA_II_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_MODULE",
                "NEB_NEXT_ULTRA_II_END_REPAIR_DA_TAILING_MODULE",
                "NEB_NEXT_ULTRA_II_FS_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_LIGATION_MODULE",
                "NEB_NEXT_ULTRA_II_Q5_MASTER_MIX",
                "NEB_NEXT_Q5_HOT_START_HIFI_PCR_MASTER_MIX",
                "NEB_TEMPLATE_SWITCHING_RT_ENZYME_MIX",
                "NEB_NEXT_LIBRARY_PCR_MASTER_MIX",
                "NEB_NEXT_ULTRA_SHEAR",
                "NEB_NEXT_ULTRA_SHEAR_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_COMPANION_MODULE_ONT_LIGATION_SEQUENCING",
                "NEB_NEXT_FAST_DNA_FRAGMENTATION_AND_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FAST_DNA_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_FFPE_DNA_REPAIR_MIX",
                "NEB_NEXT_FFPE_DNA_REPAIR_V2_MODULE",
                "NEB_NEXT_DS_DNA_FRAGMENTASE",
                "NEB_NEXT_MAGNETIC_SEPARATION_RACK",
                "NEB_NEXT_LIBRARY_QUANT_FOR_ILLUMINA",
                "NEB_NEXT_LIBRARY_QUANT_DNA_STANDARDS",
                "NEB_NEXT_MAGNESIUM_RNA_FRAGMENTATION_MODULE",
                "NEB_NEXT_DIRECT_GENOTYPING_SOLUTION",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_CONVERSION_MODULE",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_KIT",
                "NEB_NEXT_MULTIPLEX_SMALL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_SMALL_RNA_LIBRARY_PREP_SET_FOR_ILLUMINA_MULTIPLEX_COMPATIBLE",
                "EPI_MARK_5_HMC_AND_5_MC_ANALYSIS_KIT",
                "EPI_MARK_METHYLATED_DNA_ENRICHMENT_KIT",
                "EPI_MARK_N6_METHYLADENOSINE_ENRICHMENT_KIT",
                "EPI_MARK_NUCLEOSOME_ASSEMBLY_KIT",
                "EPI_MARK_HOT_START_TAG_DNA_POLYMERASE",
                "PICO_METHYL_SEQ",
                "TAKARA_SMART_SEQ_V4_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_ER_STRANDED_TOTAL_RNA_SEQ_KIT",
                "TAKARA_SMART_ER_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_SEQ2_TAG",
                "TAKARA_SMART_ER_PREP_X_DNA_LIBRARY_KIT",
                "SUPER_SCRIPT_II_RT_BULK",
                "SURE_CELL_ATAC_SEQ_LIBRARY_PREP_KIT",
                "EUROFINS_ENRICHMENT_CUSTOM",
                "TWIST_HUMAN_CORE_EXOME_KIT",
                "TWIST_HUMAN_CORE_EXOME_PLUS_KIT",
                "ULTRALOW_METHYL_SEQ_WITH_TRUE_METHYL_OX_BS",
                "OTHER"
              ],
              "title": "LibraryPreparationKitRetailNameEnum",
              "type": "string"
            },
            "LibraryPreparationLibrarySelectionEnum": {
              "description": "Permitted vocabulary for library selections.",
              "enum": [
                "5_METHYLCYTIDINE_ANTIBODY_METHOD",
                "CAGE_METHOD",
                "C_DNA_METHOD",
                "CF_H_METHOD",
                "CF_M_METHOD",
                "CF_S_METHOD",
                "CF_T_METHOD",
                "CHIP_SEQ_METHOD",
                "D_NASE_METHOD",
                "HMPR_METHOD",
                "HYBRID_SELECTION_METHOD",
                "MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN_METHOD",
                "MF_METHOD",
                "M_NASE_METHOD",
                "MSLL_METHOD",
                "PCR_METHOD",
                "RACE_METHOD",
                "RANDOM_PCR_METHOD",
                "RANDOM_METHOD",
                "RT_PCR_METHOD",
                "REDUCED_REPRESENTATION_METHOD",
                "RESTRICTION_DIGEST_METHOD",
                "SIZE_FRACTIONATION_METHOD",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "LibraryPreparationLibrarySelectionEnum",
              "type": "string"
            },
            "LibraryPreparationLibraryTypeEnum": {
              "description": "The type of the library.",
              "enum": [
                "WGS",
                "WXS",
                "WCS",
                "TOTAL_RNA",
                "M_RNA",
                "MI_RNA",
                "NC_RNA",
                "ATAC",
                "METHYLATION",
                "CHROMOSOME_CONFORMATION_CAPTURE",
                "CHIP_SEQ",
                "OTHER"
              ],
              "title": "LibraryPreparationLibraryTypeEnum",
              "type": "string"
            },
            "LibraryPreparationRNASeqStrandednessEnum": {
              "description": "Permitted values for library preparation RNASeq strandedness.",
              "enum": [
                "SENSE",
                "ANTISENSE",
                "UNSTRANDED"
              ],
              "title": "LibraryPreparationRNASeqStrandednessEnum",
              "type": "string"
            },
            "PrimerEnum": {
              "description": "Permitted values for primer.",
              "enum": [
                "OLIGO_D_T",
                "RANDOM",
                "GENE_SPECIFIC",
                "OTHER"
              ],
              "title": "PrimerEnum",
              "type": "string"
            },
            "SampleBarcodeReadEnum": {
              "description": "Permitted values for sample barcode read.",
              "enum": [
                "INDEX1",
                "INDEX1_AND_INDEX2",
                "OTHER"
              ],
              "title": "SampleBarcodeReadEnum",
              "type": "string"
            },
            "SequencingProtocolSequencingLayoutEnum": {
              "description": "Single-end vs paired-end sequencing.",
              "enum": [
                "SE",
                "PE"
              ],
              "title": "SequencingProtocolSequencingLayoutEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Experiment Method.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A short description of this Experiment Method.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Experiment' entity (EGAX).",
              "type": "string"
            },
            "end_bias": {
              "$ref": "#/$defs/EndBiasEnum",
              "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
            },
            "flow_cell_id": {
              "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
              "type": "string"
            },
            "flow_cell_type": {
              "$ref": "#/$defs/FlowCellTypeEnum",
              "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
            },
            "instrument_model": {
              "$ref": "#/$defs/InstrumentModelEnum",
              "description": "The name and model of the technology platform used to perform sequencing."
            },
            "library_preparation": {
              "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
              "type": "string"
            },
            "library_preparation_kit_manufacturer": {
              "description": "The manufacturer of the kit used for library preparation.",
              "type": "string"
            },
            "library_preparation_kit_retail_name": {
              "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
              "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
            },
            "library_selection_methods": {
              "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
              "items": {
                "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
              },
              "type": "array"
            },
            "library_type": {
              "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
              "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
            },
            "name": {
              "description": "A short name identifying this Experiment Method.",
              "type": "string"
            },
            "primer": {
              "$ref": "#/$defs/PrimerEnum",
              "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
            },
            "rnaseq_strandedness": {
              "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
              "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
            },
            "sample_barcode_read": {
              "$ref": "#/$defs/SampleBarcodeReadEnum",
              "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
            },
            "sequencing_center": {
              "description": "Center where sample was sequenced.",
              "type": "string"
            },
            "sequencing_layout": {
              "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
              "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
            },
            "sequencing_read_length": {
              "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
              "type": "string"
            },
            "target_coverage": {
              "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
              "type": "string"
            },
            "target_regions": {
              "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type associated with this Experiment Method.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "library_type",
            "library_selection_methods",
            "library_preparation",
            "instrument_model",
            "sequencing_layout",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethod",
          "type": "object"
        },
        "name": "ExperimentMethod"
      },
      "ExperimentMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_method_supporting_files",
          "target_class": "ExperimentMethodSupportingFile"
        },
        "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method": {
              "description": "The Experiment Method associated with an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "experiment_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethodSupportingFile",
          "type": "object"
        },
        "name": "ExperimentMethodSupportingFile"
      },
      "Individual": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individuals",
          "target_class": "Individual"
        },
        "description": "An Individual is a Person who is participating in a Study.",
        "json_schema": {
          "$defs": {
            "IndividualSexEnum": {
              "description": "The sex of an Individual as as defined in a specific medical and clinical context.",
              "enum": [
                "FEMALE",
                "MALE",
                "UNKNOWN",
                "OTHER"
              ],
              "title": "IndividualSexEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual is a Person who is participating in a Study.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ancestry_ids": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ancestry_terms": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_ids": {
              "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_terms": {
              "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "geographical_region_id": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "geographical_region_term": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "phenotypic_features_ids": {
              "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_terms": {
              "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sex": {
              "$ref": "#/$defs/IndividualSexEnum",
              "description": "The genotypic sex of the Individual (e.g., female)."
            }
          },
          "required": [
            "sex",
            "alias",
            "accession"
          ],
          "title": "Individual",
          "type": "object"
        },
        "name": "Individual"
      },
      "IndividualSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individual_supporting_files",
          "target_class": "IndividualSupportingFile"
        },
        "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "individual": {
              "description": "The Individual associated with an entity.",
              "type": "string"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "individual",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "IndividualSupportingFile",
          "type": "object"
        },
        "name": "IndividualSupportingFile"
      },
      "ProcessDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "process_data_files",
          "target_class": "ProcessDataFile"
        },
        "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
        "json_schema": {
          "$defs": {
            "ProcessDataFileFormatEnum": {
              "description": "Enum to capture Process Data File formats.",
              "enum": [
                "BAI",
                "BAM",
                "BCF",
                "BED",
                "CRAM",
                "GFF",
                "HDF5",
                "SAM",
                "VCF",
                "WIG",
                "OTHER"
              ],
              "title": "ProcessDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis": {
              "description": "The alias of the Analysis that produced this Process Data File.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/ProcessDataFileFormatEnum",
              "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ProcessDataFile",
          "type": "object"
        },
        "name": "ProcessDataFile"
      },
      "Publication": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "publications",
          "target_class": "Publication"
        },
        "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
          "properties": {
            "abstract": {
              "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this Study.",
              "type": "string"
            },
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "author": {
              "description": "Author(s) of this Publication.",
              "type": "string"
            },
            "doi": {
              "description": "DOI identifier of a publication.",
              "type": "string"
            },
            "journal": {
              "description": "The name of the journal.",
              "type": "string"
            },
            "study": {
              "description": "The Study entity associated with this Publication.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Publication.",
              "type": "string"
            },
            "xref": {
              "description": "One or more cross-references for this Publication.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "year": {
              "description": "The year in which the paper was published.",
              "type": "integer"
            }
          },
          "required": [
            "study",
            "doi",
            "alias",
            "accession"
          ],
          "title": "Publication",
          "type": "object"
        },
        "name": "Publication"
      },
      "ResearchDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "research_data_files",
          "target_class": "ResearchDataFile"
        },
        "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
        "json_schema": {
          "$defs": {
            "ResearchDataFileFormatEnum": {
              "description": "Enum to capture Research Data File formats.",
              "enum": [
                "FASTA",
                "FASTQ",
                "UBAM",
                "FAST5",
                "RAW",
                "D",
                "MZML",
                "MZDATA",
                "OTHER"
              ],
              "title": "ResearchDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "description": "The aliases of the Experiments that produced this Research Data File.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "format": {
              "$ref": "#/$defs/ResearchDataFileFormatEnum",
              "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            },
            "sequencing_lane_id": {
              "description": "The identifier of a sequencing lane.",
              "type": "string"
            },
            "technical_replicate": {
              "description": "An integer to indicate the technical replicate of this File.",
              "type": "integer"
            }
          },
          "required": [
            "format",
            "technical_replicate",
            "experiments",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ResearchDataFile",
          "type": "object"
        },
        "name": "ResearchDataFile"
      },
      "Sample": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "samples",
          "target_class": "Sample"
        },
        "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
        "json_schema": {
          "$defs": {
            "AgeRangeEnum": {
              "description": "Enum to capture the age range that an Indiviudal belongs to.",
              "enum": [
                "0_TO_5",
                "6_TO_10",
                "11_TO_15",
                "16_TO_20",
                "21_TO_25",
                "26_TO_30",
                "31_TO_35",
                "36_TO_40",
                "41_TO_45",
                "46_TO_50",
                "51_TO_55",
                "56_TO_60",
                "61_TO_65",
                "66_TO_70",
                "71_TO_75",
                "76_TO_80",
                "81_OR_OLDER",
                "UNKNOWN"
              ],
              "title": "AgeRangeEnum",
              "type": "string"
            },
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "CaseControlStatusEnum": {
              "description": "Enum to capture whether a condition corresponds to a case or a control condition.",
              "enum": [
                "CASE",
                "CONTROL",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "CaseControlStatusEnum",
              "type": "string"
            },
            "DiseaseOrHealthyEnum": {
              "description": "Enum to capture whether a condition corresponds to a disease or a healthy state.",
              "enum": [
                "DISEASE",
                "HEALTHY",
                "NOT_APPLICABLE"
              ],
              "title": "DiseaseOrHealthyEnum",
              "type": "string"
            },
            "IsolationEnum": {
              "description": "Describes how biomaterial was isolated.",
              "enum": [
                "BLOOD_DRAW",
                "SURGICAL_REMOVAL",
                "SALIVA_COLLECTION",
                "BUCCAL_SWAB"
              ],
              "title": "IsolationEnum",
              "type": "string"
            },
            "SampleTypeEnum": {
              "description": "The type of a sample",
              "enum": [
                "CF_DNA",
                "DEPLETED_RNA",
                "DS_DNA_CHIP",
                "FFPE_DNA",
                "FFPE_TOTAL_RNA",
                "GENOMIC_DNA",
                "PCR_PRODUCTS",
                "POLY_A_RNA",
                "SINGLE_CELL_DNA",
                "SINGLE_CELL_RNA",
                "SINGLE_CELL_NUCLEI",
                "SMALL_RNA",
                "TOTAL_RNA"
              ],
              "title": "SampleTypeEnum",
              "type": "string"
            },
            "StorageEnum": {
              "description": "Enum to capture how a Sample or Biospecimen was stored.",
              "enum": [
                "REFRIGERATOR",
                "FREEZER",
                "ULTRA_LOW_FREEZER",
                "CRYOGENIC_FREEZER",
                "NONE",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "StorageEnum",
              "type": "string"
            },
            "VitalStatusEnum": {
              "description": "Enum to capture the vital status of an individual.",
              "enum": [
                "ALIVE",
                "DECEASED",
                "UNKNOWN"
              ],
              "title": "VitalStatusEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "biological_replicate": {
              "description": "An integer to indicate the number of a biological replicate.",
              "type": "integer"
            },
            "biospecimen_age_at_sampling": {
              "$ref": "#/$defs/AgeRangeEnum",
              "description": "The age of the Individual at the time of isolating this biospecimen."
            },
            "biospecimen_description": {
              "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
              "type": "string"
            },
            "biospecimen_isolation": {
              "$ref": "#/$defs/IsolationEnum",
              "description": "Method or device employed for collecting/isolating this Biospecimen."
            },
            "biospecimen_name": {
              "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "biospecimen_storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which this Biospecimen is stored."
            },
            "biospecimen_tissue_id": {
              "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
              "type": "string"
            },
            "biospecimen_tissue_term": {
              "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
              "type": "string"
            },
            "biospecimen_type": {
              "description": "The type of Biospecimen.",
              "type": "string"
            },
            "biospecimen_vital_status_at_sampling": {
              "$ref": "#/$defs/VitalStatusEnum",
              "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
            },
            "case_control_status": {
              "$ref": "#/$defs/CaseControlStatusEnum",
              "description": "Whether a Condition corresponds to a treatment or a control."
            },
            "description": {
              "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
              "type": "string"
            },
            "disease_or_healthy": {
              "$ref": "#/$defs/DiseaseOrHealthyEnum",
              "description": "Whether a Condition corresponds to a disease or a healthy state."
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "individual": {
              "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
              "type": "string"
            },
            "name": {
              "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which a Sample is stored."
            },
            "type": {
              "$ref": "#/$defs/SampleTypeEnum",
              "description": "The type of the Sample."
            },
            "xref": {
              "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "individual",
            "name",
            "description",
            "case_control_status",
            "biospecimen_age_at_sampling",
            "biospecimen_tissue_term",
            "biospecimen_tissue_id",
            "alias",
            "accession"
          ],
          "title": "Sample",
          "type": "object"
        },
        "name": "Sample"
      },
      "Study": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "studies",
          "target_class": "Study"
        },
        "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "StudyTypeEnum": {
              "description": "Enum to capture the type of a study.",
              "enum": [
                "CANCER_GENOMICS",
                "EPIGENETICS",
                "EXOME_SEQUENCING",
                "FORENSIC_GENETICS",
                "PALEO_GENOMICS",
                "GENE_REGULATION_STUDY",
                "METAGENOMICS",
                "POOLED_CLONE_SEQUENCING",
                "POPULATION_GENOMICS",
                "RNASEQ",
                "RESEQUENCING",
                "SYNTHETIC_GENOMICS",
                "TRANSCRIPTOME_ANALYSIS",
                "WHOLE_GENOME_SEQUENCING",
                "GWAS",
                "RARE_DISEASE",
                "CANCER",
                "COMMON_DISEASE",
                "NEURODEGENERATIVE_DISEASE",
                "CASE_CONTROL",
                "FAMILY",
                "HEREDITARY_DISEASE",
                "GENOMICS",
                "EPIGENOMICS",
                "TRANSCRIPTOMICS",
                "SINGLE_CELL_SEQUENCING",
                "SINGLE_CENTER",
                "MULTI_CENTER",
                "COHORT",
                "LONGITUDINAL",
                "TIME_SERIES",
                "INTERVENTIONAL",
                "NON_INTERVENTIONAL",
                "COMMUNITY_BASED",
                "OTHER"
              ],
              "title": "StudyTypeEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "affiliations": {
              "description": "The affiliations associated with this Study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Study.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description (abstract) that describes the goals of this Study.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "title": {
              "description": "A comprehensive title for this Study.",
              "type": "string"
            },
            "types": {
              "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
              "items": {
                "$ref": "#/$defs/StudyTypeEnum"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "affiliations",
            "alias",
            "accession"
          ],
          "title": "Study",
          "type": "object"
        },
        "name": "Study"
      }
    }
  },
  {
    "description": "embedded_restricted",
    "name": "embedded_restricted",
    "resource_classes": {
      "Analysis": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analyses",
          "target_class": "Analysis"
        },
        "description": "An Analysis is a data transformation that transforms input data to output data.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis is a data transformation that transforms input data to output data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The alias of the Analysis Method that is associated with this Analysis.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing how this Analysis was carried out (e.g., description of computational tools, pipelines, workflows).",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Analysis' entity (EGAZ).",
              "type": "string"
            },
            "research_data_files": {
              "description": "One or more aliases of the Research Data Files that this Analysis used as input to create Process Data Files.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "The title that describes an entity.",
              "type": "string"
            },
            "type": {
              "description": "The type of this Analysis.",
              "type": "string"
            }
          },
          "required": [
            "analysis_method",
            "title",
            "research_data_files",
            "alias",
            "accession"
          ],
          "title": "Analysis",
          "type": "object"
        },
        "name": "Analysis"
      },
      "AnalysisMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_methods",
          "target_class": "AnalysisMethod"
        },
        "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "description": {
              "description": "Description of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name identifying this Analysis Method.",
              "type": "string"
            },
            "parameters": {
              "description": "Key/value pairs where key corresponds to a parameter name and value corresponds to a parameter value (e.g., 'aligner' = 'star_salmon',  'hisat2_build_memory' = '200.GB', 'split_fastq' = 50000000).",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "software_versions": {
              "description": "key/value pairs where key corresponds to a software name and value corresponds to a version descriptor (e.g., `salmon` = '1.3.0', `trim-galore` = '0.6.6', `bedtools` = '2.29.2').",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of an entity. Note: Not to be confused with rdf:type.",
              "type": "string"
            },
            "workflow_doi": {
              "description": "A digital object identifier for the workflow. Can be a publication or the workflow commit that was used for the Analysis.",
              "type": "string"
            },
            "workflow_name": {
              "description": "The workflow name.",
              "type": "string"
            },
            "workflow_repository": {
              "description": "The workflow repository (e.g., the URL).",
              "type": "string"
            },
            "workflow_tasks": {
              "description": "Tasks performed by the workflow",
              "type": "string"
            },
            "workflow_version": {
              "description": "The workflow version.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "workflow_name",
            "workflow_repository",
            "workflow_doi",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethod",
          "type": "object"
        },
        "name": "AnalysisMethod"
      },
      "AnalysisMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_method_supporting_files",
          "target_class": "AnalysisMethodSupportingFile"
        },
        "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The Analysis Process associated with an entity.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethodSupportingFile",
          "type": "object"
        },
        "name": "AnalysisMethodSupportingFile"
      },
      "DataAccessCommittee": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_committees",
          "target_class": "DataAccessCommittee"
        },
        "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "email": {
              "description": "The email of the Data Access Committee (e.g., DAC[at]email.com). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "institute": {
              "description": "The Institute a person is affiliated with.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "institute",
            "alias",
            "accession"
          ],
          "title": "DataAccessCommittee",
          "type": "object"
        },
        "name": "DataAccessCommittee"
      },
      "DataAccessPolicy": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_policies",
          "target_class": "DataAccessPolicy"
        },
        "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
        "json_schema": {
          "$defs": {
            "DataUseModifierEnum": {
              "description": "Permitted values for data use modifier.",
              "enum": [
                "CLINICAL_CARE_USE",
                "RETURN_TO_DATABASE_OR_RESOURCE",
                "INSTITUTION_SPECIFIC_RESTRICTION",
                "PROJECT_SPECIFIC_RESTRICTION",
                "USER_SPECIFIC_RESTRICTION",
                "TIME_LIMIT_ON_USE",
                "PUBLICATION_MORATORIUM",
                "GEOGRAPHICAL_RESTRICTION",
                "ETHICS_APPROVAL_REQUIRED",
                "COLLABORATION_REQUIRED",
                "PUBLICATION_REQUIRED",
                "NOT_FOR_PROFIT_NON_COMMERCIAL_USE_ONLY",
                "NON_COMMERCIAL_USE_ONLY",
                "NOT_FOR_PROFIT_ORGANISATION_USE_ONLY",
                "GENETIC_STUDIES_ONLY",
                "NO_GENERAL_METHODS_RESEARCH",
                "RESEARCH_SPECIFIC_RESTRICTIONS",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_PROHIBITED"
              ],
              "title": "DataUseModifierEnum",
              "type": "string"
            },
            "DataUsePermissionEnum": {
              "description": "Permitted values for data use permission.",
              "enum": [
                "GENERAL_RESEARCH_USE",
                "HEALTH_OR_MEDICAL_OR_BIOMEDICAL_RESEARCH",
                "DISEASE_SPECIFIC_RESEARCH",
                "NO_RESTRICTION",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_ONLY"
              ],
              "title": "DataUsePermissionEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_committee": {
              "description": "The Data Access Committee linked to this Data Use Policy.",
              "type": "string"
            },
            "data_use_modifier_ids": {
              "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_use_modifier_terms": {
              "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
              "items": {
                "$ref": "#/$defs/DataUseModifierEnum"
              },
              "type": "array"
            },
            "data_use_permission_id": {
              "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
              "type": "string"
            },
            "data_use_permission_term": {
              "$ref": "#/$defs/DataUsePermissionEnum",
              "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
            },
            "description": {
              "description": "A short description for this Data Access Policy.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name for this Data Access Policy.",
              "type": "string"
            },
            "policy_text": {
              "description": "The complete text for the Data Access Policy.",
              "type": "string"
            },
            "policy_url": {
              "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "policy_text",
            "data_use_permission_term",
            "data_use_permission_id",
            "data_access_committee",
            "alias",
            "accession"
          ],
          "title": "DataAccessPolicy",
          "type": "object"
        },
        "name": "DataAccessPolicy"
      },
      "Dataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "datasets",
          "target_class": "Dataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_policy": {
              "description": "The Data Access Policy that applies to this Dataset.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession"
          ],
          "title": "Dataset",
          "type": "object"
        },
        "name": "Dataset"
      },
      "EmbeddedDataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "embedded_dataset",
          "target_class": "EmbeddedDataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {
            "EmbeddedDataAccessPolicy": {
              "additionalProperties": false,
              "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "data_access_committee": {
                  "$ref": "#/$defs/DataAccessCommittee",
                  "description": "The Data Access Committee linked to this Data Use Policy."
                },
                "data_use_modifier_ids": {
                  "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "data_use_modifier_terms": {
                  "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
                  "items": {
                    "$ref": "#/$defs/DataUseModifierEnum"
                  },
                  "type": "array"
                },
                "data_use_permission_id": {
                  "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
                  "type": "string"
                },
                "data_use_permission_term": {
                  "$ref": "#/$defs/DataUsePermissionEnum",
                  "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
                },
                "description": {
                  "description": "A short description for this Data Access Policy.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "name": {
                  "description": "A name for this Data Access Policy.",
                  "type": "string"
                },
                "policy_text": {
                  "description": "The complete text for the Data Access Policy.",
                  "type": "string"
                },
                "policy_url": {
                  "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "description",
                "policy_text",
                "data_use_permission_term",
                "data_use_permission_id",
                "data_access_committee",
                "alias",
                "accession"
              ],
              "title": "EmbeddedDataAccessPolicy",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_policy": {
              "$ref": "#/$defs/EmbeddedDataAccessPolicy",
              "description": "The Data Access Policy that applies to this Dataset."
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession"
          ],
          "title": "EmbeddedDataset",
          "type": "object"
        },
        "name": "EmbeddedDataset"
      },
      "Experiment": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiments",
          "target_class": "Experiment"
        },
        "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description of this Experiment.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Run' entity (EGAR).",
              "type": "string"
            },
            "experiment_method": {
              "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
              "type": "string"
            },
            "sample": {
              "description": "The alias of one or more Samples that are associated with this Experiment.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
              "type": "string"
            },
            "type": {
              "description": "The type of this Experiment.",
              "type": "string"
            }
          },
          "required": [
            "experiment_method",
            "title",
            "description",
            "sample",
            "alias",
            "accession"
          ],
          "title": "Experiment",
          "type": "object"
        },
        "name": "Experiment"
      },
      "ExperimentMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_methods",
          "target_class": "ExperimentMethod"
        },
        "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "EndBiasEnum": {
              "description": "Permitted values for end bias.",
              "enum": [
                "3_PRIME_END",
                "5_PRIME_END",
                "FULL_LENGTH"
              ],
              "title": "EndBiasEnum",
              "type": "string"
            },
            "FlowCellTypeEnum": {
              "description": "Permitted values for flow cell type.",
              "enum": [
                "ILLUMINA_NOVA_SEQ_S2",
                "ILLUMINA_NOVA_SEQ_S4",
                "PROMETHION",
                "FLONGLE",
                "MINION",
                "GRIDION",
                "OTHER"
              ],
              "title": "FlowCellTypeEnum",
              "type": "string"
            },
            "InstrumentModelEnum": {
              "description": "Permitted values for the instrument model.",
              "enum": [
                "454_GS",
                "454_GS_20",
                "454_GS_FLX",
                "454_GS_FLX_TITANIUM",
                "454_GS_FLX+",
                "454_GS_JUNIOR",
                "AB_310_GENETIC_ANALYZER",
                "AB_3130_GENETIC_ANALYZER",
                "AB_3130XL_GENETIC_ANALYZER",
                "AB_3500_GENETIC_ANALYZER",
                "AB_3500XL_GENETIC_ANALYZER",
                "AB_3730_GENETIC_ANALYZER",
                "AB_3730XL_GENETIC_ANALYZER",
                "AB_5500_GENETIC_ANALYZER",
                "AB_5500XL_GENETIC_ANALYZER",
                "AB_5500XL-W_GENETIC_ANALYSIS_SYSTEM",
                "BGISEQ-50",
                "BGISEQ-500",
                "DNBSEQ-G400",
                "DNBSEQ-G400_FAST",
                "DNBSEQ-G50",
                "DNBSEQ-T7",
                "ELEMENT_AVITI",
                "GRIDION",
                "HELICOS_HELISCOPE",
                "HISEQ_X_FIVE",
                "HISEQ_X_TEN",
                "ILLUMINA_GENOME_ANALYZER",
                "ILLUMINA_GENOME_ANALYZER_II",
                "ILLUMINA_GENOME_ANALYZER_IIX",
                "ILLUMINA_HISCANSQ",
                "ILLUMINA_HISEQ_1000",
                "ILLUMINA_HISEQ_1500",
                "ILLUMINA_HISEQ_2000",
                "ILLUMINA_HISEQ_2500",
                "ILLUMINA_HISEQ_3000",
                "ILLUMINA_HISEQ_4000",
                "ILLUMINA_HISEQ_X",
                "ILLUMINA_MISEQ",
                "ILLUMINA_MINISEQ",
                "ILLUMINA_NOVASEQ_6000",
                "ILLUMINA_NOVASEQ_X",
                "ILLUMINA_ISEQ_100",
                "ION_GENESTUDIO_S5",
                "ION_GENESTUDIO_S5_PLUS",
                "ION_GENESTUDIO_S5_PRIME",
                "ION_TORRENT_GENEXUS",
                "ION_TORRENT_PGM",
                "ION_TORRENT_PROTON",
                "ION_TORRENT_S5",
                "ION_TORRENT_S5_XL",
                "MGISEQ-2000RS",
                "MINION",
                "NEXTSEQ_1000",
                "NEXTSEQ_2000",
                "NEXTSEQ_500",
                "NEXTSEQ_550",
                "PACBIO_RS",
                "PACBIO_RS_II",
                "PROMETHION",
                "SEQUEL",
                "SEQUEL_II",
                "SEQUEL_IIE",
                "UG_100",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "InstrumentModelEnum",
              "type": "string"
            },
            "LibraryPreparationKitRetailNameEnum": {
              "description": "Permitted values for library preparation kit retail name.",
              "enum": [
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V2",
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V3",
                "ACCEL_NGS_2_S_PLUS_DNA_LIBRARY_KIT",
                "ACCEL_NGS_METHYL_SEQ_DNA",
                "AGILENT_STRAND_SPECIFIC_RNA",
                "AGILENT_SURE_SELECT_CUSTOM_ENRICHMENT_KIT",
                "AGILENT_SURE_SELECT_V3",
                "AGILENT_SURE_SELECT_V4",
                "AGILENT_SURE_SELECT_V4_UTRS",
                "AGILENT_SURE_SELECT_V5",
                "AGILENT_SURE_SELECT_V5_UTRS",
                "AGILENT_SURE_SELECT_V6",
                "AGILENT_SURE_SELECT_V6_UTRS",
                "AGILENT_SURE_SELECT_V6_PLUS_ONE",
                "AGILENT_SURE_SELECT_V6_PLUS_TWO",
                "AGILENT_SURE_SELECT_V8",
                "AGILENT_SURE_SELECT_V8_UTRS",
                "AGILENT_SURE_SELECT_V8_NCV",
                "AGILENT_SURE_SELECT_QXT_WGS",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_ONE",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_TWO",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_ONE",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_TWO",
                "AGILENT_CLEAR_SEQ_COMPREHENSIVE_CANCER_XT",
                "AGILENT_SURE_SELECT_CUSTOM_TIER1",
                "AGILENT_SURE_SELECT_CUSTOM_TIER2",
                "AGILENT_SURE_SELECT_CUSTOM_TIER3",
                "AGILENT_SURE_SELECT_CUSTOM_TIER4",
                "AGILENT_SURE_SELECT_CUSTOM_TIER5",
                "AVENIO_CT_DNA_TARGETED_KIT",
                "AVENIO_CT_DNA_SURVEILLANCE_KIT",
                "AVENIO_CT_DNA_EXPANDED_KIT",
                "IDT_X_GEN_EXOME_RESEARCH_PANEL",
                "ILLUMINA_DNA_PCR_FREE_PREP",
                "ILLUMINA_NEXTERA_DNA_FLEX",
                "ILLUMINA_DNA_PREP",
                "ILLUMINA_NEXTERA_EXOME_ENRICHMENT_KIT",
                "ILLUMINA_DNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_DNA_PREP_WITH_EXOME_2_5_ENRICHMENT",
                "ILLUMINA_STRANDED_M_RNA_PREP",
                "ILLUMINA_NEXTERA_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_NEXTERA_XT_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_RNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_TRU_SEQ_CH_IP_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_LOW_INPUT_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_V_1_5",
                "ILLUMINA_TRU_SEQ_DNA_EXOME",
                "ILLUMINA_TRU_SEQ_DNA_NANO",
                "ILLUMINA_TRU_SEQ_DNA_NANO_LIBRARY_PREP_KIT_FOR_NEO_PREP",
                "ILLUMINA_TRU_SEQ_NANO_DNA_HT",
                "ILLUMINA_TRU_SEQ_NANO_DNA_LT",
                "ILLUMINA_TRU_SEQ_FFPE_DNA_LIBRARY_PREP_QC_KIT",
                "ILLUMINA_TRU_SEQ_DNA_PCR_FREE",
                "ILLUMINA_TRU_SEQ_RNA_LIBRARY_PREP_KIT_V2",
                "ILLUMINA_TRU_SEQ_RNA_EXOME",
                "ILLUMINA_TRU_SEQ_SMALL_RNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_M_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA_WITH_RIBO_ZERO_GOLD",
                "VAHTS_TOTAL_RNA_SEQ_H_M_R_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "ILLUMINA_NEXTERA_XT_DNA",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_STEM_CELL_PANEL",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_P_53_PANEL",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_HIGH_THROUGHPUT",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_CT_DNA",
                "ILLUMINA_TRU_SIGHT_RNA_FUSION_PANEL",
                "ILLUMINA_TRU_SIGHT_RNA_PAN_CANCER",
                "ILLUMINA_TRU_SIGHT_TUMOR_15",
                "ILLUMINA_TRU_SIGHT_TUMOR_170",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_BRCA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CANCER_HOTSPOT_PANEL_V2",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CHILDHOOD_CANCER_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_COMPREHENSIVE_PANEL_V3",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_DNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_FUSION_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_FOCUS_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_REPERTOIRE_PLUS_TCR_BETA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_RESPONSE_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_LIBRARY_PREP_INDEXES_AND_ACCESSOIRES",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_MYELOID_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_ON_DEMAND",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TCR_BETA_SR_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TRANSCRIPTOME_HUMAN_GENE_EXPRESSION_PANEL",
                "ILLUMINA_COMPLETE_LONG_READ_PREP_HUMAN",
                "INFORM_ONCO_PANEL_HG19",
                "ION_AMPLI_SEQ_EXOME_KIT",
                "KAPA_HIFI_HOT_START_READYMIX",
                "KAPA_HYPER_PREP_KIT",
                "KAPA_HYPER_PREP_PCR_FREE_KIT",
                "KAPA_HYPER_PLUS_KIT",
                "KAPA_M_RNA_HYPER_PREP_KIT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_HUMAN_MOUSE_RAT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLET_V2_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_V2_HUMAN_MOUSE_RAT",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_POLY_A_M_RNA_MAGNETIC_ISOLATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_CDNA_SYNTHESIS_AND_AMPLIFICATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_RNA_LIBRARY_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_FIRST_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SAMPLE_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SECOND_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_ULTRA_DNA",
                "NEB_NEXT_ULTRA_II_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_MODULE",
                "NEB_NEXT_ULTRA_II_END_REPAIR_DA_TAILING_MODULE",
                "NEB_NEXT_ULTRA_II_FS_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_LIGATION_MODULE",
                "NEB_NEXT_ULTRA_II_Q5_MASTER_MIX",
                "NEB_NEXT_Q5_HOT_START_HIFI_PCR_MASTER_MIX",
                "NEB_TEMPLATE_SWITCHING_RT_ENZYME_MIX",
                "NEB_NEXT_LIBRARY_PCR_MASTER_MIX",
                "NEB_NEXT_ULTRA_SHEAR",
                "NEB_NEXT_ULTRA_SHEAR_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_COMPANION_MODULE_ONT_LIGATION_SEQUENCING",
                "NEB_NEXT_FAST_DNA_FRAGMENTATION_AND_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FAST_DNA_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_FFPE_DNA_REPAIR_MIX",
                "NEB_NEXT_FFPE_DNA_REPAIR_V2_MODULE",
                "NEB_NEXT_DS_DNA_FRAGMENTASE",
                "NEB_NEXT_MAGNETIC_SEPARATION_RACK",
                "NEB_NEXT_LIBRARY_QUANT_FOR_ILLUMINA",
                "NEB_NEXT_LIBRARY_QUANT_DNA_STANDARDS",
                "NEB_NEXT_MAGNESIUM_RNA_FRAGMENTATION_MODULE",
                "NEB_NEXT_DIRECT_GENOTYPING_SOLUTION",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_CONVERSION_MODULE",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_KIT",
                "NEB_NEXT_MULTIPLEX_SMALL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_SMALL_RNA_LIBRARY_PREP_SET_FOR_ILLUMINA_MULTIPLEX_COMPATIBLE",
                "EPI_MARK_5_HMC_AND_5_MC_ANALYSIS_KIT",
                "EPI_MARK_METHYLATED_DNA_ENRICHMENT_KIT",
                "EPI_MARK_N6_METHYLADENOSINE_ENRICHMENT_KIT",
                "EPI_MARK_NUCLEOSOME_ASSEMBLY_KIT",
                "EPI_MARK_HOT_START_TAG_DNA_POLYMERASE",
                "PICO_METHYL_SEQ",
                "TAKARA_SMART_SEQ_V4_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_ER_STRANDED_TOTAL_RNA_SEQ_KIT",
                "TAKARA_SMART_ER_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_SEQ2_TAG",
                "TAKARA_SMART_ER_PREP_X_DNA_LIBRARY_KIT",
                "SUPER_SCRIPT_II_RT_BULK",
                "SURE_CELL_ATAC_SEQ_LIBRARY_PREP_KIT",
                "EUROFINS_ENRICHMENT_CUSTOM",
                "TWIST_HUMAN_CORE_EXOME_KIT",
                "TWIST_HUMAN_CORE_EXOME_PLUS_KIT",
                "ULTRALOW_METHYL_SEQ_WITH_TRUE_METHYL_OX_BS",
                "OTHER"
              ],
              "title": "LibraryPreparationKitRetailNameEnum",
              "type": "string"
            },
            "LibraryPreparationLibrarySelectionEnum": {
              "description": "Permitted vocabulary for library selections.",
              "enum": [
                "5_METHYLCYTIDINE_ANTIBODY_METHOD",
                "CAGE_METHOD",
                "C_DNA_METHOD",
                "CF_H_METHOD",
                "CF_M_METHOD",
                "CF_S_METHOD",
                "CF_T_METHOD",
                "CHIP_SEQ_METHOD",
                "D_NASE_METHOD",
                "HMPR_METHOD",
                "HYBRID_SELECTION_METHOD",
                "MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN_METHOD",
                "MF_METHOD",
                "M_NASE_METHOD",
                "MSLL_METHOD",
                "PCR_METHOD",
                "RACE_METHOD",
                "RANDOM_PCR_METHOD",
                "RANDOM_METHOD",
                "RT_PCR_METHOD",
                "REDUCED_REPRESENTATION_METHOD",
                "RESTRICTION_DIGEST_METHOD",
                "SIZE_FRACTIONATION_METHOD",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "LibraryPreparationLibrarySelectionEnum",
              "type": "string"
            },
            "LibraryPreparationLibraryTypeEnum": {
              "description": "The type of the library.",
              "enum": [
                "WGS",
                "WXS",
                "WCS",
                "TOTAL_RNA",
                "M_RNA",
                "MI_RNA",
                "NC_RNA",
                "ATAC",
                "METHYLATION",
                "CHROMOSOME_CONFORMATION_CAPTURE",
                "CHIP_SEQ",
                "OTHER"
              ],
              "title": "LibraryPreparationLibraryTypeEnum",
              "type": "string"
            },
            "LibraryPreparationRNASeqStrandednessEnum": {
              "description": "Permitted values for library preparation RNASeq strandedness.",
              "enum": [
                "SENSE",
                "ANTISENSE",
                "UNSTRANDED"
              ],
              "title": "LibraryPreparationRNASeqStrandednessEnum",
              "type": "string"
            },
            "PrimerEnum": {
              "description": "Permitted values for primer.",
              "enum": [
                "OLIGO_D_T",
                "RANDOM",
                "GENE_SPECIFIC",
                "OTHER"
              ],
              "title": "PrimerEnum",
              "type": "string"
            },
            "SampleBarcodeReadEnum": {
              "description": "Permitted values for sample barcode read.",
              "enum": [
                "INDEX1",
                "INDEX1_AND_INDEX2",
                "OTHER"
              ],
              "title": "SampleBarcodeReadEnum",
              "type": "string"
            },
            "SequencingProtocolSequencingLayoutEnum": {
              "description": "Single-end vs paired-end sequencing.",
              "enum": [
                "SE",
                "PE"
              ],
              "title": "SequencingProtocolSequencingLayoutEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Experiment Method.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A short description of this Experiment Method.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Experiment' entity (EGAX).",
              "type": "string"
            },
            "end_bias": {
              "$ref": "#/$defs/EndBiasEnum",
              "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
            },
            "flow_cell_id": {
              "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
              "type": "string"
            },
            "flow_cell_type": {
              "$ref": "#/$defs/FlowCellTypeEnum",
              "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
            },
            "instrument_model": {
              "$ref": "#/$defs/InstrumentModelEnum",
              "description": "The name and model of the technology platform used to perform sequencing."
            },
            "library_preparation": {
              "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
              "type": "string"
            },
            "library_preparation_kit_manufacturer": {
              "description": "The manufacturer of the kit used for library preparation.",
              "type": "string"
            },
            "library_preparation_kit_retail_name": {
              "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
              "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
            },
            "library_selection_methods": {
              "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
              "items": {
                "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
              },
              "type": "array"
            },
            "library_type": {
              "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
              "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
            },
            "name": {
              "description": "A short name identifying this Experiment Method.",
              "type": "string"
            },
            "primer": {
              "$ref": "#/$defs/PrimerEnum",
              "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
            },
            "rnaseq_strandedness": {
              "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
              "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
            },
            "sample_barcode_read": {
              "$ref": "#/$defs/SampleBarcodeReadEnum",
              "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
            },
            "sequencing_center": {
              "description": "Center where sample was sequenced.",
              "type": "string"
            },
            "sequencing_layout": {
              "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
              "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
            },
            "sequencing_read_length": {
              "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
              "type": "string"
            },
            "target_coverage": {
              "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
              "type": "string"
            },
            "target_regions": {
              "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type associated with this Experiment Method.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "library_type",
            "library_selection_methods",
            "library_preparation",
            "instrument_model",
            "sequencing_layout",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethod",
          "type": "object"
        },
        "name": "ExperimentMethod"
      },
      "ExperimentMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_method_supporting_files",
          "target_class": "ExperimentMethodSupportingFile"
        },
        "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method": {
              "description": "The Experiment Method associated with an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "experiment_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethodSupportingFile",
          "type": "object"
        },
        "name": "ExperimentMethodSupportingFile"
      },
      "Individual": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individuals",
          "target_class": "Individual"
        },
        "description": "An Individual is a Person who is participating in a Study.",
        "json_schema": {
          "$defs": {
            "IndividualSexEnum": {
              "description": "The sex of an Individual as as defined in a specific medical and clinical context.",
              "enum": [
                "FEMALE",
                "MALE",
                "UNKNOWN",
                "OTHER"
              ],
              "title": "IndividualSexEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual is a Person who is participating in a Study.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ancestry_ids": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ancestry_terms": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_ids": {
              "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_terms": {
              "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "geographical_region_id": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "geographical_region_term": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "phenotypic_features_ids": {
              "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_terms": {
              "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sex": {
              "$ref": "#/$defs/IndividualSexEnum",
              "description": "The genotypic sex of the Individual (e.g., female)."
            }
          },
          "required": [
            "sex",
            "alias",
            "accession"
          ],
          "title": "Individual",
          "type": "object"
        },
        "name": "Individual"
      },
      "IndividualSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individual_supporting_files",
          "target_class": "IndividualSupportingFile"
        },
        "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "individual": {
              "description": "The Individual associated with an entity.",
              "type": "string"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "individual",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "IndividualSupportingFile",
          "type": "object"
        },
        "name": "IndividualSupportingFile"
      },
      "ProcessDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "process_data_files",
          "target_class": "ProcessDataFile"
        },
        "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
        "json_schema": {
          "$defs": {
            "ProcessDataFileFormatEnum": {
              "description": "Enum to capture Process Data File formats.",
              "enum": [
                "BAI",
                "BAM",
                "BCF",
                "BED",
                "CRAM",
                "GFF",
                "HDF5",
                "SAM",
                "VCF",
                "WIG",
                "OTHER"
              ],
              "title": "ProcessDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis": {
              "description": "The alias of the Analysis that produced this Process Data File.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/ProcessDataFileFormatEnum",
              "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ProcessDataFile",
          "type": "object"
        },
        "name": "ProcessDataFile"
      },
      "Publication": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "publications",
          "target_class": "Publication"
        },
        "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
          "properties": {
            "abstract": {
              "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this Study.",
              "type": "string"
            },
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "author": {
              "description": "Author(s) of this Publication.",
              "type": "string"
            },
            "doi": {
              "description": "DOI identifier of a publication.",
              "type": "string"
            },
            "journal": {
              "description": "The name of the journal.",
              "type": "string"
            },
            "study": {
              "description": "The Study entity associated with this Publication.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Publication.",
              "type": "string"
            },
            "xref": {
              "description": "One or more cross-references for this Publication.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "year": {
              "description": "The year in which the paper was published.",
              "type": "integer"
            }
          },
          "required": [
            "study",
            "doi",
            "alias",
            "accession"
          ],
          "title": "Publication",
          "type": "object"
        },
        "name": "Publication"
      },
      "ResearchDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "research_data_files",
          "target_class": "ResearchDataFile"
        },
        "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
        "json_schema": {
          "$defs": {
            "ResearchDataFileFormatEnum": {
              "description": "Enum to capture Research Data File formats.",
              "enum": [
                "FASTA",
                "FASTQ",
                "UBAM",
                "FAST5",
                "RAW",
                "D",
                "MZML",
                "MZDATA",
                "OTHER"
              ],
              "title": "ResearchDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "description": "The aliases of the Experiments that produced this Research Data File.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "format": {
              "$ref": "#/$defs/ResearchDataFileFormatEnum",
              "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            },
            "sequencing_lane_id": {
              "description": "The identifier of a sequencing lane.",
              "type": "string"
            },
            "technical_replicate": {
              "description": "An integer to indicate the technical replicate of this File.",
              "type": "integer"
            }
          },
          "required": [
            "format",
            "technical_replicate",
            "experiments",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ResearchDataFile",
          "type": "object"
        },
        "name": "ResearchDataFile"
      },
      "Sample": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "samples",
          "target_class": "Sample"
        },
        "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
        "json_schema": {
          "$defs": {
            "AgeRangeEnum": {
              "description": "Enum to capture the age range that an Indiviudal belongs to.",
              "enum": [
                "0_TO_5",
                "6_TO_10",
                "11_TO_15",
                "16_TO_20",
                "21_TO_25",
                "26_TO_30",
                "31_TO_35",
                "36_TO_40",
                "41_TO_45",
                "46_TO_50",
                "51_TO_55",
                "56_TO_60",
                "61_TO_65",
                "66_TO_70",
                "71_TO_75",
                "76_TO_80",
                "81_OR_OLDER",
                "UNKNOWN"
              ],
              "title": "AgeRangeEnum",
              "type": "string"
            },
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "CaseControlStatusEnum": {
              "description": "Enum to capture whether a condition corresponds to a case or a control condition.",
              "enum": [
                "CASE",
                "CONTROL",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "CaseControlStatusEnum",
              "type": "string"
            },
            "DiseaseOrHealthyEnum": {
              "description": "Enum to capture whether a condition corresponds to a disease or a healthy state.",
              "enum": [
                "DISEASE",
                "HEALTHY",
                "NOT_APPLICABLE"
              ],
              "title": "DiseaseOrHealthyEnum",
              "type": "string"
            },
            "IsolationEnum": {
              "description": "Describes how biomaterial was isolated.",
              "enum": [
                "BLOOD_DRAW",
                "SURGICAL_REMOVAL",
                "SALIVA_COLLECTION",
                "BUCCAL_SWAB"
              ],
              "title": "IsolationEnum",
              "type": "string"
            },
            "SampleTypeEnum": {
              "description": "The type of a sample",
              "enum": [
                "CF_DNA",
                "DEPLETED_RNA",
                "DS_DNA_CHIP",
                "FFPE_DNA",
                "FFPE_TOTAL_RNA",
                "GENOMIC_DNA",
                "PCR_PRODUCTS",
                "POLY_A_RNA",
                "SINGLE_CELL_DNA",
                "SINGLE_CELL_RNA",
                "SINGLE_CELL_NUCLEI",
                "SMALL_RNA",
                "TOTAL_RNA"
              ],
              "title": "SampleTypeEnum",
              "type": "string"
            },
            "StorageEnum": {
              "description": "Enum to capture how a Sample or Biospecimen was stored.",
              "enum": [
                "REFRIGERATOR",
                "FREEZER",
                "ULTRA_LOW_FREEZER",
                "CRYOGENIC_FREEZER",
                "NONE",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "StorageEnum",
              "type": "string"
            },
            "VitalStatusEnum": {
              "description": "Enum to capture the vital status of an individual.",
              "enum": [
                "ALIVE",
                "DECEASED",
                "UNKNOWN"
              ],
              "title": "VitalStatusEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "biological_replicate": {
              "description": "An integer to indicate the number of a biological replicate.",
              "type": "integer"
            },
            "biospecimen_age_at_sampling": {
              "$ref": "#/$defs/AgeRangeEnum",
              "description": "The age of the Individual at the time of isolating this biospecimen."
            },
            "biospecimen_description": {
              "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
              "type": "string"
            },
            "biospecimen_isolation": {
              "$ref": "#/$defs/IsolationEnum",
              "description": "Method or device employed for collecting/isolating this Biospecimen."
            },
            "biospecimen_name": {
              "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "biospecimen_storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which this Biospecimen is stored."
            },
            "biospecimen_tissue_id": {
              "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
              "type": "string"
            },
            "biospecimen_tissue_term": {
              "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
              "type": "string"
            },
            "biospecimen_type": {
              "description": "The type of Biospecimen.",
              "type": "string"
            },
            "biospecimen_vital_status_at_sampling": {
              "$ref": "#/$defs/VitalStatusEnum",
              "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
            },
            "case_control_status": {
              "$ref": "#/$defs/CaseControlStatusEnum",
              "description": "Whether a Condition corresponds to a treatment or a control."
            },
            "description": {
              "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
              "type": "string"
            },
            "disease_or_healthy": {
              "$ref": "#/$defs/DiseaseOrHealthyEnum",
              "description": "Whether a Condition corresponds to a disease or a healthy state."
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "individual": {
              "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
              "type": "string"
            },
            "name": {
              "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which a Sample is stored."
            },
            "type": {
              "$ref": "#/$defs/SampleTypeEnum",
              "description": "The type of the Sample."
            },
            "xref": {
              "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "individual",
            "name",
            "description",
            "case_control_status",
            "biospecimen_age_at_sampling",
            "biospecimen_tissue_term",
            "biospecimen_tissue_id",
            "alias",
            "accession"
          ],
          "title": "Sample",
          "type": "object"
        },
        "name": "Sample"
      },
      "Study": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "studies",
          "target_class": "Study"
        },
        "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "StudyTypeEnum": {
              "description": "Enum to capture the type of a study.",
              "enum": [
                "CANCER_GENOMICS",
                "EPIGENETICS",
                "EXOME_SEQUENCING",
                "FORENSIC_GENETICS",
                "PALEO_GENOMICS",
                "GENE_REGULATION_STUDY",
                "METAGENOMICS",
                "POOLED_CLONE_SEQUENCING",
                "POPULATION_GENOMICS",
                "RNASEQ",
                "RESEQUENCING",
                "SYNTHETIC_GENOMICS",
                "TRANSCRIPTOME_ANALYSIS",
                "WHOLE_GENOME_SEQUENCING",
                "GWAS",
                "RARE_DISEASE",
                "CANCER",
                "COMMON_DISEASE",
                "NEURODEGENERATIVE_DISEASE",
                "CASE_CONTROL",
                "FAMILY",
                "HEREDITARY_DISEASE",
                "GENOMICS",
                "EPIGENOMICS",
                "TRANSCRIPTOMICS",
                "SINGLE_CELL_SEQUENCING",
                "SINGLE_CENTER",
                "MULTI_CENTER",
                "COHORT",
                "LONGITUDINAL",
                "TIME_SERIES",
                "INTERVENTIONAL",
                "NON_INTERVENTIONAL",
                "COMMUNITY_BASED",
                "OTHER"
              ],
              "title": "StudyTypeEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "affiliations": {
              "description": "The affiliations associated with this Study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Study.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description (abstract) that describes the goals of this Study.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "title": {
              "description": "A comprehensive title for this Study.",
              "type": "string"
            },
            "types": {
              "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
              "items": {
                "$ref": "#/$defs/StudyTypeEnum"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "affiliations",
            "alias",
            "accession"
          ],
          "title": "Study",
          "type": "object"
        },
        "name": "Study"
      }
    }
  },
  {
    "description": "resolved_restricted",
    "name": "resolved_restricted",
    "resource_classes": {
      "Analysis": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analyses",
          "target_class": "Analysis"
        },
        "description": "An Analysis is a data transformation that transforms input data to output data.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis is a data transformation that transforms input data to output data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The alias of the Analysis Method that is associated with this Analysis.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing how this Analysis was carried out (e.g., description of computational tools, pipelines, workflows).",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Analysis' entity (EGAZ).",
              "type": "string"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "description": "One or more aliases of the Research Data Files that this Analysis used as input to create Process Data Files.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "The title that describes an entity.",
              "type": "string"
            },
            "type": {
              "description": "The type of this Analysis.",
              "type": "string"
            }
          },
          "required": [
            "analysis_method",
            "title",
            "research_data_files",
            "alias",
            "accession",
            "process_data_files"
          ],
          "title": "Analysis",
          "type": "object"
        },
        "name": "Analysis"
      },
      "AnalysisMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_methods",
          "target_class": "AnalysisMethod"
        },
        "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "Description of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name identifying this Analysis Method.",
              "type": "string"
            },
            "parameters": {
              "description": "Key/value pairs where key corresponds to a parameter name and value corresponds to a parameter value (e.g., 'aligner' = 'star_salmon',  'hisat2_build_memory' = '200.GB', 'split_fastq' = 50000000).",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "software_versions": {
              "description": "key/value pairs where key corresponds to a software name and value corresponds to a version descriptor (e.g., `salmon` = '1.3.0', `trim-galore` = '0.6.6', `bedtools` = '2.29.2').",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of an entity. Note: Not to be confused with rdf:type.",
              "type": "string"
            },
            "workflow_doi": {
              "description": "A digital object identifier for the workflow. Can be a publication or the workflow commit that was used for the Analysis.",
              "type": "string"
            },
            "workflow_name": {
              "description": "The workflow name.",
              "type": "string"
            },
            "workflow_repository": {
              "description": "The workflow repository (e.g., the URL).",
              "type": "string"
            },
            "workflow_tasks": {
              "description": "Tasks performed by the workflow",
              "type": "string"
            },
            "workflow_version": {
              "description": "The workflow version.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "workflow_name",
            "workflow_repository",
            "workflow_doi",
            "alias",
            "accession",
            "analyses",
            "analysis_method_supporting_files"
          ],
          "title": "AnalysisMethod",
          "type": "object"
        },
        "name": "AnalysisMethod"
      },
      "AnalysisMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_method_supporting_files",
          "target_class": "AnalysisMethodSupportingFile"
        },
        "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The Analysis Process associated with an entity.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethodSupportingFile",
          "type": "object"
        },
        "name": "AnalysisMethodSupportingFile"
      },
      "DataAccessCommittee": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_committees",
          "target_class": "DataAccessCommittee"
        },
        "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "email": {
              "description": "The email of the Data Access Committee (e.g., DAC[at]email.com). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "institute": {
              "description": "The Institute a person is affiliated with.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "institute",
            "alias",
            "accession"
          ],
          "title": "DataAccessCommittee",
          "type": "object"
        },
        "name": "DataAccessCommittee"
      },
      "DataAccessPolicy": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_policies",
          "target_class": "DataAccessPolicy"
        },
        "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
        "json_schema": {
          "$defs": {
            "DataUseModifierEnum": {
              "description": "Permitted values for data use modifier.",
              "enum": [
                "CLINICAL_CARE_USE",
                "RETURN_TO_DATABASE_OR_RESOURCE",
                "INSTITUTION_SPECIFIC_RESTRICTION",
                "PROJECT_SPECIFIC_RESTRICTION",
                "USER_SPECIFIC_RESTRICTION",
                "TIME_LIMIT_ON_USE",
                "PUBLICATION_MORATORIUM",
                "GEOGRAPHICAL_RESTRICTION",
                "ETHICS_APPROVAL_REQUIRED",
                "COLLABORATION_REQUIRED",
                "PUBLICATION_REQUIRED",
                "NOT_FOR_PROFIT_NON_COMMERCIAL_USE_ONLY",
                "NON_COMMERCIAL_USE_ONLY",
                "NOT_FOR_PROFIT_ORGANISATION_USE_ONLY",
                "GENETIC_STUDIES_ONLY",
                "NO_GENERAL_METHODS_RESEARCH",
                "RESEARCH_SPECIFIC_RESTRICTIONS",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_PROHIBITED"
              ],
              "title": "DataUseModifierEnum",
              "type": "string"
            },
            "DataUsePermissionEnum": {
              "description": "Permitted values for data use permission.",
              "enum": [
                "GENERAL_RESEARCH_USE",
                "HEALTH_OR_MEDICAL_OR_BIOMEDICAL_RESEARCH",
                "DISEASE_SPECIFIC_RESEARCH",
                "NO_RESTRICTION",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_ONLY"
              ],
              "title": "DataUsePermissionEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_committee": {
              "description": "The Data Access Committee linked to this Data Use Policy.",
              "type": "string"
            },
            "data_use_modifier_ids": {
              "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_use_modifier_terms": {
              "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
              "items": {
                "$ref": "#/$defs/DataUseModifierEnum"
              },
              "type": "array"
            },
            "data_use_permission_id": {
              "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
              "type": "string"
            },
            "data_use_permission_term": {
              "$ref": "#/$defs/DataUsePermissionEnum",
              "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
            },
            "description": {
              "description": "A short description for this Data Access Policy.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name for this Data Access Policy.",
              "type": "string"
            },
            "policy_text": {
              "description": "The complete text for the Data Access Policy.",
              "type": "string"
            },
            "policy_url": {
              "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "policy_text",
            "data_use_permission_term",
            "data_use_permission_id",
            "data_access_committee",
            "alias",
            "accession"
          ],
          "title": "DataAccessPolicy",
          "type": "object"
        },
        "name": "DataAccessPolicy"
      },
      "Dataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "datasets",
          "target_class": "Dataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_file_experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_file_individuals": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_file_samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_access_policy": {
              "description": "The Data Access Policy that applies to this Dataset.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_file_experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_file_individuals": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_file_samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_methods": {
              "description": "All experiment methods associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiments": {
              "description": "All experiments associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "files": {
              "description": "All files associated with the dataset.",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_individuals": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individuals": {
              "description": "All individuals associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_individuals": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_individuals": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "description": "All samples associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession",
            "process_data_files",
            "experiment_method_supporting_files",
            "analysis_method_supporting_files",
            "individual_supporting_files",
            "research_data_files",
            "individual_supporting_file_samples",
            "experiment_method_supporting_file_samples",
            "processed_data_file_samples",
            "analysis_method_supporting_file_samples",
            "research_data_file_samples",
            "individual_supporting_file_individuals",
            "experiment_method_supporting_file_individuals",
            "processed_data_file_individuals",
            "analysis_method_supporting_file_individuals",
            "research_data_file_individuals",
            "individual_supporting_file_experiments",
            "experiment_method_supporting_file_experiments",
            "processed_data_file_experiments",
            "analysis_method_supporting_file_experiments",
            "research_data_file_experiments",
            "individual_supporting_file_experiment_methods",
            "experiment_method_supporting_file_experiment_methods",
            "processed_data_file_experiment_methods",
            "analysis_method_supporting_file_experiment_methods",
            "research_data_file_experiment_methods",
            "experiments",
            "files",
            "samples",
            "individuals",
            "experiment_methods"
          ],
          "title": "Dataset",
          "type": "object"
        },
        "name": "Dataset"
      },
      "Experiment": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiments",
          "target_class": "Experiment"
        },
        "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description of this Experiment.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Run' entity (EGAR).",
              "type": "string"
            },
            "experiment_method": {
              "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
              "type": "string"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sample": {
              "description": "The alias of one or more Samples that are associated with this Experiment.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
              "type": "string"
            },
            "type": {
              "description": "The type of this Experiment.",
              "type": "string"
            }
          },
          "required": [
            "experiment_method",
            "title",
            "description",
            "sample",
            "alias",
            "accession",
            "research_data_files"
          ],
          "title": "Experiment",
          "type": "object"
        },
        "name": "Experiment"
      },
      "ExperimentMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_methods",
          "target_class": "ExperimentMethod"
        },
        "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "EndBiasEnum": {
              "description": "Permitted values for end bias.",
              "enum": [
                "3_PRIME_END",
                "5_PRIME_END",
                "FULL_LENGTH"
              ],
              "title": "EndBiasEnum",
              "type": "string"
            },
            "FlowCellTypeEnum": {
              "description": "Permitted values for flow cell type.",
              "enum": [
                "ILLUMINA_NOVA_SEQ_S2",
                "ILLUMINA_NOVA_SEQ_S4",
                "PROMETHION",
                "FLONGLE",
                "MINION",
                "GRIDION",
                "OTHER"
              ],
              "title": "FlowCellTypeEnum",
              "type": "string"
            },
            "InstrumentModelEnum": {
              "description": "Permitted values for the instrument model.",
              "enum": [
                "454_GS",
                "454_GS_20",
                "454_GS_FLX",
                "454_GS_FLX_TITANIUM",
                "454_GS_FLX+",
                "454_GS_JUNIOR",
                "AB_310_GENETIC_ANALYZER",
                "AB_3130_GENETIC_ANALYZER",
                "AB_3130XL_GENETIC_ANALYZER",
                "AB_3500_GENETIC_ANALYZER",
                "AB_3500XL_GENETIC_ANALYZER",
                "AB_3730_GENETIC_ANALYZER",
                "AB_3730XL_GENETIC_ANALYZER",
                "AB_5500_GENETIC_ANALYZER",
                "AB_5500XL_GENETIC_ANALYZER",
                "AB_5500XL-W_GENETIC_ANALYSIS_SYSTEM",
                "BGISEQ-50",
                "BGISEQ-500",
                "DNBSEQ-G400",
                "DNBSEQ-G400_FAST",
                "DNBSEQ-G50",
                "DNBSEQ-T7",
                "ELEMENT_AVITI",
                "GRIDION",
                "HELICOS_HELISCOPE",
                "HISEQ_X_FIVE",
                "HISEQ_X_TEN",
                "ILLUMINA_GENOME_ANALYZER",
                "ILLUMINA_GENOME_ANALYZER_II",
                "ILLUMINA_GENOME_ANALYZER_IIX",
                "ILLUMINA_HISCANSQ",
                "ILLUMINA_HISEQ_1000",
                "ILLUMINA_HISEQ_1500",
                "ILLUMINA_HISEQ_2000",
                "ILLUMINA_HISEQ_2500",
                "ILLUMINA_HISEQ_3000",
                "ILLUMINA_HISEQ_4000",
                "ILLUMINA_HISEQ_X",
                "ILLUMINA_MISEQ",
                "ILLUMINA_MINISEQ",
                "ILLUMINA_NOVASEQ_6000",
                "ILLUMINA_NOVASEQ_X",
                "ILLUMINA_ISEQ_100",
                "ION_GENESTUDIO_S5",
                "ION_GENESTUDIO_S5_PLUS",
                "ION_GENESTUDIO_S5_PRIME",
                "ION_TORRENT_GENEXUS",
                "ION_TORRENT_PGM",
                "ION_TORRENT_PROTON",
                "ION_TORRENT_S5",
                "ION_TORRENT_S5_XL",
                "MGISEQ-2000RS",
                "MINION",
                "NEXTSEQ_1000",
                "NEXTSEQ_2000",
                "NEXTSEQ_500",
                "NEXTSEQ_550",
                "PACBIO_RS",
                "PACBIO_RS_II",
                "PROMETHION",
                "SEQUEL",
                "SEQUEL_II",
                "SEQUEL_IIE",
                "UG_100",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "InstrumentModelEnum",
              "type": "string"
            },
            "LibraryPreparationKitRetailNameEnum": {
              "description": "Permitted values for library preparation kit retail name.",
              "enum": [
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V2",
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V3",
                "ACCEL_NGS_2_S_PLUS_DNA_LIBRARY_KIT",
                "ACCEL_NGS_METHYL_SEQ_DNA",
                "AGILENT_STRAND_SPECIFIC_RNA",
                "AGILENT_SURE_SELECT_CUSTOM_ENRICHMENT_KIT",
                "AGILENT_SURE_SELECT_V3",
                "AGILENT_SURE_SELECT_V4",
                "AGILENT_SURE_SELECT_V4_UTRS",
                "AGILENT_SURE_SELECT_V5",
                "AGILENT_SURE_SELECT_V5_UTRS",
                "AGILENT_SURE_SELECT_V6",
                "AGILENT_SURE_SELECT_V6_UTRS",
                "AGILENT_SURE_SELECT_V6_PLUS_ONE",
                "AGILENT_SURE_SELECT_V6_PLUS_TWO",
                "AGILENT_SURE_SELECT_V8",
                "AGILENT_SURE_SELECT_V8_UTRS",
                "AGILENT_SURE_SELECT_V8_NCV",
                "AGILENT_SURE_SELECT_QXT_WGS",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_ONE",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_TWO",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_ONE",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_TWO",
                "AGILENT_CLEAR_SEQ_COMPREHENSIVE_CANCER_XT",
                "AGILENT_SURE_SELECT_CUSTOM_TIER1",
                "AGILENT_SURE_SELECT_CUSTOM_TIER2",
                "AGILENT_SURE_SELECT_CUSTOM_TIER3",
                "AGILENT_SURE_SELECT_CUSTOM_TIER4",
                "AGILENT_SURE_SELECT_CUSTOM_TIER5",
                "AVENIO_CT_DNA_TARGETED_KIT",
                "AVENIO_CT_DNA_SURVEILLANCE_KIT",
                "AVENIO_CT_DNA_EXPANDED_KIT",
                "IDT_X_GEN_EXOME_RESEARCH_PANEL",
                "ILLUMINA_DNA_PCR_FREE_PREP",
                "ILLUMINA_NEXTERA_DNA_FLEX",
                "ILLUMINA_DNA_PREP",
                "ILLUMINA_NEXTERA_EXOME_ENRICHMENT_KIT",
                "ILLUMINA_DNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_DNA_PREP_WITH_EXOME_2_5_ENRICHMENT",
                "ILLUMINA_STRANDED_M_RNA_PREP",
                "ILLUMINA_NEXTERA_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_NEXTERA_XT_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_RNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_TRU_SEQ_CH_IP_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_LOW_INPUT_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_V_1_5",
                "ILLUMINA_TRU_SEQ_DNA_EXOME",
                "ILLUMINA_TRU_SEQ_DNA_NANO",
                "ILLUMINA_TRU_SEQ_DNA_NANO_LIBRARY_PREP_KIT_FOR_NEO_PREP",
                "ILLUMINA_TRU_SEQ_NANO_DNA_HT",
                "ILLUMINA_TRU_SEQ_NANO_DNA_LT",
                "ILLUMINA_TRU_SEQ_FFPE_DNA_LIBRARY_PREP_QC_KIT",
                "ILLUMINA_TRU_SEQ_DNA_PCR_FREE",
                "ILLUMINA_TRU_SEQ_RNA_LIBRARY_PREP_KIT_V2",
                "ILLUMINA_TRU_SEQ_RNA_EXOME",
                "ILLUMINA_TRU_SEQ_SMALL_RNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_M_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA_WITH_RIBO_ZERO_GOLD",
                "VAHTS_TOTAL_RNA_SEQ_H_M_R_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "ILLUMINA_NEXTERA_XT_DNA",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_STEM_CELL_PANEL",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_P_53_PANEL",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_HIGH_THROUGHPUT",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_CT_DNA",
                "ILLUMINA_TRU_SIGHT_RNA_FUSION_PANEL",
                "ILLUMINA_TRU_SIGHT_RNA_PAN_CANCER",
                "ILLUMINA_TRU_SIGHT_TUMOR_15",
                "ILLUMINA_TRU_SIGHT_TUMOR_170",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_BRCA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CANCER_HOTSPOT_PANEL_V2",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CHILDHOOD_CANCER_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_COMPREHENSIVE_PANEL_V3",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_DNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_FUSION_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_FOCUS_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_REPERTOIRE_PLUS_TCR_BETA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_RESPONSE_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_LIBRARY_PREP_INDEXES_AND_ACCESSOIRES",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_MYELOID_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_ON_DEMAND",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TCR_BETA_SR_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TRANSCRIPTOME_HUMAN_GENE_EXPRESSION_PANEL",
                "ILLUMINA_COMPLETE_LONG_READ_PREP_HUMAN",
                "INFORM_ONCO_PANEL_HG19",
                "ION_AMPLI_SEQ_EXOME_KIT",
                "KAPA_HIFI_HOT_START_READYMIX",
                "KAPA_HYPER_PREP_KIT",
                "KAPA_HYPER_PREP_PCR_FREE_KIT",
                "KAPA_HYPER_PLUS_KIT",
                "KAPA_M_RNA_HYPER_PREP_KIT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_HUMAN_MOUSE_RAT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLET_V2_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_V2_HUMAN_MOUSE_RAT",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_POLY_A_M_RNA_MAGNETIC_ISOLATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_CDNA_SYNTHESIS_AND_AMPLIFICATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_RNA_LIBRARY_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_FIRST_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SAMPLE_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SECOND_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_ULTRA_DNA",
                "NEB_NEXT_ULTRA_II_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_MODULE",
                "NEB_NEXT_ULTRA_II_END_REPAIR_DA_TAILING_MODULE",
                "NEB_NEXT_ULTRA_II_FS_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_LIGATION_MODULE",
                "NEB_NEXT_ULTRA_II_Q5_MASTER_MIX",
                "NEB_NEXT_Q5_HOT_START_HIFI_PCR_MASTER_MIX",
                "NEB_TEMPLATE_SWITCHING_RT_ENZYME_MIX",
                "NEB_NEXT_LIBRARY_PCR_MASTER_MIX",
                "NEB_NEXT_ULTRA_SHEAR",
                "NEB_NEXT_ULTRA_SHEAR_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_COMPANION_MODULE_ONT_LIGATION_SEQUENCING",
                "NEB_NEXT_FAST_DNA_FRAGMENTATION_AND_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FAST_DNA_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_FFPE_DNA_REPAIR_MIX",
                "NEB_NEXT_FFPE_DNA_REPAIR_V2_MODULE",
                "NEB_NEXT_DS_DNA_FRAGMENTASE",
                "NEB_NEXT_MAGNETIC_SEPARATION_RACK",
                "NEB_NEXT_LIBRARY_QUANT_FOR_ILLUMINA",
                "NEB_NEXT_LIBRARY_QUANT_DNA_STANDARDS",
                "NEB_NEXT_MAGNESIUM_RNA_FRAGMENTATION_MODULE",
                "NEB_NEXT_DIRECT_GENOTYPING_SOLUTION",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_CONVERSION_MODULE",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_KIT",
                "NEB_NEXT_MULTIPLEX_SMALL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_SMALL_RNA_LIBRARY_PREP_SET_FOR_ILLUMINA_MULTIPLEX_COMPATIBLE",
                "EPI_MARK_5_HMC_AND_5_MC_ANALYSIS_KIT",
                "EPI_MARK_METHYLATED_DNA_ENRICHMENT_KIT",
                "EPI_MARK_N6_METHYLADENOSINE_ENRICHMENT_KIT",
                "EPI_MARK_NUCLEOSOME_ASSEMBLY_KIT",
                "EPI_MARK_HOT_START_TAG_DNA_POLYMERASE",
                "PICO_METHYL_SEQ",
                "TAKARA_SMART_SEQ_V4_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_ER_STRANDED_TOTAL_RNA_SEQ_KIT",
                "TAKARA_SMART_ER_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_SEQ2_TAG",
                "TAKARA_SMART_ER_PREP_X_DNA_LIBRARY_KIT",
                "SUPER_SCRIPT_II_RT_BULK",
                "SURE_CELL_ATAC_SEQ_LIBRARY_PREP_KIT",
                "EUROFINS_ENRICHMENT_CUSTOM",
                "TWIST_HUMAN_CORE_EXOME_KIT",
                "TWIST_HUMAN_CORE_EXOME_PLUS_KIT",
                "ULTRALOW_METHYL_SEQ_WITH_TRUE_METHYL_OX_BS",
                "OTHER"
              ],
              "title": "LibraryPreparationKitRetailNameEnum",
              "type": "string"
            },
            "LibraryPreparationLibrarySelectionEnum": {
              "description": "Permitted vocabulary for library selections.",
              "enum": [
                "5_METHYLCYTIDINE_ANTIBODY_METHOD",
                "CAGE_METHOD",
                "C_DNA_METHOD",
                "CF_H_METHOD",
                "CF_M_METHOD",
                "CF_S_METHOD",
                "CF_T_METHOD",
                "CHIP_SEQ_METHOD",
                "D_NASE_METHOD",
                "HMPR_METHOD",
                "HYBRID_SELECTION_METHOD",
                "MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN_METHOD",
                "MF_METHOD",
                "M_NASE_METHOD",
                "MSLL_METHOD",
                "PCR_METHOD",
                "RACE_METHOD",
                "RANDOM_PCR_METHOD",
                "RANDOM_METHOD",
                "RT_PCR_METHOD",
                "REDUCED_REPRESENTATION_METHOD",
                "RESTRICTION_DIGEST_METHOD",
                "SIZE_FRACTIONATION_METHOD",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "LibraryPreparationLibrarySelectionEnum",
              "type": "string"
            },
            "LibraryPreparationLibraryTypeEnum": {
              "description": "The type of the library.",
              "enum": [
                "WGS",
                "WXS",
                "WCS",
                "TOTAL_RNA",
                "M_RNA",
                "MI_RNA",
                "NC_RNA",
                "ATAC",
                "METHYLATION",
                "CHROMOSOME_CONFORMATION_CAPTURE",
                "CHIP_SEQ",
                "OTHER"
              ],
              "title": "LibraryPreparationLibraryTypeEnum",
              "type": "string"
            },
            "LibraryPreparationRNASeqStrandednessEnum": {
              "description": "Permitted values for library preparation RNASeq strandedness.",
              "enum": [
                "SENSE",
                "ANTISENSE",
                "UNSTRANDED"
              ],
              "title": "LibraryPreparationRNASeqStrandednessEnum",
              "type": "string"
            },
            "PrimerEnum": {
              "description": "Permitted values for primer.",
              "enum": [
                "OLIGO_D_T",
                "RANDOM",
                "GENE_SPECIFIC",
                "OTHER"
              ],
              "title": "PrimerEnum",
              "type": "string"
            },
            "SampleBarcodeReadEnum": {
              "description": "Permitted values for sample barcode read.",
              "enum": [
                "INDEX1",
                "INDEX1_AND_INDEX2",
                "OTHER"
              ],
              "title": "SampleBarcodeReadEnum",
              "type": "string"
            },
            "SequencingProtocolSequencingLayoutEnum": {
              "description": "Single-end vs paired-end sequencing.",
              "enum": [
                "SE",
                "PE"
              ],
              "title": "SequencingProtocolSequencingLayoutEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Experiment Method.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A short description of this Experiment Method.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Experiment' entity (EGAX).",
              "type": "string"
            },
            "end_bias": {
              "$ref": "#/$defs/EndBiasEnum",
              "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "flow_cell_id": {
              "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
              "type": "string"
            },
            "flow_cell_type": {
              "$ref": "#/$defs/FlowCellTypeEnum",
              "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
            },
            "instrument_model": {
              "$ref": "#/$defs/InstrumentModelEnum",
              "description": "The name and model of the technology platform used to perform sequencing."
            },
            "library_preparation": {
              "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
              "type": "string"
            },
            "library_preparation_kit_manufacturer": {
              "description": "The manufacturer of the kit used for library preparation.",
              "type": "string"
            },
            "library_preparation_kit_retail_name": {
              "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
              "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
            },
            "library_selection_methods": {
              "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
              "items": {
                "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
              },
              "type": "array"
            },
            "library_type": {
              "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
              "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
            },
            "name": {
              "description": "A short name identifying this Experiment Method.",
              "type": "string"
            },
            "primer": {
              "$ref": "#/$defs/PrimerEnum",
              "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
            },
            "rnaseq_strandedness": {
              "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
              "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
            },
            "sample_barcode_read": {
              "$ref": "#/$defs/SampleBarcodeReadEnum",
              "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
            },
            "sequencing_center": {
              "description": "Center where sample was sequenced.",
              "type": "string"
            },
            "sequencing_layout": {
              "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
              "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
            },
            "sequencing_read_length": {
              "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
              "type": "string"
            },
            "target_coverage": {
              "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
              "type": "string"
            },
            "target_regions": {
              "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type associated with this Experiment Method.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "library_type",
            "library_selection_methods",
            "library_preparation",
            "instrument_model",
            "sequencing_layout",
            "alias",
            "accession",
            "experiment_method_supporting_files"
          ],
          "title": "ExperimentMethod",
          "type": "object"
        },
        "name": "ExperimentMethod"
      },
      "ExperimentMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_method_supporting_files",
          "target_class": "ExperimentMethodSupportingFile"
        },
        "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method": {
              "description": "The Experiment Method associated with an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "experiment_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethodSupportingFile",
          "type": "object"
        },
        "name": "ExperimentMethodSupportingFile"
      },
      "Individual": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individuals",
          "target_class": "Individual"
        },
        "description": "An Individual is a Person who is participating in a Study.",
        "json_schema": {
          "$defs": {
            "IndividualSexEnum": {
              "description": "The sex of an Individual as as defined in a specific medical and clinical context.",
              "enum": [
                "FEMALE",
                "MALE",
                "UNKNOWN",
                "OTHER"
              ],
              "title": "IndividualSexEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual is a Person who is participating in a Study.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ancestry_ids": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ancestry_terms": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_ids": {
              "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_terms": {
              "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "geographical_region_id": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "geographical_region_term": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_ids": {
              "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_terms": {
              "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sex": {
              "$ref": "#/$defs/IndividualSexEnum",
              "description": "The genotypic sex of the Individual (e.g., female)."
            }
          },
          "required": [
            "sex",
            "alias",
            "accession",
            "samples",
            "individual_supporting_files"
          ],
          "title": "Individual",
          "type": "object"
        },
        "name": "Individual"
      },
      "IndividualSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individual_supporting_files",
          "target_class": "IndividualSupportingFile"
        },
        "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "individual": {
              "description": "The Individual associated with an entity.",
              "type": "string"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "individual",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "IndividualSupportingFile",
          "type": "object"
        },
        "name": "IndividualSupportingFile"
      },
      "ProcessDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "process_data_files",
          "target_class": "ProcessDataFile"
        },
        "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
        "json_schema": {
          "$defs": {
            "ProcessDataFileFormatEnum": {
              "description": "Enum to capture Process Data File formats.",
              "enum": [
                "BAI",
                "BAM",
                "BCF",
                "BED",
                "CRAM",
                "GFF",
                "HDF5",
                "SAM",
                "VCF",
                "WIG",
                "OTHER"
              ],
              "title": "ProcessDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis": {
              "description": "The alias of the Analysis that produced this Process Data File.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/ProcessDataFileFormatEnum",
              "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ProcessDataFile",
          "type": "object"
        },
        "name": "ProcessDataFile"
      },
      "Publication": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "publications",
          "target_class": "Publication"
        },
        "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
          "properties": {
            "abstract": {
              "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this Study.",
              "type": "string"
            },
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "author": {
              "description": "Author(s) of this Publication.",
              "type": "string"
            },
            "doi": {
              "description": "DOI identifier of a publication.",
              "type": "string"
            },
            "journal": {
              "description": "The name of the journal.",
              "type": "string"
            },
            "study": {
              "description": "The Study entity associated with this Publication.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Publication.",
              "type": "string"
            },
            "xref": {
              "description": "One or more cross-references for this Publication.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "year": {
              "description": "The year in which the paper was published.",
              "type": "integer"
            }
          },
          "required": [
            "study",
            "doi",
            "alias",
            "accession"
          ],
          "title": "Publication",
          "type": "object"
        },
        "name": "Publication"
      },
      "ResearchDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "research_data_files",
          "target_class": "ResearchDataFile"
        },
        "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
        "json_schema": {
          "$defs": {
            "ResearchDataFileFormatEnum": {
              "description": "Enum to capture Research Data File formats.",
              "enum": [
                "FASTA",
                "FASTQ",
                "UBAM",
                "FAST5",
                "RAW",
                "D",
                "MZML",
                "MZDATA",
                "OTHER"
              ],
              "title": "ResearchDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "description": "The aliases of the Experiments that produced this Research Data File.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "format": {
              "$ref": "#/$defs/ResearchDataFileFormatEnum",
              "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            },
            "sequencing_lane_id": {
              "description": "The identifier of a sequencing lane.",
              "type": "string"
            },
            "technical_replicate": {
              "description": "An integer to indicate the technical replicate of this File.",
              "type": "integer"
            }
          },
          "required": [
            "format",
            "technical_replicate",
            "experiments",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession",
            "analyses"
          ],
          "title": "ResearchDataFile",
          "type": "object"
        },
        "name": "ResearchDataFile"
      },
      "Sample": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "samples",
          "target_class": "Sample"
        },
        "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
        "json_schema": {
          "$defs": {
            "AgeRangeEnum": {
              "description": "Enum to capture the age range that an Indiviudal belongs to.",
              "enum": [
                "0_TO_5",
                "6_TO_10",
                "11_TO_15",
                "16_TO_20",
                "21_TO_25",
                "26_TO_30",
                "31_TO_35",
                "36_TO_40",
                "41_TO_45",
                "46_TO_50",
                "51_TO_55",
                "56_TO_60",
                "61_TO_65",
                "66_TO_70",
                "71_TO_75",
                "76_TO_80",
                "81_OR_OLDER",
                "UNKNOWN"
              ],
              "title": "AgeRangeEnum",
              "type": "string"
            },
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "CaseControlStatusEnum": {
              "description": "Enum to capture whether a condition corresponds to a case or a control condition.",
              "enum": [
                "CASE",
                "CONTROL",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "CaseControlStatusEnum",
              "type": "string"
            },
            "DiseaseOrHealthyEnum": {
              "description": "Enum to capture whether a condition corresponds to a disease or a healthy state.",
              "enum": [
                "DISEASE",
                "HEALTHY",
                "NOT_APPLICABLE"
              ],
              "title": "DiseaseOrHealthyEnum",
              "type": "string"
            },
            "IsolationEnum": {
              "description": "Describes how biomaterial was isolated.",
              "enum": [
                "BLOOD_DRAW",
                "SURGICAL_REMOVAL",
                "SALIVA_COLLECTION",
                "BUCCAL_SWAB"
              ],
              "title": "IsolationEnum",
              "type": "string"
            },
            "SampleTypeEnum": {
              "description": "The type of a sample",
              "enum": [
                "CF_DNA",
                "DEPLETED_RNA",
                "DS_DNA_CHIP",
                "FFPE_DNA",
                "FFPE_TOTAL_RNA",
                "GENOMIC_DNA",
                "PCR_PRODUCTS",
                "POLY_A_RNA",
                "SINGLE_CELL_DNA",
                "SINGLE_CELL_RNA",
                "SINGLE_CELL_NUCLEI",
                "SMALL_RNA",
                "TOTAL_RNA"
              ],
              "title": "SampleTypeEnum",
              "type": "string"
            },
            "StorageEnum": {
              "description": "Enum to capture how a Sample or Biospecimen was stored.",
              "enum": [
                "REFRIGERATOR",
                "FREEZER",
                "ULTRA_LOW_FREEZER",
                "CRYOGENIC_FREEZER",
                "NONE",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "StorageEnum",
              "type": "string"
            },
            "VitalStatusEnum": {
              "description": "Enum to capture the vital status of an individual.",
              "enum": [
                "ALIVE",
                "DECEASED",
                "UNKNOWN"
              ],
              "title": "VitalStatusEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "biological_replicate": {
              "description": "An integer to indicate the number of a biological replicate.",
              "type": "integer"
            },
            "biospecimen_age_at_sampling": {
              "$ref": "#/$defs/AgeRangeEnum",
              "description": "The age of the Individual at the time of isolating this biospecimen."
            },
            "biospecimen_description": {
              "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
              "type": "string"
            },
            "biospecimen_isolation": {
              "$ref": "#/$defs/IsolationEnum",
              "description": "Method or device employed for collecting/isolating this Biospecimen."
            },
            "biospecimen_name": {
              "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "biospecimen_storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which this Biospecimen is stored."
            },
            "biospecimen_tissue_id": {
              "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
              "type": "string"
            },
            "biospecimen_tissue_term": {
              "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
              "type": "string"
            },
            "biospecimen_type": {
              "description": "The type of Biospecimen.",
              "type": "string"
            },
            "biospecimen_vital_status_at_sampling": {
              "$ref": "#/$defs/VitalStatusEnum",
              "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
            },
            "case_control_status": {
              "$ref": "#/$defs/CaseControlStatusEnum",
              "description": "Whether a Condition corresponds to a treatment or a control."
            },
            "description": {
              "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
              "type": "string"
            },
            "disease_or_healthy": {
              "$ref": "#/$defs/DiseaseOrHealthyEnum",
              "description": "Whether a Condition corresponds to a disease or a healthy state."
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual": {
              "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
              "type": "string"
            },
            "name": {
              "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which a Sample is stored."
            },
            "type": {
              "$ref": "#/$defs/SampleTypeEnum",
              "description": "The type of the Sample."
            },
            "xref": {
              "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "individual",
            "name",
            "description",
            "case_control_status",
            "biospecimen_age_at_sampling",
            "biospecimen_tissue_term",
            "biospecimen_tissue_id",
            "alias",
            "accession",
            "experiments"
          ],
          "title": "Sample",
          "type": "object"
        },
        "name": "Sample"
      },
      "Study": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "studies",
          "target_class": "Study"
        },
        "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "StudyTypeEnum": {
              "description": "Enum to capture the type of a study.",
              "enum": [
                "CANCER_GENOMICS",
                "EPIGENETICS",
                "EXOME_SEQUENCING",
                "FORENSIC_GENETICS",
                "PALEO_GENOMICS",
                "GENE_REGULATION_STUDY",
                "METAGENOMICS",
                "POOLED_CLONE_SEQUENCING",
                "POPULATION_GENOMICS",
                "RNASEQ",
                "RESEQUENCING",
                "SYNTHETIC_GENOMICS",
                "TRANSCRIPTOME_ANALYSIS",
                "WHOLE_GENOME_SEQUENCING",
                "GWAS",
                "RARE_DISEASE",
                "CANCER",
                "COMMON_DISEASE",
                "NEURODEGENERATIVE_DISEASE",
                "CASE_CONTROL",
                "FAMILY",
                "HEREDITARY_DISEASE",
                "GENOMICS",
                "EPIGENOMICS",
                "TRANSCRIPTOMICS",
                "SINGLE_CELL_SEQUENCING",
                "SINGLE_CENTER",
                "MULTI_CENTER",
                "COHORT",
                "LONGITUDINAL",
                "TIME_SERIES",
                "INTERVENTIONAL",
                "NON_INTERVENTIONAL",
                "COMMUNITY_BASED",
                "OTHER"
              ],
              "title": "StudyTypeEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "affiliations": {
              "description": "The affiliations associated with this Study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Study.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "datasets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description (abstract) that describes the goals of this Study.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "publications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "A comprehensive title for this Study.",
              "type": "string"
            },
            "types": {
              "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
              "items": {
                "$ref": "#/$defs/StudyTypeEnum"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "affiliations",
            "alias",
            "accession",
            "datasets",
            "publications"
          ],
          "title": "Study",
          "type": "object"
        },
        "name": "Study"
      }
    }
  },
  {
    "description": "resolved_public",
    "name": "resolved_public",
    "resource_classes": {
      "Analysis": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analyses",
          "target_class": "Analysis"
        },
        "description": "An Analysis is a data transformation that transforms input data to output data.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis is a data transformation that transforms input data to output data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The alias of the Analysis Method that is associated with this Analysis.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing how this Analysis was carried out (e.g., description of computational tools, pipelines, workflows).",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Analysis' entity (EGAZ).",
              "type": "string"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "description": "One or more aliases of the Research Data Files that this Analysis used as input to create Process Data Files.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "The title that describes an entity.",
              "type": "string"
            },
            "type": {
              "description": "The type of this Analysis.",
              "type": "string"
            }
          },
          "required": [
            "analysis_method",
            "title",
            "research_data_files",
            "alias",
            "accession",
            "process_data_files"
          ],
          "title": "Analysis",
          "type": "object"
        },
        "name": "Analysis"
      },
      "AnalysisMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_methods",
          "target_class": "AnalysisMethod"
        },
        "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "Description of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name identifying this Analysis Method.",
              "type": "string"
            },
            "parameters": {
              "description": "Key/value pairs where key corresponds to a parameter name and value corresponds to a parameter value (e.g., 'aligner' = 'star_salmon',  'hisat2_build_memory' = '200.GB', 'split_fastq' = 50000000).",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "software_versions": {
              "description": "key/value pairs where key corresponds to a software name and value corresponds to a version descriptor (e.g., `salmon` = '1.3.0', `trim-galore` = '0.6.6', `bedtools` = '2.29.2').",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of an entity. Note: Not to be confused with rdf:type.",
              "type": "string"
            },
            "workflow_doi": {
              "description": "A digital object identifier for the workflow. Can be a publication or the workflow commit that was used for the Analysis.",
              "type": "string"
            },
            "workflow_name": {
              "description": "The workflow name.",
              "type": "string"
            },
            "workflow_repository": {
              "description": "The workflow repository (e.g., the URL).",
              "type": "string"
            },
            "workflow_tasks": {
              "description": "Tasks performed by the workflow",
              "type": "string"
            },
            "workflow_version": {
              "description": "The workflow version.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "workflow_name",
            "workflow_repository",
            "workflow_doi",
            "alias",
            "accession",
            "analyses",
            "analysis_method_supporting_files"
          ],
          "title": "AnalysisMethod",
          "type": "object"
        },
        "name": "AnalysisMethod"
      },
      "AnalysisMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_method_supporting_files",
          "target_class": "AnalysisMethodSupportingFile"
        },
        "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The Analysis Process associated with an entity.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethodSupportingFile",
          "type": "object"
        },
        "name": "AnalysisMethodSupportingFile"
      },
      "DataAccessCommittee": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_committees",
          "target_class": "DataAccessCommittee"
        },
        "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "email": {
              "description": "The email of the Data Access Committee (e.g., DAC[at]email.com). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "institute": {
              "description": "The Institute a person is affiliated with.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "institute",
            "alias",
            "accession"
          ],
          "title": "DataAccessCommittee",
          "type": "object"
        },
        "name": "DataAccessCommittee"
      },
      "DataAccessPolicy": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_policies",
          "target_class": "DataAccessPolicy"
        },
        "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
        "json_schema": {
          "$defs": {
            "DataUseModifierEnum": {
              "description": "Permitted values for data use modifier.",
              "enum": [
                "CLINICAL_CARE_USE",
                "RETURN_TO_DATABASE_OR_RESOURCE",
                "INSTITUTION_SPECIFIC_RESTRICTION",
                "PROJECT_SPECIFIC_RESTRICTION",
                "USER_SPECIFIC_RESTRICTION",
                "TIME_LIMIT_ON_USE",
                "PUBLICATION_MORATORIUM",
                "GEOGRAPHICAL_RESTRICTION",
                "ETHICS_APPROVAL_REQUIRED",
                "COLLABORATION_REQUIRED",
                "PUBLICATION_REQUIRED",
                "NOT_FOR_PROFIT_NON_COMMERCIAL_USE_ONLY",
                "NON_COMMERCIAL_USE_ONLY",
                "NOT_FOR_PROFIT_ORGANISATION_USE_ONLY",
                "GENETIC_STUDIES_ONLY",
                "NO_GENERAL_METHODS_RESEARCH",
                "RESEARCH_SPECIFIC_RESTRICTIONS",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_PROHIBITED"
              ],
              "title": "DataUseModifierEnum",
              "type": "string"
            },
            "DataUsePermissionEnum": {
              "description": "Permitted values for data use permission.",
              "enum": [
                "GENERAL_RESEARCH_USE",
                "HEALTH_OR_MEDICAL_OR_BIOMEDICAL_RESEARCH",
                "DISEASE_SPECIFIC_RESEARCH",
                "NO_RESTRICTION",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_ONLY"
              ],
              "title": "DataUsePermissionEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_committee": {
              "description": "The Data Access Committee linked to this Data Use Policy.",
              "type": "string"
            },
            "data_use_modifier_ids": {
              "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_use_modifier_terms": {
              "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
              "items": {
                "$ref": "#/$defs/DataUseModifierEnum"
              },
              "type": "array"
            },
            "data_use_permission_id": {
              "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
              "type": "string"
            },
            "data_use_permission_term": {
              "$ref": "#/$defs/DataUsePermissionEnum",
              "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
            },
            "description": {
              "description": "A short description for this Data Access Policy.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name for this Data Access Policy.",
              "type": "string"
            },
            "policy_text": {
              "description": "The complete text for the Data Access Policy.",
              "type": "string"
            },
            "policy_url": {
              "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "policy_text",
            "data_use_permission_term",
            "data_use_permission_id",
            "data_access_committee",
            "alias",
            "accession"
          ],
          "title": "DataAccessPolicy",
          "type": "object"
        },
        "name": "DataAccessPolicy"
      },
      "Dataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "datasets",
          "target_class": "Dataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_access_policy": {
              "description": "The Data Access Policy that applies to this Dataset.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_methods": {
              "description": "All experiment methods associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiments": {
              "description": "All experiments associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "files": {
              "description": "All files associated with the dataset.",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individuals": {
              "description": "All individuals associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "description": "All samples associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession",
            "process_data_files",
            "experiment_method_supporting_files",
            "analysis_method_supporting_files",
            "individual_supporting_files",
            "research_data_files",
            "individual_supporting_file_experiment_methods",
            "experiment_method_supporting_file_experiment_methods",
            "processed_data_file_experiment_methods",
            "analysis_method_supporting_file_experiment_methods",
            "research_data_file_experiment_methods",
            "experiments",
            "files",
            "samples",
            "individuals",
            "experiment_methods"
          ],
          "title": "Dataset",
          "type": "object"
        },
        "name": "Dataset"
      },
      "Experiment": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiments",
          "target_class": "Experiment"
        },
        "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description of this Experiment.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Run' entity (EGAR).",
              "type": "string"
            },
            "experiment_method": {
              "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
              "type": "string"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sample": {
              "description": "The alias of one or more Samples that are associated with this Experiment.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
              "type": "string"
            },
            "type": {
              "description": "The type of this Experiment.",
              "type": "string"
            }
          },
          "required": [
            "experiment_method",
            "title",
            "description",
            "sample",
            "alias",
            "accession",
            "research_data_files"
          ],
          "title": "Experiment",
          "type": "object"
        },
        "name": "Experiment"
      },
      "ExperimentMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_methods",
          "target_class": "ExperimentMethod"
        },
        "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "EndBiasEnum": {
              "description": "Permitted values for end bias.",
              "enum": [
                "3_PRIME_END",
                "5_PRIME_END",
                "FULL_LENGTH"
              ],
              "title": "EndBiasEnum",
              "type": "string"
            },
            "FlowCellTypeEnum": {
              "description": "Permitted values for flow cell type.",
              "enum": [
                "ILLUMINA_NOVA_SEQ_S2",
                "ILLUMINA_NOVA_SEQ_S4",
                "PROMETHION",
                "FLONGLE",
                "MINION",
                "GRIDION",
                "OTHER"
              ],
              "title": "FlowCellTypeEnum",
              "type": "string"
            },
            "InstrumentModelEnum": {
              "description": "Permitted values for the instrument model.",
              "enum": [
                "454_GS",
                "454_GS_20",
                "454_GS_FLX",
                "454_GS_FLX_TITANIUM",
                "454_GS_FLX+",
                "454_GS_JUNIOR",
                "AB_310_GENETIC_ANALYZER",
                "AB_3130_GENETIC_ANALYZER",
                "AB_3130XL_GENETIC_ANALYZER",
                "AB_3500_GENETIC_ANALYZER",
                "AB_3500XL_GENETIC_ANALYZER",
                "AB_3730_GENETIC_ANALYZER",
                "AB_3730XL_GENETIC_ANALYZER",
                "AB_5500_GENETIC_ANALYZER",
                "AB_5500XL_GENETIC_ANALYZER",
                "AB_5500XL-W_GENETIC_ANALYSIS_SYSTEM",
                "BGISEQ-50",
                "BGISEQ-500",
                "DNBSEQ-G400",
                "DNBSEQ-G400_FAST",
                "DNBSEQ-G50",
                "DNBSEQ-T7",
                "ELEMENT_AVITI",
                "GRIDION",
                "HELICOS_HELISCOPE",
                "HISEQ_X_FIVE",
                "HISEQ_X_TEN",
                "ILLUMINA_GENOME_ANALYZER",
                "ILLUMINA_GENOME_ANALYZER_II",
                "ILLUMINA_GENOME_ANALYZER_IIX",
                "ILLUMINA_HISCANSQ",
                "ILLUMINA_HISEQ_1000",
                "ILLUMINA_HISEQ_1500",
                "ILLUMINA_HISEQ_2000",
                "ILLUMINA_HISEQ_2500",
                "ILLUMINA_HISEQ_3000",
                "ILLUMINA_HISEQ_4000",
                "ILLUMINA_HISEQ_X",
                "ILLUMINA_MISEQ",
                "ILLUMINA_MINISEQ",
                "ILLUMINA_NOVASEQ_6000",
                "ILLUMINA_NOVASEQ_X",
                "ILLUMINA_ISEQ_100",
                "ION_GENESTUDIO_S5",
                "ION_GENESTUDIO_S5_PLUS",
                "ION_GENESTUDIO_S5_PRIME",
                "ION_TORRENT_GENEXUS",
                "ION_TORRENT_PGM",
                "ION_TORRENT_PROTON",
                "ION_TORRENT_S5",
                "ION_TORRENT_S5_XL",
                "MGISEQ-2000RS",
                "MINION",
                "NEXTSEQ_1000",
                "NEXTSEQ_2000",
                "NEXTSEQ_500",
                "NEXTSEQ_550",
                "PACBIO_RS",
                "PACBIO_RS_II",
                "PROMETHION",
                "SEQUEL",
                "SEQUEL_II",
                "SEQUEL_IIE",
                "UG_100",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "InstrumentModelEnum",
              "type": "string"
            },
            "LibraryPreparationKitRetailNameEnum": {
              "description": "Permitted values for library preparation kit retail name.",
              "enum": [
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V2",
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V3",
                "ACCEL_NGS_2_S_PLUS_DNA_LIBRARY_KIT",
                "ACCEL_NGS_METHYL_SEQ_DNA",
                "AGILENT_STRAND_SPECIFIC_RNA",
                "AGILENT_SURE_SELECT_CUSTOM_ENRICHMENT_KIT",
                "AGILENT_SURE_SELECT_V3",
                "AGILENT_SURE_SELECT_V4",
                "AGILENT_SURE_SELECT_V4_UTRS",
                "AGILENT_SURE_SELECT_V5",
                "AGILENT_SURE_SELECT_V5_UTRS",
                "AGILENT_SURE_SELECT_V6",
                "AGILENT_SURE_SELECT_V6_UTRS",
                "AGILENT_SURE_SELECT_V6_PLUS_ONE",
                "AGILENT_SURE_SELECT_V6_PLUS_TWO",
                "AGILENT_SURE_SELECT_V8",
                "AGILENT_SURE_SELECT_V8_UTRS",
                "AGILENT_SURE_SELECT_V8_NCV",
                "AGILENT_SURE_SELECT_QXT_WGS",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_ONE",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_TWO",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_ONE",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_TWO",
                "AGILENT_CLEAR_SEQ_COMPREHENSIVE_CANCER_XT",
                "AGILENT_SURE_SELECT_CUSTOM_TIER1",
                "AGILENT_SURE_SELECT_CUSTOM_TIER2",
                "AGILENT_SURE_SELECT_CUSTOM_TIER3",
                "AGILENT_SURE_SELECT_CUSTOM_TIER4",
                "AGILENT_SURE_SELECT_CUSTOM_TIER5",
                "AVENIO_CT_DNA_TARGETED_KIT",
                "AVENIO_CT_DNA_SURVEILLANCE_KIT",
                "AVENIO_CT_DNA_EXPANDED_KIT",
                "IDT_X_GEN_EXOME_RESEARCH_PANEL",
                "ILLUMINA_DNA_PCR_FREE_PREP",
                "ILLUMINA_NEXTERA_DNA_FLEX",
                "ILLUMINA_DNA_PREP",
                "ILLUMINA_NEXTERA_EXOME_ENRICHMENT_KIT",
                "ILLUMINA_DNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_DNA_PREP_WITH_EXOME_2_5_ENRICHMENT",
                "ILLUMINA_STRANDED_M_RNA_PREP",
                "ILLUMINA_NEXTERA_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_NEXTERA_XT_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_RNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_TRU_SEQ_CH_IP_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_LOW_INPUT_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_V_1_5",
                "ILLUMINA_TRU_SEQ_DNA_EXOME",
                "ILLUMINA_TRU_SEQ_DNA_NANO",
                "ILLUMINA_TRU_SEQ_DNA_NANO_LIBRARY_PREP_KIT_FOR_NEO_PREP",
                "ILLUMINA_TRU_SEQ_NANO_DNA_HT",
                "ILLUMINA_TRU_SEQ_NANO_DNA_LT",
                "ILLUMINA_TRU_SEQ_FFPE_DNA_LIBRARY_PREP_QC_KIT",
                "ILLUMINA_TRU_SEQ_DNA_PCR_FREE",
                "ILLUMINA_TRU_SEQ_RNA_LIBRARY_PREP_KIT_V2",
                "ILLUMINA_TRU_SEQ_RNA_EXOME",
                "ILLUMINA_TRU_SEQ_SMALL_RNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_M_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA_WITH_RIBO_ZERO_GOLD",
                "VAHTS_TOTAL_RNA_SEQ_H_M_R_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "ILLUMINA_NEXTERA_XT_DNA",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_STEM_CELL_PANEL",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_P_53_PANEL",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_HIGH_THROUGHPUT",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_CT_DNA",
                "ILLUMINA_TRU_SIGHT_RNA_FUSION_PANEL",
                "ILLUMINA_TRU_SIGHT_RNA_PAN_CANCER",
                "ILLUMINA_TRU_SIGHT_TUMOR_15",
                "ILLUMINA_TRU_SIGHT_TUMOR_170",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_BRCA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CANCER_HOTSPOT_PANEL_V2",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CHILDHOOD_CANCER_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_COMPREHENSIVE_PANEL_V3",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_DNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_FUSION_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_FOCUS_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_REPERTOIRE_PLUS_TCR_BETA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_RESPONSE_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_LIBRARY_PREP_INDEXES_AND_ACCESSOIRES",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_MYELOID_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_ON_DEMAND",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TCR_BETA_SR_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TRANSCRIPTOME_HUMAN_GENE_EXPRESSION_PANEL",
                "ILLUMINA_COMPLETE_LONG_READ_PREP_HUMAN",
                "INFORM_ONCO_PANEL_HG19",
                "ION_AMPLI_SEQ_EXOME_KIT",
                "KAPA_HIFI_HOT_START_READYMIX",
                "KAPA_HYPER_PREP_KIT",
                "KAPA_HYPER_PREP_PCR_FREE_KIT",
                "KAPA_HYPER_PLUS_KIT",
                "KAPA_M_RNA_HYPER_PREP_KIT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_HUMAN_MOUSE_RAT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLET_V2_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_V2_HUMAN_MOUSE_RAT",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_POLY_A_M_RNA_MAGNETIC_ISOLATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_CDNA_SYNTHESIS_AND_AMPLIFICATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_RNA_LIBRARY_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_FIRST_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SAMPLE_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SECOND_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_ULTRA_DNA",
                "NEB_NEXT_ULTRA_II_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_MODULE",
                "NEB_NEXT_ULTRA_II_END_REPAIR_DA_TAILING_MODULE",
                "NEB_NEXT_ULTRA_II_FS_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_LIGATION_MODULE",
                "NEB_NEXT_ULTRA_II_Q5_MASTER_MIX",
                "NEB_NEXT_Q5_HOT_START_HIFI_PCR_MASTER_MIX",
                "NEB_TEMPLATE_SWITCHING_RT_ENZYME_MIX",
                "NEB_NEXT_LIBRARY_PCR_MASTER_MIX",
                "NEB_NEXT_ULTRA_SHEAR",
                "NEB_NEXT_ULTRA_SHEAR_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_COMPANION_MODULE_ONT_LIGATION_SEQUENCING",
                "NEB_NEXT_FAST_DNA_FRAGMENTATION_AND_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FAST_DNA_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_FFPE_DNA_REPAIR_MIX",
                "NEB_NEXT_FFPE_DNA_REPAIR_V2_MODULE",
                "NEB_NEXT_DS_DNA_FRAGMENTASE",
                "NEB_NEXT_MAGNETIC_SEPARATION_RACK",
                "NEB_NEXT_LIBRARY_QUANT_FOR_ILLUMINA",
                "NEB_NEXT_LIBRARY_QUANT_DNA_STANDARDS",
                "NEB_NEXT_MAGNESIUM_RNA_FRAGMENTATION_MODULE",
                "NEB_NEXT_DIRECT_GENOTYPING_SOLUTION",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_CONVERSION_MODULE",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_KIT",
                "NEB_NEXT_MULTIPLEX_SMALL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_SMALL_RNA_LIBRARY_PREP_SET_FOR_ILLUMINA_MULTIPLEX_COMPATIBLE",
                "EPI_MARK_5_HMC_AND_5_MC_ANALYSIS_KIT",
                "EPI_MARK_METHYLATED_DNA_ENRICHMENT_KIT",
                "EPI_MARK_N6_METHYLADENOSINE_ENRICHMENT_KIT",
                "EPI_MARK_NUCLEOSOME_ASSEMBLY_KIT",
                "EPI_MARK_HOT_START_TAG_DNA_POLYMERASE",
                "PICO_METHYL_SEQ",
                "TAKARA_SMART_SEQ_V4_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_ER_STRANDED_TOTAL_RNA_SEQ_KIT",
                "TAKARA_SMART_ER_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_SEQ2_TAG",
                "TAKARA_SMART_ER_PREP_X_DNA_LIBRARY_KIT",
                "SUPER_SCRIPT_II_RT_BULK",
                "SURE_CELL_ATAC_SEQ_LIBRARY_PREP_KIT",
                "EUROFINS_ENRICHMENT_CUSTOM",
                "TWIST_HUMAN_CORE_EXOME_KIT",
                "TWIST_HUMAN_CORE_EXOME_PLUS_KIT",
                "ULTRALOW_METHYL_SEQ_WITH_TRUE_METHYL_OX_BS",
                "OTHER"
              ],
              "title": "LibraryPreparationKitRetailNameEnum",
              "type": "string"
            },
            "LibraryPreparationLibrarySelectionEnum": {
              "description": "Permitted vocabulary for library selections.",
              "enum": [
                "5_METHYLCYTIDINE_ANTIBODY_METHOD",
                "CAGE_METHOD",
                "C_DNA_METHOD",
                "CF_H_METHOD",
                "CF_M_METHOD",
                "CF_S_METHOD",
                "CF_T_METHOD",
                "CHIP_SEQ_METHOD",
                "D_NASE_METHOD",
                "HMPR_METHOD",
                "HYBRID_SELECTION_METHOD",
                "MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN_METHOD",
                "MF_METHOD",
                "M_NASE_METHOD",
                "MSLL_METHOD",
                "PCR_METHOD",
                "RACE_METHOD",
                "RANDOM_PCR_METHOD",
                "RANDOM_METHOD",
                "RT_PCR_METHOD",
                "REDUCED_REPRESENTATION_METHOD",
                "RESTRICTION_DIGEST_METHOD",
                "SIZE_FRACTIONATION_METHOD",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "LibraryPreparationLibrarySelectionEnum",
              "type": "string"
            },
            "LibraryPreparationLibraryTypeEnum": {
              "description": "The type of the library.",
              "enum": [
                "WGS",
                "WXS",
                "WCS",
                "TOTAL_RNA",
                "M_RNA",
                "MI_RNA",
                "NC_RNA",
                "ATAC",
                "METHYLATION",
                "CHROMOSOME_CONFORMATION_CAPTURE",
                "CHIP_SEQ",
                "OTHER"
              ],
              "title": "LibraryPreparationLibraryTypeEnum",
              "type": "string"
            },
            "LibraryPreparationRNASeqStrandednessEnum": {
              "description": "Permitted values for library preparation RNASeq strandedness.",
              "enum": [
                "SENSE",
                "ANTISENSE",
                "UNSTRANDED"
              ],
              "title": "LibraryPreparationRNASeqStrandednessEnum",
              "type": "string"
            },
            "PrimerEnum": {
              "description": "Permitted values for primer.",
              "enum": [
                "OLIGO_D_T",
                "RANDOM",
                "GENE_SPECIFIC",
                "OTHER"
              ],
              "title": "PrimerEnum",
              "type": "string"
            },
            "SampleBarcodeReadEnum": {
              "description": "Permitted values for sample barcode read.",
              "enum": [
                "INDEX1",
                "INDEX1_AND_INDEX2",
                "OTHER"
              ],
              "title": "SampleBarcodeReadEnum",
              "type": "string"
            },
            "SequencingProtocolSequencingLayoutEnum": {
              "description": "Single-end vs paired-end sequencing.",
              "enum": [
                "SE",
                "PE"
              ],
              "title": "SequencingProtocolSequencingLayoutEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Experiment Method.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A short description of this Experiment Method.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Experiment' entity (EGAX).",
              "type": "string"
            },
            "end_bias": {
              "$ref": "#/$defs/EndBiasEnum",
              "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "flow_cell_id": {
              "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
              "type": "string"
            },
            "flow_cell_type": {
              "$ref": "#/$defs/FlowCellTypeEnum",
              "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
            },
            "instrument_model": {
              "$ref": "#/$defs/InstrumentModelEnum",
              "description": "The name and model of the technology platform used to perform sequencing."
            },
            "library_preparation": {
              "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
              "type": "string"
            },
            "library_preparation_kit_manufacturer": {
              "description": "The manufacturer of the kit used for library preparation.",
              "type": "string"
            },
            "library_preparation_kit_retail_name": {
              "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
              "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
            },
            "library_selection_methods": {
              "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
              "items": {
                "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
              },
              "type": "array"
            },
            "library_type": {
              "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
              "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
            },
            "name": {
              "description": "A short name identifying this Experiment Method.",
              "type": "string"
            },
            "primer": {
              "$ref": "#/$defs/PrimerEnum",
              "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
            },
            "rnaseq_strandedness": {
              "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
              "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
            },
            "sample_barcode_read": {
              "$ref": "#/$defs/SampleBarcodeReadEnum",
              "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
            },
            "sequencing_center": {
              "description": "Center where sample was sequenced.",
              "type": "string"
            },
            "sequencing_layout": {
              "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
              "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
            },
            "sequencing_read_length": {
              "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
              "type": "string"
            },
            "target_coverage": {
              "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
              "type": "string"
            },
            "target_regions": {
              "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type associated with this Experiment Method.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "library_type",
            "library_selection_methods",
            "library_preparation",
            "instrument_model",
            "sequencing_layout",
            "alias",
            "accession",
            "experiment_method_supporting_files"
          ],
          "title": "ExperimentMethod",
          "type": "object"
        },
        "name": "ExperimentMethod"
      },
      "ExperimentMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_method_supporting_files",
          "target_class": "ExperimentMethodSupportingFile"
        },
        "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method": {
              "description": "The Experiment Method associated with an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "experiment_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethodSupportingFile",
          "type": "object"
        },
        "name": "ExperimentMethodSupportingFile"
      },
      "Individual": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individuals",
          "target_class": "Individual"
        },
        "description": "An Individual is a Person who is participating in a Study.",
        "json_schema": {
          "$defs": {
            "IndividualSexEnum": {
              "description": "The sex of an Individual as as defined in a specific medical and clinical context.",
              "enum": [
                "FEMALE",
                "MALE",
                "UNKNOWN",
                "OTHER"
              ],
              "title": "IndividualSexEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual is a Person who is participating in a Study.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ancestry_ids": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ancestry_terms": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_ids": {
              "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_terms": {
              "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "geographical_region_id": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "geographical_region_term": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_ids": {
              "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_terms": {
              "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sex": {
              "$ref": "#/$defs/IndividualSexEnum",
              "description": "The genotypic sex of the Individual (e.g., female)."
            }
          },
          "required": [
            "sex",
            "alias",
            "accession",
            "samples",
            "individual_supporting_files"
          ],
          "title": "Individual",
          "type": "object"
        },
        "name": "Individual"
      },
      "IndividualSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individual_supporting_files",
          "target_class": "IndividualSupportingFile"
        },
        "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "individual": {
              "description": "The Individual associated with an entity.",
              "type": "string"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "individual",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "IndividualSupportingFile",
          "type": "object"
        },
        "name": "IndividualSupportingFile"
      },
      "ProcessDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "process_data_files",
          "target_class": "ProcessDataFile"
        },
        "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
        "json_schema": {
          "$defs": {
            "ProcessDataFileFormatEnum": {
              "description": "Enum to capture Process Data File formats.",
              "enum": [
                "BAI",
                "BAM",
                "BCF",
                "BED",
                "CRAM",
                "GFF",
                "HDF5",
                "SAM",
                "VCF",
                "WIG",
                "OTHER"
              ],
              "title": "ProcessDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis": {
              "description": "The alias of the Analysis that produced this Process Data File.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/ProcessDataFileFormatEnum",
              "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ProcessDataFile",
          "type": "object"
        },
        "name": "ProcessDataFile"
      },
      "Publication": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "publications",
          "target_class": "Publication"
        },
        "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
          "properties": {
            "abstract": {
              "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this Study.",
              "type": "string"
            },
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "author": {
              "description": "Author(s) of this Publication.",
              "type": "string"
            },
            "doi": {
              "description": "DOI identifier of a publication.",
              "type": "string"
            },
            "journal": {
              "description": "The name of the journal.",
              "type": "string"
            },
            "study": {
              "description": "The Study entity associated with this Publication.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Publication.",
              "type": "string"
            },
            "xref": {
              "description": "One or more cross-references for this Publication.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "year": {
              "description": "The year in which the paper was published.",
              "type": "integer"
            }
          },
          "required": [
            "study",
            "doi",
            "alias",
            "accession"
          ],
          "title": "Publication",
          "type": "object"
        },
        "name": "Publication"
      },
      "ResearchDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "research_data_files",
          "target_class": "ResearchDataFile"
        },
        "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
        "json_schema": {
          "$defs": {
            "ResearchDataFileFormatEnum": {
              "description": "Enum to capture Research Data File formats.",
              "enum": [
                "FASTA",
                "FASTQ",
                "UBAM",
                "FAST5",
                "RAW",
                "D",
                "MZML",
                "MZDATA",
                "OTHER"
              ],
              "title": "ResearchDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "description": "The aliases of the Experiments that produced this Research Data File.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "format": {
              "$ref": "#/$defs/ResearchDataFileFormatEnum",
              "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            },
            "sequencing_lane_id": {
              "description": "The identifier of a sequencing lane.",
              "type": "string"
            },
            "technical_replicate": {
              "description": "An integer to indicate the technical replicate of this File.",
              "type": "integer"
            }
          },
          "required": [
            "format",
            "technical_replicate",
            "experiments",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession",
            "analyses"
          ],
          "title": "ResearchDataFile",
          "type": "object"
        },
        "name": "ResearchDataFile"
      },
      "Sample": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "samples",
          "target_class": "Sample"
        },
        "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
        "json_schema": {
          "$defs": {
            "AgeRangeEnum": {
              "description": "Enum to capture the age range that an Indiviudal belongs to.",
              "enum": [
                "0_TO_5",
                "6_TO_10",
                "11_TO_15",
                "16_TO_20",
                "21_TO_25",
                "26_TO_30",
                "31_TO_35",
                "36_TO_40",
                "41_TO_45",
                "46_TO_50",
                "51_TO_55",
                "56_TO_60",
                "61_TO_65",
                "66_TO_70",
                "71_TO_75",
                "76_TO_80",
                "81_OR_OLDER",
                "UNKNOWN"
              ],
              "title": "AgeRangeEnum",
              "type": "string"
            },
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "CaseControlStatusEnum": {
              "description": "Enum to capture whether a condition corresponds to a case or a control condition.",
              "enum": [
                "CASE",
                "CONTROL",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "CaseControlStatusEnum",
              "type": "string"
            },
            "DiseaseOrHealthyEnum": {
              "description": "Enum to capture whether a condition corresponds to a disease or a healthy state.",
              "enum": [
                "DISEASE",
                "HEALTHY",
                "NOT_APPLICABLE"
              ],
              "title": "DiseaseOrHealthyEnum",
              "type": "string"
            },
            "IsolationEnum": {
              "description": "Describes how biomaterial was isolated.",
              "enum": [
                "BLOOD_DRAW",
                "SURGICAL_REMOVAL",
                "SALIVA_COLLECTION",
                "BUCCAL_SWAB"
              ],
              "title": "IsolationEnum",
              "type": "string"
            },
            "SampleTypeEnum": {
              "description": "The type of a sample",
              "enum": [
                "CF_DNA",
                "DEPLETED_RNA",
                "DS_DNA_CHIP",
                "FFPE_DNA",
                "FFPE_TOTAL_RNA",
                "GENOMIC_DNA",
                "PCR_PRODUCTS",
                "POLY_A_RNA",
                "SINGLE_CELL_DNA",
                "SINGLE_CELL_RNA",
                "SINGLE_CELL_NUCLEI",
                "SMALL_RNA",
                "TOTAL_RNA"
              ],
              "title": "SampleTypeEnum",
              "type": "string"
            },
            "StorageEnum": {
              "description": "Enum to capture how a Sample or Biospecimen was stored.",
              "enum": [
                "REFRIGERATOR",
                "FREEZER",
                "ULTRA_LOW_FREEZER",
                "CRYOGENIC_FREEZER",
                "NONE",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "StorageEnum",
              "type": "string"
            },
            "VitalStatusEnum": {
              "description": "Enum to capture the vital status of an individual.",
              "enum": [
                "ALIVE",
                "DECEASED",
                "UNKNOWN"
              ],
              "title": "VitalStatusEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "biological_replicate": {
              "description": "An integer to indicate the number of a biological replicate.",
              "type": "integer"
            },
            "biospecimen_age_at_sampling": {
              "$ref": "#/$defs/AgeRangeEnum",
              "description": "The age of the Individual at the time of isolating this biospecimen."
            },
            "biospecimen_description": {
              "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
              "type": "string"
            },
            "biospecimen_isolation": {
              "$ref": "#/$defs/IsolationEnum",
              "description": "Method or device employed for collecting/isolating this Biospecimen."
            },
            "biospecimen_name": {
              "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "biospecimen_storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which this Biospecimen is stored."
            },
            "biospecimen_tissue_id": {
              "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
              "type": "string"
            },
            "biospecimen_tissue_term": {
              "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
              "type": "string"
            },
            "biospecimen_type": {
              "description": "The type of Biospecimen.",
              "type": "string"
            },
            "biospecimen_vital_status_at_sampling": {
              "$ref": "#/$defs/VitalStatusEnum",
              "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
            },
            "case_control_status": {
              "$ref": "#/$defs/CaseControlStatusEnum",
              "description": "Whether a Condition corresponds to a treatment or a control."
            },
            "description": {
              "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
              "type": "string"
            },
            "disease_or_healthy": {
              "$ref": "#/$defs/DiseaseOrHealthyEnum",
              "description": "Whether a Condition corresponds to a disease or a healthy state."
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual": {
              "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
              "type": "string"
            },
            "name": {
              "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which a Sample is stored."
            },
            "type": {
              "$ref": "#/$defs/SampleTypeEnum",
              "description": "The type of the Sample."
            },
            "xref": {
              "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "individual",
            "name",
            "description",
            "case_control_status",
            "biospecimen_age_at_sampling",
            "biospecimen_tissue_term",
            "biospecimen_tissue_id",
            "alias",
            "accession",
            "experiments"
          ],
          "title": "Sample",
          "type": "object"
        },
        "name": "Sample"
      },
      "Study": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "studies",
          "target_class": "Study"
        },
        "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "StudyTypeEnum": {
              "description": "Enum to capture the type of a study.",
              "enum": [
                "CANCER_GENOMICS",
                "EPIGENETICS",
                "EXOME_SEQUENCING",
                "FORENSIC_GENETICS",
                "PALEO_GENOMICS",
                "GENE_REGULATION_STUDY",
                "METAGENOMICS",
                "POOLED_CLONE_SEQUENCING",
                "POPULATION_GENOMICS",
                "RNASEQ",
                "RESEQUENCING",
                "SYNTHETIC_GENOMICS",
                "TRANSCRIPTOME_ANALYSIS",
                "WHOLE_GENOME_SEQUENCING",
                "GWAS",
                "RARE_DISEASE",
                "CANCER",
                "COMMON_DISEASE",
                "NEURODEGENERATIVE_DISEASE",
                "CASE_CONTROL",
                "FAMILY",
                "HEREDITARY_DISEASE",
                "GENOMICS",
                "EPIGENOMICS",
                "TRANSCRIPTOMICS",
                "SINGLE_CELL_SEQUENCING",
                "SINGLE_CENTER",
                "MULTI_CENTER",
                "COHORT",
                "LONGITUDINAL",
                "TIME_SERIES",
                "INTERVENTIONAL",
                "NON_INTERVENTIONAL",
                "COMMUNITY_BASED",
                "OTHER"
              ],
              "title": "StudyTypeEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "affiliations": {
              "description": "The affiliations associated with this Study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Study.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "datasets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description (abstract) that describes the goals of this Study.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "publications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "A comprehensive title for this Study.",
              "type": "string"
            },
            "types": {
              "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
              "items": {
                "$ref": "#/$defs/StudyTypeEnum"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "affiliations",
            "alias",
            "accession",
            "datasets",
            "publications"
          ],
          "title": "Study",
          "type": "object"
        },
        "name": "Study"
      }
    }
  },
  {
    "description": "embedded_public",
    "name": "embedded_public",
    "resource_classes": {
      "Analysis": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analyses",
          "target_class": "Analysis"
        },
        "description": "An Analysis is a data transformation that transforms input data to output data.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis is a data transformation that transforms input data to output data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The alias of the Analysis Method that is associated with this Analysis.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing how this Analysis was carried out (e.g., description of computational tools, pipelines, workflows).",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Analysis' entity (EGAZ).",
              "type": "string"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "description": "One or more aliases of the Research Data Files that this Analysis used as input to create Process Data Files.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "The title that describes an entity.",
              "type": "string"
            },
            "type": {
              "description": "The type of this Analysis.",
              "type": "string"
            }
          },
          "required": [
            "analysis_method",
            "title",
            "research_data_files",
            "alias",
            "accession",
            "process_data_files"
          ],
          "title": "Analysis",
          "type": "object"
        },
        "name": "Analysis"
      },
      "AnalysisMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_methods",
          "target_class": "AnalysisMethod"
        },
        "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method captures the workflow steps that were performed to analyze data obtained from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "Description of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name identifying this Analysis Method.",
              "type": "string"
            },
            "parameters": {
              "description": "Key/value pairs where key corresponds to a parameter name and value corresponds to a parameter value (e.g., 'aligner' = 'star_salmon',  'hisat2_build_memory' = '200.GB', 'split_fastq' = 50000000).",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "software_versions": {
              "description": "key/value pairs where key corresponds to a software name and value corresponds to a version descriptor (e.g., `salmon` = '1.3.0', `trim-galore` = '0.6.6', `bedtools` = '2.29.2').",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of an entity. Note: Not to be confused with rdf:type.",
              "type": "string"
            },
            "workflow_doi": {
              "description": "A digital object identifier for the workflow. Can be a publication or the workflow commit that was used for the Analysis.",
              "type": "string"
            },
            "workflow_name": {
              "description": "The workflow name.",
              "type": "string"
            },
            "workflow_repository": {
              "description": "The workflow repository (e.g., the URL).",
              "type": "string"
            },
            "workflow_tasks": {
              "description": "Tasks performed by the workflow",
              "type": "string"
            },
            "workflow_version": {
              "description": "The workflow version.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "workflow_name",
            "workflow_repository",
            "workflow_doi",
            "alias",
            "accession",
            "analyses",
            "analysis_method_supporting_files"
          ],
          "title": "AnalysisMethod",
          "type": "object"
        },
        "name": "AnalysisMethod"
      },
      "AnalysisMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "analysis_method_supporting_files",
          "target_class": "AnalysisMethodSupportingFile"
        },
        "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method": {
              "description": "The Analysis Process associated with an entity.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "AnalysisMethodSupportingFile",
          "type": "object"
        },
        "name": "AnalysisMethodSupportingFile"
      },
      "DataAccessCommittee": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_committees",
          "target_class": "DataAccessCommittee"
        },
        "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the criteria for data sharing has been met,  and request for data use does not raise ethical and/or legal concerns.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "email": {
              "description": "The email of the Data Access Committee (e.g., DAC[at]email.com). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "institute": {
              "description": "The Institute a person is affiliated with.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "institute",
            "alias",
            "accession"
          ],
          "title": "DataAccessCommittee",
          "type": "object"
        },
        "name": "DataAccessCommittee"
      },
      "DataAccessPolicy": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "data_access_policies",
          "target_class": "DataAccessPolicy"
        },
        "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
        "json_schema": {
          "$defs": {
            "DataUseModifierEnum": {
              "description": "Permitted values for data use modifier.",
              "enum": [
                "CLINICAL_CARE_USE",
                "RETURN_TO_DATABASE_OR_RESOURCE",
                "INSTITUTION_SPECIFIC_RESTRICTION",
                "PROJECT_SPECIFIC_RESTRICTION",
                "USER_SPECIFIC_RESTRICTION",
                "TIME_LIMIT_ON_USE",
                "PUBLICATION_MORATORIUM",
                "GEOGRAPHICAL_RESTRICTION",
                "ETHICS_APPROVAL_REQUIRED",
                "COLLABORATION_REQUIRED",
                "PUBLICATION_REQUIRED",
                "NOT_FOR_PROFIT_NON_COMMERCIAL_USE_ONLY",
                "NON_COMMERCIAL_USE_ONLY",
                "NOT_FOR_PROFIT_ORGANISATION_USE_ONLY",
                "GENETIC_STUDIES_ONLY",
                "NO_GENERAL_METHODS_RESEARCH",
                "RESEARCH_SPECIFIC_RESTRICTIONS",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_PROHIBITED"
              ],
              "title": "DataUseModifierEnum",
              "type": "string"
            },
            "DataUsePermissionEnum": {
              "description": "Permitted values for data use permission.",
              "enum": [
                "GENERAL_RESEARCH_USE",
                "HEALTH_OR_MEDICAL_OR_BIOMEDICAL_RESEARCH",
                "DISEASE_SPECIFIC_RESEARCH",
                "NO_RESTRICTION",
                "POPULATION_ORIGINS_OR_ANCESTRY_RESEARCH_ONLY"
              ],
              "title": "DataUsePermissionEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "data_access_committee": {
              "description": "The Data Access Committee linked to this Data Use Policy.",
              "type": "string"
            },
            "data_use_modifier_ids": {
              "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_use_modifier_terms": {
              "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
              "items": {
                "$ref": "#/$defs/DataUseModifierEnum"
              },
              "type": "array"
            },
            "data_use_permission_id": {
              "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
              "type": "string"
            },
            "data_use_permission_term": {
              "$ref": "#/$defs/DataUsePermissionEnum",
              "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
            },
            "description": {
              "description": "A short description for this Data Access Policy.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "name": {
              "description": "A name for this Data Access Policy.",
              "type": "string"
            },
            "policy_text": {
              "description": "The complete text for the Data Access Policy.",
              "type": "string"
            },
            "policy_url": {
              "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "policy_text",
            "data_use_permission_term",
            "data_use_permission_id",
            "data_access_committee",
            "alias",
            "accession"
          ],
          "title": "DataAccessPolicy",
          "type": "object"
        },
        "name": "DataAccessPolicy"
      },
      "Dataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "datasets",
          "target_class": "Dataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "data_access_policy": {
              "description": "The Data Access Policy that applies to this Dataset.",
              "type": "string"
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_methods": {
              "description": "All experiment methods associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiments": {
              "description": "All experiments associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "files": {
              "description": "All files associated with the dataset.",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individuals": {
              "description": "All individuals associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "process_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "processed_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "description": "All samples associated with the dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "study": {
              "description": "The Study associated with this Dataset.",
              "type": "string"
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession",
            "process_data_files",
            "experiment_method_supporting_files",
            "analysis_method_supporting_files",
            "individual_supporting_files",
            "research_data_files",
            "individual_supporting_file_experiment_methods",
            "experiment_method_supporting_file_experiment_methods",
            "processed_data_file_experiment_methods",
            "analysis_method_supporting_file_experiment_methods",
            "research_data_file_experiment_methods",
            "experiments",
            "files",
            "samples",
            "individuals",
            "experiment_methods"
          ],
          "title": "Dataset",
          "type": "object"
        },
        "name": "Dataset"
      },
      "EmbeddedDataset": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "embedded_dataset",
          "target_class": "EmbeddedDataset"
        },
        "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
        "json_schema": {
          "$defs": {
            "AnalysisMethodSupportingFile": {
              "additionalProperties": false,
              "description": "An Analysis Method Supporting File is a File that contains additional information relevant for the Analysis Method, such as (unstructured) protocols or task descriptions.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "analysis_method": {
                  "description": "The Analysis Process associated with an entity.",
                  "type": "string"
                },
                "dataset": {
                  "description": "The Dataset alias associated with this File.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "format": {
                  "$ref": "#/$defs/SupportingFileFormatEnum",
                  "description": "The file format of the Supporting File (e.g., TXT, JSON)."
                },
                "included_in_submission": {
                  "description": "Whether a File is included in the Submission or not.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The given filename.",
                  "type": "string"
                }
              },
              "required": [
                "format",
                "analysis_method",
                "name",
                "dataset",
                "included_in_submission",
                "alias",
                "accession"
              ],
              "title": "AnalysisMethodSupportingFile",
              "type": "object"
            },
            "EmbeddedDataAccessPolicy": {
              "additionalProperties": false,
              "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "data_access_committee": {
                  "$ref": "#/$defs/DataAccessCommittee",
                  "description": "The Data Access Committee linked to this Data Use Policy."
                },
                "data_use_modifier_ids": {
                  "description": "The DUO IDs corresponding to the Data Use Modifier terms (e.g., DUO:0000043).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "data_use_modifier_terms": {
                  "description": "One or more Data Use Modifiers for the Data Use Permission associated with this Data Use Policy. The used terms should be descendants of 'DUO:0000017: data use modifier' (e.g., clinical care use). Please use 'USER_SPECIFIC_RESTRICTION' if no other modifier applies.",
                  "items": {
                    "$ref": "#/$defs/DataUseModifierEnum"
                  },
                  "type": "array"
                },
                "data_use_permission_id": {
                  "description": "The DUO ID corresponding to the Data Use Permission term (e.g., DUO:0000004).",
                  "type": "string"
                },
                "data_use_permission_term": {
                  "$ref": "#/$defs/DataUsePermissionEnum",
                  "description": "The Data Use Permission associated with this Data Use Policy. The used term should be a descendant of 'DUO:0000001: data use permission' (e.g., no restriction)."
                },
                "description": {
                  "description": "A short description for this Data Access Policy.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "name": {
                  "description": "A name for this Data Access Policy.",
                  "type": "string"
                },
                "policy_text": {
                  "description": "The complete text for the Data Access Policy.",
                  "type": "string"
                },
                "policy_url": {
                  "description": "An alternative to the Data Access Policy text is to provide the URL for the policy. This is useful if the terms of the policy are available online at a resolvable URL.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "description",
                "policy_text",
                "data_use_permission_term",
                "data_use_permission_id",
                "data_access_committee",
                "alias",
                "accession"
              ],
              "title": "EmbeddedDataAccessPolicy",
              "type": "object"
            },
            "EmbeddedStudy": {
              "additionalProperties": false,
              "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "affiliations": {
                  "description": "The affiliations associated with this Study.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "attributes": {
                  "description": "One or more attributes that further characterize this Study.",
                  "items": {
                    "$ref": "#/$defs/Attribute"
                  },
                  "type": "array"
                },
                "datasets": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "A detailed description (abstract) that describes the goals of this Study.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "publications": {
                  "items": {
                    "$ref": "#/$defs/Publication"
                  },
                  "type": "array"
                },
                "title": {
                  "description": "A comprehensive title for this Study.",
                  "type": "string"
                },
                "types": {
                  "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
                  "items": {
                    "$ref": "#/$defs/StudyTypeEnum"
                  },
                  "type": "array"
                }
              },
              "required": [
                "title",
                "description",
                "types",
                "affiliations",
                "alias",
                "accession",
                "datasets",
                "publications"
              ],
              "title": "EmbeddedStudy",
              "type": "object"
            },
            "Experiment": {
              "additionalProperties": false,
              "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "attributes": {
                  "description": "Key/value pairs corresponding to an entity.",
                  "items": {
                    "$ref": "#/$defs/Attribute"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "A detailed description of this Experiment.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession of the 'Run' entity (EGAR).",
                  "type": "string"
                },
                "experiment_method": {
                  "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
                  "type": "string"
                },
                "research_data_files": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sample": {
                  "description": "The alias of one or more Samples that are associated with this Experiment.",
                  "type": "string"
                },
                "title": {
                  "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
                  "type": "string"
                },
                "type": {
                  "description": "The type of this Experiment.",
                  "type": "string"
                }
              },
              "required": [
                "experiment_method",
                "title",
                "description",
                "sample",
                "alias",
                "accession",
                "research_data_files"
              ],
              "title": "Experiment",
              "type": "object"
            },
            "ExperimentMethod": {
              "additionalProperties": false,
              "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "attributes": {
                  "description": "One or more attributes that further characterize this Experiment Method.",
                  "items": {
                    "$ref": "#/$defs/Attribute"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "A short description of this Experiment Method.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession of the 'Experiment' entity (EGAX).",
                  "type": "string"
                },
                "end_bias": {
                  "$ref": "#/$defs/EndBiasEnum",
                  "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
                },
                "experiment_method_supporting_files": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "flow_cell_id": {
                  "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
                  "type": "string"
                },
                "flow_cell_type": {
                  "$ref": "#/$defs/FlowCellTypeEnum",
                  "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
                },
                "instrument_model": {
                  "$ref": "#/$defs/InstrumentModelEnum",
                  "description": "The name and model of the technology platform used to perform sequencing."
                },
                "library_preparation": {
                  "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
                  "type": "string"
                },
                "library_preparation_kit_manufacturer": {
                  "description": "The manufacturer of the kit used for library preparation.",
                  "type": "string"
                },
                "library_preparation_kit_retail_name": {
                  "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
                  "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
                },
                "library_selection_methods": {
                  "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
                  "items": {
                    "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
                  },
                  "type": "array"
                },
                "library_type": {
                  "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
                  "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
                },
                "name": {
                  "description": "A short name identifying this Experiment Method.",
                  "type": "string"
                },
                "primer": {
                  "$ref": "#/$defs/PrimerEnum",
                  "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
                },
                "rnaseq_strandedness": {
                  "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
                  "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
                },
                "sample_barcode_read": {
                  "$ref": "#/$defs/SampleBarcodeReadEnum",
                  "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
                },
                "sequencing_center": {
                  "description": "Center where sample was sequenced.",
                  "type": "string"
                },
                "sequencing_layout": {
                  "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
                  "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
                },
                "sequencing_read_length": {
                  "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
                  "type": "string"
                },
                "target_coverage": {
                  "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
                  "type": "string"
                },
                "target_regions": {
                  "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": {
                  "description": "The type associated with this Experiment Method.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "description",
                "type",
                "library_type",
                "library_selection_methods",
                "library_preparation",
                "instrument_model",
                "sequencing_layout",
                "alias",
                "accession",
                "experiment_method_supporting_files"
              ],
              "title": "ExperimentMethod",
              "type": "object"
            },
            "ExperimentMethodSupportingFile": {
              "additionalProperties": false,
              "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "dataset": {
                  "description": "The Dataset alias associated with this File.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "experiment_method": {
                  "description": "The Experiment Method associated with an entity.",
                  "type": "string"
                },
                "format": {
                  "$ref": "#/$defs/SupportingFileFormatEnum",
                  "description": "The file format of the Supporting File (e.g., TXT, JSON)."
                },
                "included_in_submission": {
                  "description": "Whether a File is included in the Submission or not.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The given filename.",
                  "type": "string"
                }
              },
              "required": [
                "format",
                "experiment_method",
                "name",
                "dataset",
                "included_in_submission",
                "alias",
                "accession"
              ],
              "title": "ExperimentMethodSupportingFile",
              "type": "object"
            },
            "Individual": {
              "additionalProperties": false,
              "description": "An Individual is a Person who is participating in a Study.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "ancestry_ids": {
                  "description": "A person's descent or lineage from a population.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ancestry_terms": {
                  "description": "A person's descent or lineage from a population.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "diagnosis_ids": {
                  "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "diagnosis_terms": {
                  "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "geographical_region_id": {
                  "description": "The geographical region where the Individual is located.",
                  "type": "string"
                },
                "geographical_region_term": {
                  "description": "The geographical region where the Individual is located.",
                  "type": "string"
                },
                "individual_supporting_files": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "phenotypic_features_ids": {
                  "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "phenotypic_features_terms": {
                  "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "samples": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sex": {
                  "$ref": "#/$defs/IndividualSexEnum",
                  "description": "The genotypic sex of the Individual (e.g., female)."
                }
              },
              "required": [
                "sex",
                "alias",
                "accession",
                "samples",
                "individual_supporting_files"
              ],
              "title": "Individual",
              "type": "object"
            },
            "IndividualSupportingFile": {
              "additionalProperties": false,
              "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "dataset": {
                  "description": "The Dataset alias associated with this File.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "format": {
                  "$ref": "#/$defs/SupportingFileFormatEnum",
                  "description": "The file format of the Supporting File (e.g., TXT, JSON)."
                },
                "included_in_submission": {
                  "description": "Whether a File is included in the Submission or not.",
                  "type": "boolean"
                },
                "individual": {
                  "description": "The Individual associated with an entity.",
                  "type": "string"
                },
                "name": {
                  "description": "The given filename.",
                  "type": "string"
                }
              },
              "required": [
                "format",
                "individual",
                "name",
                "dataset",
                "included_in_submission",
                "alias",
                "accession"
              ],
              "title": "IndividualSupportingFile",
              "type": "object"
            },
            "ProcessDataFile": {
              "additionalProperties": false,
              "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "analysis": {
                  "description": "The alias of the Analysis that produced this Process Data File.",
                  "type": "string"
                },
                "dataset": {
                  "description": "The Dataset alias associated with this File.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "format": {
                  "$ref": "#/$defs/ProcessDataFileFormatEnum",
                  "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
                },
                "included_in_submission": {
                  "description": "Whether a File is included in the Submission or not.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The given filename.",
                  "type": "string"
                }
              },
              "required": [
                "format",
                "analysis",
                "name",
                "dataset",
                "included_in_submission",
                "alias",
                "accession"
              ],
              "title": "ProcessDataFile",
              "type": "object"
            },
            "ResearchDataFile": {
              "additionalProperties": false,
              "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "analyses": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "dataset": {
                  "description": "The Dataset alias associated with this File.",
                  "type": "string"
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "experiments": {
                  "description": "The aliases of the Experiments that produced this Research Data File.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "format": {
                  "$ref": "#/$defs/ResearchDataFileFormatEnum",
                  "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
                },
                "included_in_submission": {
                  "description": "Whether a File is included in the Submission or not.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The given filename.",
                  "type": "string"
                },
                "sequencing_lane_id": {
                  "description": "The identifier of a sequencing lane.",
                  "type": "string"
                },
                "technical_replicate": {
                  "description": "An integer to indicate the technical replicate of this File.",
                  "type": "integer"
                }
              },
              "required": [
                "format",
                "technical_replicate",
                "experiments",
                "name",
                "dataset",
                "included_in_submission",
                "alias",
                "accession",
                "analyses"
              ],
              "title": "ResearchDataFile",
              "type": "object"
            },
            "Sample": {
              "additionalProperties": false,
              "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
              "properties": {
                "accession": {
                  "description": "The accession for an entity.",
                  "type": "string"
                },
                "alias": {
                  "description": "The alias for an entity at the time of submission.",
                  "type": "string"
                },
                "attributes": {
                  "description": "Key/value pairs corresponding to an entity.",
                  "items": {
                    "$ref": "#/$defs/Attribute"
                  },
                  "type": "array"
                },
                "biological_replicate": {
                  "description": "An integer to indicate the number of a biological replicate.",
                  "type": "integer"
                },
                "biospecimen_age_at_sampling": {
                  "$ref": "#/$defs/AgeRangeEnum",
                  "description": "The age of the Individual at the time of isolating this biospecimen."
                },
                "biospecimen_description": {
                  "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
                  "type": "string"
                },
                "biospecimen_isolation": {
                  "$ref": "#/$defs/IsolationEnum",
                  "description": "Method or device employed for collecting/isolating this Biospecimen."
                },
                "biospecimen_name": {
                  "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
                  "type": "string"
                },
                "biospecimen_storage": {
                  "$ref": "#/$defs/StorageEnum",
                  "description": "Methods by which this Biospecimen is stored."
                },
                "biospecimen_tissue_id": {
                  "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
                  "type": "string"
                },
                "biospecimen_tissue_term": {
                  "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
                  "type": "string"
                },
                "biospecimen_type": {
                  "description": "The type of Biospecimen.",
                  "type": "string"
                },
                "biospecimen_vital_status_at_sampling": {
                  "$ref": "#/$defs/VitalStatusEnum",
                  "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
                },
                "case_control_status": {
                  "$ref": "#/$defs/CaseControlStatusEnum",
                  "description": "Whether a Condition corresponds to a treatment or a control."
                },
                "description": {
                  "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
                  "type": "string"
                },
                "disease_or_healthy": {
                  "$ref": "#/$defs/DiseaseOrHealthyEnum",
                  "description": "Whether a Condition corresponds to a disease or a healthy state."
                },
                "ega_accession": {
                  "description": "The EGA accession ID of an entity.",
                  "type": "string"
                },
                "experiments": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "individual": {
                  "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
                  "type": "string"
                },
                "name": {
                  "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
                  "type": "string"
                },
                "storage": {
                  "$ref": "#/$defs/StorageEnum",
                  "description": "Methods by which a Sample is stored."
                },
                "type": {
                  "$ref": "#/$defs/SampleTypeEnum",
                  "description": "The type of the Sample."
                },
                "xref": {
                  "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "individual",
                "name",
                "description",
                "case_control_status",
                "biospecimen_age_at_sampling",
                "biospecimen_tissue_term",
                "biospecimen_tissue_id",
                "alias",
                "accession",
                "experiments"
              ],
              "title": "Sample",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "analysis_method_supporting_files": {
              "items": {
                "$ref": "#/$defs/AnalysisMethodSupportingFile"
              },
              "type": "array"
            },
            "data_access_policy": {
              "$ref": "#/$defs/EmbeddedDataAccessPolicy",
              "description": "The Data Access Policy that applies to this Dataset."
            },
            "description": {
              "description": "A description summarizing this Dataset.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "experiment_method_supporting_files": {
              "items": {
                "$ref": "#/$defs/ExperimentMethodSupportingFile"
              },
              "type": "array"
            },
            "experiment_methods": {
              "description": "All experiment methods associated with the dataset.",
              "items": {
                "$ref": "#/$defs/ExperimentMethod"
              },
              "type": "array"
            },
            "experiments": {
              "description": "All experiments associated with the dataset.",
              "items": {
                "$ref": "#/$defs/Experiment"
              },
              "type": "array"
            },
            "files": {
              "description": "All files associated with the dataset.",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual_supporting_files": {
              "items": {
                "$ref": "#/$defs/IndividualSupportingFile"
              },
              "type": "array"
            },
            "individuals": {
              "description": "All individuals associated with the dataset.",
              "items": {
                "$ref": "#/$defs/Individual"
              },
              "type": "array"
            },
            "process_data_files": {
              "items": {
                "$ref": "#/$defs/ProcessDataFile"
              },
              "type": "array"
            },
            "processed_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_file_experiment_methods": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "research_data_files": {
              "items": {
                "$ref": "#/$defs/ResearchDataFile"
              },
              "type": "array"
            },
            "samples": {
              "description": "All samples associated with the dataset.",
              "items": {
                "$ref": "#/$defs/Sample"
              },
              "type": "array"
            },
            "study": {
              "$ref": "#/$defs/EmbeddedStudy",
              "description": "The Study associated with this Dataset."
            },
            "title": {
              "description": "A title for this Dataset.",
              "type": "string"
            },
            "types": {
              "description": "The type of this Dataset.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "data_access_policy",
            "study",
            "alias",
            "accession",
            "process_data_files",
            "experiment_method_supporting_files",
            "analysis_method_supporting_files",
            "individual_supporting_files",
            "research_data_files",
            "individual_supporting_file_experiment_methods",
            "experiment_method_supporting_file_experiment_methods",
            "processed_data_file_experiment_methods",
            "analysis_method_supporting_file_experiment_methods",
            "research_data_file_experiment_methods",
            "experiments",
            "files",
            "samples",
            "individuals",
            "experiment_methods"
          ],
          "title": "EmbeddedDataset",
          "type": "object"
        },
        "name": "EmbeddedDataset"
      },
      "Experiment": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiments",
          "target_class": "Experiment"
        },
        "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description of this Experiment.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Run' entity (EGAR).",
              "type": "string"
            },
            "experiment_method": {
              "description": "The alias of one or more Experiment Methods that are associated with this Experiment.",
              "type": "string"
            },
            "research_data_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sample": {
              "description": "The alias of one or more Samples that are associated with this Experiment.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Experiment (e.g., GHGAE_PBMC_RNAseq).",
              "type": "string"
            },
            "type": {
              "description": "The type of this Experiment.",
              "type": "string"
            }
          },
          "required": [
            "experiment_method",
            "title",
            "description",
            "sample",
            "alias",
            "accession",
            "research_data_files"
          ],
          "title": "Experiment",
          "type": "object"
        },
        "name": "Experiment"
      },
      "ExperimentMethod": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_methods",
          "target_class": "ExperimentMethod"
        },
        "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "EndBiasEnum": {
              "description": "Permitted values for end bias.",
              "enum": [
                "3_PRIME_END",
                "5_PRIME_END",
                "FULL_LENGTH"
              ],
              "title": "EndBiasEnum",
              "type": "string"
            },
            "FlowCellTypeEnum": {
              "description": "Permitted values for flow cell type.",
              "enum": [
                "ILLUMINA_NOVA_SEQ_S2",
                "ILLUMINA_NOVA_SEQ_S4",
                "PROMETHION",
                "FLONGLE",
                "MINION",
                "GRIDION",
                "OTHER"
              ],
              "title": "FlowCellTypeEnum",
              "type": "string"
            },
            "InstrumentModelEnum": {
              "description": "Permitted values for the instrument model.",
              "enum": [
                "454_GS",
                "454_GS_20",
                "454_GS_FLX",
                "454_GS_FLX_TITANIUM",
                "454_GS_FLX+",
                "454_GS_JUNIOR",
                "AB_310_GENETIC_ANALYZER",
                "AB_3130_GENETIC_ANALYZER",
                "AB_3130XL_GENETIC_ANALYZER",
                "AB_3500_GENETIC_ANALYZER",
                "AB_3500XL_GENETIC_ANALYZER",
                "AB_3730_GENETIC_ANALYZER",
                "AB_3730XL_GENETIC_ANALYZER",
                "AB_5500_GENETIC_ANALYZER",
                "AB_5500XL_GENETIC_ANALYZER",
                "AB_5500XL-W_GENETIC_ANALYSIS_SYSTEM",
                "BGISEQ-50",
                "BGISEQ-500",
                "DNBSEQ-G400",
                "DNBSEQ-G400_FAST",
                "DNBSEQ-G50",
                "DNBSEQ-T7",
                "ELEMENT_AVITI",
                "GRIDION",
                "HELICOS_HELISCOPE",
                "HISEQ_X_FIVE",
                "HISEQ_X_TEN",
                "ILLUMINA_GENOME_ANALYZER",
                "ILLUMINA_GENOME_ANALYZER_II",
                "ILLUMINA_GENOME_ANALYZER_IIX",
                "ILLUMINA_HISCANSQ",
                "ILLUMINA_HISEQ_1000",
                "ILLUMINA_HISEQ_1500",
                "ILLUMINA_HISEQ_2000",
                "ILLUMINA_HISEQ_2500",
                "ILLUMINA_HISEQ_3000",
                "ILLUMINA_HISEQ_4000",
                "ILLUMINA_HISEQ_X",
                "ILLUMINA_MISEQ",
                "ILLUMINA_MINISEQ",
                "ILLUMINA_NOVASEQ_6000",
                "ILLUMINA_NOVASEQ_X",
                "ILLUMINA_ISEQ_100",
                "ION_GENESTUDIO_S5",
                "ION_GENESTUDIO_S5_PLUS",
                "ION_GENESTUDIO_S5_PRIME",
                "ION_TORRENT_GENEXUS",
                "ION_TORRENT_PGM",
                "ION_TORRENT_PROTON",
                "ION_TORRENT_S5",
                "ION_TORRENT_S5_XL",
                "MGISEQ-2000RS",
                "MINION",
                "NEXTSEQ_1000",
                "NEXTSEQ_2000",
                "NEXTSEQ_500",
                "NEXTSEQ_550",
                "PACBIO_RS",
                "PACBIO_RS_II",
                "PROMETHION",
                "SEQUEL",
                "SEQUEL_II",
                "SEQUEL_IIE",
                "UG_100",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "InstrumentModelEnum",
              "type": "string"
            },
            "LibraryPreparationKitRetailNameEnum": {
              "description": "Permitted values for library preparation kit retail name.",
              "enum": [
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V2",
                "10X_GENOMICS_CHROMIUM_SINGLE_CELL_3_V3",
                "ACCEL_NGS_2_S_PLUS_DNA_LIBRARY_KIT",
                "ACCEL_NGS_METHYL_SEQ_DNA",
                "AGILENT_STRAND_SPECIFIC_RNA",
                "AGILENT_SURE_SELECT_CUSTOM_ENRICHMENT_KIT",
                "AGILENT_SURE_SELECT_V3",
                "AGILENT_SURE_SELECT_V4",
                "AGILENT_SURE_SELECT_V4_UTRS",
                "AGILENT_SURE_SELECT_V5",
                "AGILENT_SURE_SELECT_V5_UTRS",
                "AGILENT_SURE_SELECT_V6",
                "AGILENT_SURE_SELECT_V6_UTRS",
                "AGILENT_SURE_SELECT_V6_PLUS_ONE",
                "AGILENT_SURE_SELECT_V6_PLUS_TWO",
                "AGILENT_SURE_SELECT_V8",
                "AGILENT_SURE_SELECT_V8_UTRS",
                "AGILENT_SURE_SELECT_V8_NCV",
                "AGILENT_SURE_SELECT_QXT_WGS",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_ONE",
                "AGILENT_SURE_SELECT_XT_HS_HUMAN_ALL_EXON_V7_TWO",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_ONE",
                "AGILENT_SURE_SELECT_CLINICAL_RESEARCH_EXOME_V2_TWO",
                "AGILENT_CLEAR_SEQ_COMPREHENSIVE_CANCER_XT",
                "AGILENT_SURE_SELECT_CUSTOM_TIER1",
                "AGILENT_SURE_SELECT_CUSTOM_TIER2",
                "AGILENT_SURE_SELECT_CUSTOM_TIER3",
                "AGILENT_SURE_SELECT_CUSTOM_TIER4",
                "AGILENT_SURE_SELECT_CUSTOM_TIER5",
                "AVENIO_CT_DNA_TARGETED_KIT",
                "AVENIO_CT_DNA_SURVEILLANCE_KIT",
                "AVENIO_CT_DNA_EXPANDED_KIT",
                "IDT_X_GEN_EXOME_RESEARCH_PANEL",
                "ILLUMINA_DNA_PCR_FREE_PREP",
                "ILLUMINA_NEXTERA_DNA_FLEX",
                "ILLUMINA_DNA_PREP",
                "ILLUMINA_NEXTERA_EXOME_ENRICHMENT_KIT",
                "ILLUMINA_DNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_DNA_PREP_WITH_EXOME_2_5_ENRICHMENT",
                "ILLUMINA_STRANDED_M_RNA_PREP",
                "ILLUMINA_NEXTERA_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_NEXTERA_XT_DNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_RNA_PREP_WITH_ENRICHMENT",
                "ILLUMINA_TRU_SEQ_CH_IP_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_LOW_INPUT_KIT",
                "ILLUMINA_TRU_SEQ_CUSTOM_AMPLICON_V_1_5",
                "ILLUMINA_TRU_SEQ_DNA_EXOME",
                "ILLUMINA_TRU_SEQ_DNA_NANO",
                "ILLUMINA_TRU_SEQ_DNA_NANO_LIBRARY_PREP_KIT_FOR_NEO_PREP",
                "ILLUMINA_TRU_SEQ_NANO_DNA_HT",
                "ILLUMINA_TRU_SEQ_NANO_DNA_LT",
                "ILLUMINA_TRU_SEQ_FFPE_DNA_LIBRARY_PREP_QC_KIT",
                "ILLUMINA_TRU_SEQ_DNA_PCR_FREE",
                "ILLUMINA_TRU_SEQ_RNA_LIBRARY_PREP_KIT_V2",
                "ILLUMINA_TRU_SEQ_RNA_EXOME",
                "ILLUMINA_TRU_SEQ_SMALL_RNA_LIBRARY_PREPARATION_KIT",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_M_RNA",
                "ILLUMINA_TRU_SEQ_STRANDED_TOTAL_RNA_WITH_RIBO_ZERO_GOLD",
                "VAHTS_TOTAL_RNA_SEQ_H_M_R_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "ILLUMINA_NEXTERA_XT_DNA",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_STEM_CELL_PANEL",
                "ILLUMINA_TRU_SEQ_TARGETED_RNA_EXPRESSION_P_53_PANEL",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_HIGH_THROUGHPUT",
                "ILLUMINA_TRU_SIGHT_ONCOLOGY_500_CT_DNA",
                "ILLUMINA_TRU_SIGHT_RNA_FUSION_PANEL",
                "ILLUMINA_TRU_SIGHT_RNA_PAN_CANCER",
                "ILLUMINA_TRU_SIGHT_TUMOR_15",
                "ILLUMINA_TRU_SIGHT_TUMOR_170",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_BRCA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CANCER_HOTSPOT_PANEL_V2",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CHILDHOOD_CANCER_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_COMPREHENSIVE_PANEL_V3",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_DNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_FUSION_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_CUSTOM_RNA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_FOCUS_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_REPERTOIRE_PLUS_TCR_BETA_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_IMMUNE_RESPONSE_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_LIBRARY_PREP_INDEXES_AND_ACCESSOIRES",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_MYELOID_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_ON_DEMAND",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TCR_BETA_SR_PANEL",
                "ILLUMINA_AMPLI_SEQ_FOR_ILLUMINA_TRANSCRIPTOME_HUMAN_GENE_EXPRESSION_PANEL",
                "ILLUMINA_COMPLETE_LONG_READ_PREP_HUMAN",
                "INFORM_ONCO_PANEL_HG19",
                "ION_AMPLI_SEQ_EXOME_KIT",
                "KAPA_HIFI_HOT_START_READYMIX",
                "KAPA_HYPER_PREP_KIT",
                "KAPA_HYPER_PREP_PCR_FREE_KIT",
                "KAPA_HYPER_PLUS_KIT",
                "KAPA_M_RNA_HYPER_PREP_KIT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_HUMAN_MOUSE_RAT",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLET_V2_HU_MO_RAT_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_GLOBIN_R_RNA_DEPLETION_KIT_V2_HUMAN_MOUSE_RAT",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET",
                "NEB_NEXT_RNA_DEPLETION_CORE_REAGENT_SET_RNA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_POLY_A_M_RNA_MAGNETIC_ISOLATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_CDNA_SYNTHESIS_AND_AMPLIFICATION_MODULE",
                "NEB_NEXT_SINGLE_CELL_LOW_INPUT_RNA_LIBRARY_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_FIRST_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_RNA_ULTRA_II_LIBRARY_PREP_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SAMPLE_WITH_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_SECOND_STRAND_SYNTHESIS_MODULE",
                "NEB_NEXT_ULTRA_DNA",
                "NEB_NEXT_ULTRA_II_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DIRECTIONAL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_MODULE",
                "NEB_NEXT_ULTRA_II_END_REPAIR_DA_TAILING_MODULE",
                "NEB_NEXT_ULTRA_II_FS_DNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_ILLUMINA_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_SAMPLE_PURIFICATION_BEADS",
                "NEB_NEXT_ULTRA_II_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_FS_DNA_PCR_FREE_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_ULTRA_II_LIGATION_MODULE",
                "NEB_NEXT_ULTRA_II_Q5_MASTER_MIX",
                "NEB_NEXT_Q5_HOT_START_HIFI_PCR_MASTER_MIX",
                "NEB_TEMPLATE_SWITCHING_RT_ENZYME_MIX",
                "NEB_NEXT_LIBRARY_PCR_MASTER_MIX",
                "NEB_NEXT_ULTRA_SHEAR",
                "NEB_NEXT_ULTRA_SHEAR_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_COMPANION_MODULE_ONT_LIGATION_SEQUENCING",
                "NEB_NEXT_FAST_DNA_FRAGMENTATION_AND_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FAST_DNA_LIBRARY_PREP_SET_FOR_ION_TORRENT",
                "NEB_NEXT_FFPE_DNA_LIBRARY_PREP_KIT",
                "NEB_NEXT_FFPE_DNA_REPAIR_MIX",
                "NEB_NEXT_FFPE_DNA_REPAIR_V2_MODULE",
                "NEB_NEXT_DS_DNA_FRAGMENTASE",
                "NEB_NEXT_MAGNETIC_SEPARATION_RACK",
                "NEB_NEXT_LIBRARY_QUANT_FOR_ILLUMINA",
                "NEB_NEXT_LIBRARY_QUANT_DNA_STANDARDS",
                "NEB_NEXT_MAGNESIUM_RNA_FRAGMENTATION_MODULE",
                "NEB_NEXT_DIRECT_GENOTYPING_SOLUTION",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_CONVERSION_MODULE",
                "NEB_NEXT_ENZYMATIC_METHYL_SEQ_KIT",
                "NEB_NEXT_MULTIPLEX_SMALL_RNA_LIBRARY_PREP_KIT_FOR_ILLUMINA",
                "NEB_NEXT_SMALL_RNA_LIBRARY_PREP_SET_FOR_ILLUMINA_MULTIPLEX_COMPATIBLE",
                "EPI_MARK_5_HMC_AND_5_MC_ANALYSIS_KIT",
                "EPI_MARK_METHYLATED_DNA_ENRICHMENT_KIT",
                "EPI_MARK_N6_METHYLADENOSINE_ENRICHMENT_KIT",
                "EPI_MARK_NUCLEOSOME_ASSEMBLY_KIT",
                "EPI_MARK_HOT_START_TAG_DNA_POLYMERASE",
                "PICO_METHYL_SEQ",
                "TAKARA_SMART_SEQ_V4_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_ER_STRANDED_TOTAL_RNA_SEQ_KIT",
                "TAKARA_SMART_ER_ULTRA_LOW_INPUT_RNA_KIT",
                "TAKARA_SMART_SEQ2_TAG",
                "TAKARA_SMART_ER_PREP_X_DNA_LIBRARY_KIT",
                "SUPER_SCRIPT_II_RT_BULK",
                "SURE_CELL_ATAC_SEQ_LIBRARY_PREP_KIT",
                "EUROFINS_ENRICHMENT_CUSTOM",
                "TWIST_HUMAN_CORE_EXOME_KIT",
                "TWIST_HUMAN_CORE_EXOME_PLUS_KIT",
                "ULTRALOW_METHYL_SEQ_WITH_TRUE_METHYL_OX_BS",
                "OTHER"
              ],
              "title": "LibraryPreparationKitRetailNameEnum",
              "type": "string"
            },
            "LibraryPreparationLibrarySelectionEnum": {
              "description": "Permitted vocabulary for library selections.",
              "enum": [
                "5_METHYLCYTIDINE_ANTIBODY_METHOD",
                "CAGE_METHOD",
                "C_DNA_METHOD",
                "CF_H_METHOD",
                "CF_M_METHOD",
                "CF_S_METHOD",
                "CF_T_METHOD",
                "CHIP_SEQ_METHOD",
                "D_NASE_METHOD",
                "HMPR_METHOD",
                "HYBRID_SELECTION_METHOD",
                "MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN_METHOD",
                "MF_METHOD",
                "M_NASE_METHOD",
                "MSLL_METHOD",
                "PCR_METHOD",
                "RACE_METHOD",
                "RANDOM_PCR_METHOD",
                "RANDOM_METHOD",
                "RT_PCR_METHOD",
                "REDUCED_REPRESENTATION_METHOD",
                "RESTRICTION_DIGEST_METHOD",
                "SIZE_FRACTIONATION_METHOD",
                "UNSPECIFIED",
                "OTHER"
              ],
              "title": "LibraryPreparationLibrarySelectionEnum",
              "type": "string"
            },
            "LibraryPreparationLibraryTypeEnum": {
              "description": "The type of the library.",
              "enum": [
                "WGS",
                "WXS",
                "WCS",
                "TOTAL_RNA",
                "M_RNA",
                "MI_RNA",
                "NC_RNA",
                "ATAC",
                "METHYLATION",
                "CHROMOSOME_CONFORMATION_CAPTURE",
                "CHIP_SEQ",
                "OTHER"
              ],
              "title": "LibraryPreparationLibraryTypeEnum",
              "type": "string"
            },
            "LibraryPreparationRNASeqStrandednessEnum": {
              "description": "Permitted values for library preparation RNASeq strandedness.",
              "enum": [
                "SENSE",
                "ANTISENSE",
                "UNSTRANDED"
              ],
              "title": "LibraryPreparationRNASeqStrandednessEnum",
              "type": "string"
            },
            "PrimerEnum": {
              "description": "Permitted values for primer.",
              "enum": [
                "OLIGO_D_T",
                "RANDOM",
                "GENE_SPECIFIC",
                "OTHER"
              ],
              "title": "PrimerEnum",
              "type": "string"
            },
            "SampleBarcodeReadEnum": {
              "description": "Permitted values for sample barcode read.",
              "enum": [
                "INDEX1",
                "INDEX1_AND_INDEX2",
                "OTHER"
              ],
              "title": "SampleBarcodeReadEnum",
              "type": "string"
            },
            "SequencingProtocolSequencingLayoutEnum": {
              "description": "Single-end vs paired-end sequencing.",
              "enum": [
                "SE",
                "PE"
              ],
              "title": "SequencingProtocolSequencingLayoutEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "The Experiment Method captures technical metadata describing the parameters used to generate output from the Sample.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Experiment Method.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "description": {
              "description": "A short description of this Experiment Method.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession of the 'Experiment' entity (EGAX).",
              "type": "string"
            },
            "end_bias": {
              "$ref": "#/$defs/EndBiasEnum",
              "description": "The end of the cDNA molecule that is preferentially sequenced (e.g., 3/5 prime end, full-length)."
            },
            "experiment_method_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "flow_cell_id": {
              "description": "Flow cell ID (e.g., Experiment ID_Cell 1_Lane_1).",
              "type": "string"
            },
            "flow_cell_type": {
              "$ref": "#/$defs/FlowCellTypeEnum",
              "description": "Type of flow cell used (e.g., S4, S2 for NovaSeq; PromethION, Flongle for Nanopore)."
            },
            "instrument_model": {
              "$ref": "#/$defs/InstrumentModelEnum",
              "description": "The name and model of the technology platform used to perform sequencing."
            },
            "library_preparation": {
              "description": "The general method for preparation of the sequencing library (e.g., KAPA PCR-free).",
              "type": "string"
            },
            "library_preparation_kit_manufacturer": {
              "description": "The manufacturer of the kit used for library preparation.",
              "type": "string"
            },
            "library_preparation_kit_retail_name": {
              "$ref": "#/$defs/LibraryPreparationKitRetailNameEnum",
              "description": "The retail name for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version (e.g., Agilent sure select Human Exome V8, Twist RefSeq Exome)."
            },
            "library_selection_methods": {
              "description": "One or more methods used to select for or against, enrich, or screen the material being sequenced (e.g., random, PCA, cDNA).",
              "items": {
                "$ref": "#/$defs/LibraryPreparationLibrarySelectionEnum"
              },
              "type": "array"
            },
            "library_type": {
              "$ref": "#/$defs/LibraryPreparationLibraryTypeEnum",
              "description": "Describe the level of omics analysis (e.g., WGS, ATAC)."
            },
            "name": {
              "description": "A short name identifying this Experiment Method.",
              "type": "string"
            },
            "primer": {
              "$ref": "#/$defs/PrimerEnum",
              "description": "The type of primer used for reverse transcription (e.g., oligo-dT or random)."
            },
            "rnaseq_strandedness": {
              "$ref": "#/$defs/LibraryPreparationRNASeqStrandednessEnum",
              "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand."
            },
            "sample_barcode_read": {
              "$ref": "#/$defs/SampleBarcodeReadEnum",
              "description": "The type of read that contains the sample barcode (e.g., index1, index2, read1, read2)."
            },
            "sequencing_center": {
              "description": "Center where sample was sequenced.",
              "type": "string"
            },
            "sequencing_layout": {
              "$ref": "#/$defs/SequencingProtocolSequencingLayoutEnum",
              "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode."
            },
            "sequencing_read_length": {
              "description": "Length of sequencing reads (e.g., long or short or actual number of the read length).",
              "type": "string"
            },
            "target_coverage": {
              "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing, (i.e. the number of times a particular locus was sequenced).",
              "type": "string"
            },
            "target_regions": {
              "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type associated with this Experiment Method.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type",
            "library_type",
            "library_selection_methods",
            "library_preparation",
            "instrument_model",
            "sequencing_layout",
            "alias",
            "accession",
            "experiment_method_supporting_files"
          ],
          "title": "ExperimentMethod",
          "type": "object"
        },
        "name": "ExperimentMethod"
      },
      "ExperimentMethodSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "experiment_method_supporting_files",
          "target_class": "ExperimentMethodSupportingFile"
        },
        "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Experiment Method Supporting File is a File that contains additional information relevant for the Experiment Method, such as (unstructured) protocols.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiment_method": {
              "description": "The Experiment Method associated with an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "experiment_method",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ExperimentMethodSupportingFile",
          "type": "object"
        },
        "name": "ExperimentMethodSupportingFile"
      },
      "Individual": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individuals",
          "target_class": "Individual"
        },
        "description": "An Individual is a Person who is participating in a Study.",
        "json_schema": {
          "$defs": {
            "IndividualSexEnum": {
              "description": "The sex of an Individual as as defined in a specific medical and clinical context.",
              "enum": [
                "FEMALE",
                "MALE",
                "UNKNOWN",
                "OTHER"
              ],
              "title": "IndividualSexEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual is a Person who is participating in a Study.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "ancestry_ids": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ancestry_terms": {
              "description": "A person's descent or lineage from a population.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_ids": {
              "description": "One or more diagnoses that the entity is associated with at the time of retrieval from the organism. The diagnosis is captured using a code from ICD-10 (WHO version). Please restrict the ICD code to the chapter letter and two digits for the main diagnosis (e.g., E10, C01).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "diagnosis_terms": {
              "description": "The ICD-10 terms corresponding to the ICD-10 codes (e.g., Type 1 diabetes mellitus, Malignant neoplasm of base of tongue).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "geographical_region_id": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "geographical_region_term": {
              "description": "The geographical region where the Individual is located.",
              "type": "string"
            },
            "individual_supporting_files": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_ids": {
              "description": "The corresponding ID to the HPO vocabulary (e.g., HP:0002732, HP:0012735, HP:0002615).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "phenotypic_features_terms": {
              "description": "The phenotypic feature concepts that the entity is associated with at the time of retrieval from the organism. The Phenotypic Feature is captured using a concept from the Human Phenotype Ontology (e.g., Lymph node hypoplasia, Cough, Hypotension).",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "samples": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sex": {
              "$ref": "#/$defs/IndividualSexEnum",
              "description": "The genotypic sex of the Individual (e.g., female)."
            }
          },
          "required": [
            "sex",
            "alias",
            "accession",
            "samples",
            "individual_supporting_files"
          ],
          "title": "Individual",
          "type": "object"
        },
        "name": "Individual"
      },
      "IndividualSupportingFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "individual_supporting_files",
          "target_class": "IndividualSupportingFile"
        },
        "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
        "json_schema": {
          "$defs": {
            "SupportingFileFormatEnum": {
              "description": "Enum to capture Supporting File types.",
              "enum": [
                "CSV",
                "JSON",
                "PED",
                "TSV",
                "TXT",
                "YAML",
                "OTHER"
              ],
              "title": "SupportingFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "An Individual Supporting File is a File that contains additional information relevant for the Individual, such as ped-files, phenopackets or imaging data.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/SupportingFileFormatEnum",
              "description": "The file format of the Supporting File (e.g., TXT, JSON)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "individual": {
              "description": "The Individual associated with an entity.",
              "type": "string"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "individual",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "IndividualSupportingFile",
          "type": "object"
        },
        "name": "IndividualSupportingFile"
      },
      "ProcessDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "process_data_files",
          "target_class": "ProcessDataFile"
        },
        "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
        "json_schema": {
          "$defs": {
            "ProcessDataFileFormatEnum": {
              "description": "Enum to capture Process Data File formats.",
              "enum": [
                "BAI",
                "BAM",
                "BCF",
                "BED",
                "CRAM",
                "GFF",
                "HDF5",
                "SAM",
                "VCF",
                "WIG",
                "OTHER"
              ],
              "title": "ProcessDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Process Data File is a File that contains data produced by an Analysis or workflow.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analysis": {
              "description": "The alias of the Analysis that produced this Process Data File.",
              "type": "string"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/ProcessDataFileFormatEnum",
              "description": "The file format of the Process Data File (e.g., CRAM, BAM)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            }
          },
          "required": [
            "format",
            "analysis",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession"
          ],
          "title": "ProcessDataFile",
          "type": "object"
        },
        "name": "ProcessDataFile"
      },
      "Publication": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "publications",
          "target_class": "Publication"
        },
        "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
        "json_schema": {
          "$defs": {},
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Publication represents an article that is published. The minimum expectation is that the publication has a valid DOI.",
          "properties": {
            "abstract": {
              "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this Study.",
              "type": "string"
            },
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "author": {
              "description": "Author(s) of this Publication.",
              "type": "string"
            },
            "doi": {
              "description": "DOI identifier of a publication.",
              "type": "string"
            },
            "journal": {
              "description": "The name of the journal.",
              "type": "string"
            },
            "study": {
              "description": "The Study entity associated with this Publication.",
              "type": "string"
            },
            "title": {
              "description": "The title for this Publication.",
              "type": "string"
            },
            "xref": {
              "description": "One or more cross-references for this Publication.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "year": {
              "description": "The year in which the paper was published.",
              "type": "integer"
            }
          },
          "required": [
            "study",
            "doi",
            "alias",
            "accession"
          ],
          "title": "Publication",
          "type": "object"
        },
        "name": "Publication"
      },
      "ResearchDataFile": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "research_data_files",
          "target_class": "ResearchDataFile"
        },
        "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
        "json_schema": {
          "$defs": {
            "ResearchDataFileFormatEnum": {
              "description": "Enum to capture Research Data File formats.",
              "enum": [
                "FASTA",
                "FASTQ",
                "UBAM",
                "FAST5",
                "RAW",
                "D",
                "MZML",
                "MZDATA",
                "OTHER"
              ],
              "title": "ResearchDataFileFormatEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Research Data File is a File that contains raw data originating from an Experiment.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "analyses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dataset": {
              "description": "The Dataset alias associated with this File.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "description": "The aliases of the Experiments that produced this Research Data File.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "format": {
              "$ref": "#/$defs/ResearchDataFileFormatEnum",
              "description": "The file format of the Research Data File (e.g., FASTQ, uBAM, FASTA)."
            },
            "included_in_submission": {
              "description": "Whether a File is included in the Submission or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The given filename.",
              "type": "string"
            },
            "sequencing_lane_id": {
              "description": "The identifier of a sequencing lane.",
              "type": "string"
            },
            "technical_replicate": {
              "description": "An integer to indicate the technical replicate of this File.",
              "type": "integer"
            }
          },
          "required": [
            "format",
            "technical_replicate",
            "experiments",
            "name",
            "dataset",
            "included_in_submission",
            "alias",
            "accession",
            "analyses"
          ],
          "title": "ResearchDataFile",
          "type": "object"
        },
        "name": "ResearchDataFile"
      },
      "Sample": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "samples",
          "target_class": "Sample"
        },
        "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
        "json_schema": {
          "$defs": {
            "AgeRangeEnum": {
              "description": "Enum to capture the age range that an Indiviudal belongs to.",
              "enum": [
                "0_TO_5",
                "6_TO_10",
                "11_TO_15",
                "16_TO_20",
                "21_TO_25",
                "26_TO_30",
                "31_TO_35",
                "36_TO_40",
                "41_TO_45",
                "46_TO_50",
                "51_TO_55",
                "56_TO_60",
                "61_TO_65",
                "66_TO_70",
                "71_TO_75",
                "76_TO_80",
                "81_OR_OLDER",
                "UNKNOWN"
              ],
              "title": "AgeRangeEnum",
              "type": "string"
            },
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "CaseControlStatusEnum": {
              "description": "Enum to capture whether a condition corresponds to a case or a control condition.",
              "enum": [
                "CASE",
                "CONTROL",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "CaseControlStatusEnum",
              "type": "string"
            },
            "DiseaseOrHealthyEnum": {
              "description": "Enum to capture whether a condition corresponds to a disease or a healthy state.",
              "enum": [
                "DISEASE",
                "HEALTHY",
                "NOT_APPLICABLE"
              ],
              "title": "DiseaseOrHealthyEnum",
              "type": "string"
            },
            "IsolationEnum": {
              "description": "Describes how biomaterial was isolated.",
              "enum": [
                "BLOOD_DRAW",
                "SURGICAL_REMOVAL",
                "SALIVA_COLLECTION",
                "BUCCAL_SWAB"
              ],
              "title": "IsolationEnum",
              "type": "string"
            },
            "SampleTypeEnum": {
              "description": "The type of a sample",
              "enum": [
                "CF_DNA",
                "DEPLETED_RNA",
                "DS_DNA_CHIP",
                "FFPE_DNA",
                "FFPE_TOTAL_RNA",
                "GENOMIC_DNA",
                "PCR_PRODUCTS",
                "POLY_A_RNA",
                "SINGLE_CELL_DNA",
                "SINGLE_CELL_RNA",
                "SINGLE_CELL_NUCLEI",
                "SMALL_RNA",
                "TOTAL_RNA"
              ],
              "title": "SampleTypeEnum",
              "type": "string"
            },
            "StorageEnum": {
              "description": "Enum to capture how a Sample or Biospecimen was stored.",
              "enum": [
                "REFRIGERATOR",
                "FREEZER",
                "ULTRA_LOW_FREEZER",
                "CRYOGENIC_FREEZER",
                "NONE",
                "OTHER",
                "UNKNOWN"
              ],
              "title": "StorageEnum",
              "type": "string"
            },
            "VitalStatusEnum": {
              "description": "Enum to capture the vital status of an individual.",
              "enum": [
                "ALIVE",
                "DECEASED",
                "UNKNOWN"
              ],
              "title": "VitalStatusEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use.  It is prepared from a Biospecimen.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "Key/value pairs corresponding to an entity.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "biological_replicate": {
              "description": "An integer to indicate the number of a biological replicate.",
              "type": "integer"
            },
            "biospecimen_age_at_sampling": {
              "$ref": "#/$defs/AgeRangeEnum",
              "description": "The age of the Individual at the time of isolating this biospecimen."
            },
            "biospecimen_description": {
              "description": "A concise description about the Biospecimen source, the collection method, and the protocol which was followed to process this Biospecimen.",
              "type": "string"
            },
            "biospecimen_isolation": {
              "$ref": "#/$defs/IsolationEnum",
              "description": "Method or device employed for collecting/isolating this Biospecimen."
            },
            "biospecimen_name": {
              "description": "A descriptive name of this Biospecimen (e.g., GHGAB_caudate_nucleus_biospecimen). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "biospecimen_storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which this Biospecimen is stored."
            },
            "biospecimen_tissue_id": {
              "description": "The corresponding ontology ID for the biospecimen_tissue_term (e.g., BTO:0000671, BTO:0000089, BTO:0000848).",
              "type": "string"
            },
            "biospecimen_tissue_term": {
              "description": "The tissue this Biospecimen originated from. Should be a term from the BRENDA Tissue Ontology vocabulary (e.g., kidney, blood, melanoma cell).",
              "type": "string"
            },
            "biospecimen_type": {
              "description": "The type of Biospecimen.",
              "type": "string"
            },
            "biospecimen_vital_status_at_sampling": {
              "$ref": "#/$defs/VitalStatusEnum",
              "description": "Vital Status of the Individual at the time of isolating this biospecimen (e.g., alive)."
            },
            "case_control_status": {
              "$ref": "#/$defs/CaseControlStatusEnum",
              "description": "Whether a Condition corresponds to a treatment or a control."
            },
            "description": {
              "description": "A concise description about the Sample source, the collection method, and the protocol which was followed to process this Sample.",
              "type": "string"
            },
            "disease_or_healthy": {
              "$ref": "#/$defs/DiseaseOrHealthyEnum",
              "description": "Whether a Condition corresponds to a disease or a healthy state."
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "experiments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "individual": {
              "description": "The alias of the Individual entity from which this Biospecimen or Sample was derived.",
              "type": "string"
            },
            "name": {
              "description": "A descriptive name of this Sample (e.g., GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1). This property must not include any personally identifiable data.",
              "type": "string"
            },
            "storage": {
              "$ref": "#/$defs/StorageEnum",
              "description": "Methods by which a Sample is stored."
            },
            "type": {
              "$ref": "#/$defs/SampleTypeEnum",
              "description": "The type of the Sample."
            },
            "xref": {
              "description": "One or more cross-references for this Sample (e.g., this Sample may have an EBI BioSamples accession ID).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "individual",
            "name",
            "description",
            "case_control_status",
            "biospecimen_age_at_sampling",
            "biospecimen_tissue_term",
            "biospecimen_tissue_id",
            "alias",
            "accession",
            "experiments"
          ],
          "title": "Sample",
          "type": "object"
        },
        "name": "Sample"
      },
      "Study": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "studies",
          "target_class": "Study"
        },
        "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
        "json_schema": {
          "$defs": {
            "Attribute": {
              "additionalProperties": false,
              "description": "A key/value pair that further characterizes an entity.",
              "properties": {
                "key": {
                  "description": "The key of an attribute.",
                  "type": "string"
                },
                "key_type": {
                  "description": "A semantic type that characterizes the attribute key (e.g., oxygen saturation measurement (MAXO:0000616)).",
                  "type": "string"
                },
                "value": {
                  "description": "The value for an attribute (e.g., a numerical value without the units).",
                  "type": "string"
                },
                "value_type": {
                  "description": "The value_type that characterizes the attribute value (e.g., percentage (SIO:001413)).",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "title": "Attribute",
              "type": "object"
            },
            "StudyTypeEnum": {
              "description": "Enum to capture the type of a study.",
              "enum": [
                "CANCER_GENOMICS",
                "EPIGENETICS",
                "EXOME_SEQUENCING",
                "FORENSIC_GENETICS",
                "PALEO_GENOMICS",
                "GENE_REGULATION_STUDY",
                "METAGENOMICS",
                "POOLED_CLONE_SEQUENCING",
                "POPULATION_GENOMICS",
                "RNASEQ",
                "RESEQUENCING",
                "SYNTHETIC_GENOMICS",
                "TRANSCRIPTOME_ANALYSIS",
                "WHOLE_GENOME_SEQUENCING",
                "GWAS",
                "RARE_DISEASE",
                "CANCER",
                "COMMON_DISEASE",
                "NEURODEGENERATIVE_DISEASE",
                "CASE_CONTROL",
                "FAMILY",
                "HEREDITARY_DISEASE",
                "GENOMICS",
                "EPIGENOMICS",
                "TRANSCRIPTOMICS",
                "SINGLE_CELL_SEQUENCING",
                "SINGLE_CENTER",
                "MULTI_CENTER",
                "COHORT",
                "LONGITUDINAL",
                "TIME_SERIES",
                "INTERVENTIONAL",
                "NON_INTERVENTIONAL",
                "COMMUNITY_BASED",
                "OTHER"
              ],
              "title": "StudyTypeEnum",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "A Study is an experimental investigation of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
          "properties": {
            "accession": {
              "description": "The accession for an entity.",
              "type": "string"
            },
            "affiliations": {
              "description": "The affiliations associated with this Study.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "alias": {
              "description": "The alias for an entity at the time of submission.",
              "type": "string"
            },
            "attributes": {
              "description": "One or more attributes that further characterize this Study.",
              "items": {
                "$ref": "#/$defs/Attribute"
              },
              "type": "array"
            },
            "datasets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "description": "A detailed description (abstract) that describes the goals of this Study.",
              "type": "string"
            },
            "ega_accession": {
              "description": "The EGA accession ID of an entity.",
              "type": "string"
            },
            "publications": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": {
              "description": "A comprehensive title for this Study.",
              "type": "string"
            },
            "types": {
              "description": "One or more types of this Study (e.g., Cancer Genomics, Epigenetics, Exome Sequencing).",
              "items": {
                "$ref": "#/$defs/StudyTypeEnum"
              },
              "type": "array"
            }
          },
          "required": [
            "title",
            "description",
            "types",
            "affiliations",
            "alias",
            "accession",
            "datasets",
            "publications"
          ],
          "title": "Study",
          "type": "object"
        },
        "name": "Study"
      }
    }
  },
  {
    "description": "stats_public",
    "name": "stats_public",
    "resource_classes": {
      "DatasetStats": {
        "anchor_point": {
          "identifier_slot": "accession",
          "root_slot": "dataset_stats",
          "target_class": "DatasetStats"
        },
        "description": null,
        "json_schema": {
          "$defs": {
            "AutoGeneratedClass4": {
              "additionalProperties": false,
              "description": "",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "stats": {
                  "$ref": "#/$defs/AutoGeneratedClass0"
                }
              },
              "title": "AutoGeneratedClass4",
              "type": "object"
            },
            "AutoGeneratedClass5": {
              "additionalProperties": false,
              "description": "",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "stats": {
                  "$ref": "#/$defs/AutoGeneratedClass1"
                }
              },
              "title": "AutoGeneratedClass5",
              "type": "object"
            },
            "AutoGeneratedClass6": {
              "additionalProperties": false,
              "description": "",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "stats": {
                  "$ref": "#/$defs/AutoGeneratedClass2"
                }
              },
              "title": "AutoGeneratedClass6",
              "type": "object"
            },
            "AutoGeneratedClass7": {
              "additionalProperties": false,
              "description": "",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "stats": {
                  "$ref": "#/$defs/AutoGeneratedClass3"
                }
              },
              "title": "AutoGeneratedClass7",
              "type": "object"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "accession": {
              "type": "string"
            },
            "dac_email": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "experiments_summary": {
              "$ref": "#/$defs/AutoGeneratedClass6"
            },
            "files_summary": {
              "$ref": "#/$defs/AutoGeneratedClass7"
            },
            "samples_summary": {
              "$ref": "#/$defs/AutoGeneratedClass4"
            },
            "studies_summary": {
              "$ref": "#/$defs/AutoGeneratedClass5"
            },
            "title": {
              "type": "string"
            },
            "types": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "accession"
          ],
          "title": "DatasetStats",
          "type": "object"
        },
        "name": "DatasetStats"
      }
    }
  }
]
